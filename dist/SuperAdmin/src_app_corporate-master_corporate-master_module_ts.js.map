{"version":3,"file":"src_app_corporate-master_corporate-master_module_ts.js","mappings":"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","sources":["./src/app/_service/corporate.service.ts","./src/app/corporate-master/add-corporate-user/add-corporate-user.component.ts","./src/app/corporate-master/add-corporate-user/add-corporate-user.component.html","./src/app/corporate-master/add-corporate/add-corporate.component.ts","./src/app/corporate-master/add-corporate/add-corporate.component.html","./src/app/corporate-master/corporate-listing/corporate-listing.component.ts","./src/app/corporate-master/corporate-listing/corporate-listing.component.html","./src/app/corporate-master/corporate-master-routing.module.ts","./src/app/corporate-master/corporate-master.module.ts","./src/app/corporate-master/corporate-user-listing/corporate-user-listing.component.ts","./src/app/corporate-master/corporate-user-listing/corporate-user-listing.component.html","./src/app/corporate-master/corporate-user-view/corporate-user-view.component.ts","./src/app/corporate-master/corporate-user-view/corporate-user-view.component.html","./src/app/corporate-master/corporate-view/corporate-view.component.ts","./src/app/corporate-master/corporate-view/corporate-view.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CorporateService {\n  public _api_url = environment.api_url;\n  _drivingSafetyAccessToken: any;\n\n  constructor(public _http: HttpClient) {\n    this._drivingSafetyAccessToken = localStorage.getItem(\n      '_drivingSafetyAccessToken'\n    );\n  }\n\n  public corporateList(data: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .get(\n        `${this._api_url}corporate/get-all-corporate?page=${data.page}&count=${data.count}&search=${data.filter}&scolumns=${data.scolumns}`,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  public corporateUserView(id: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .get(`${this._api_url}user/get-profile/${id}`, requestOptions)\n      .pipe(catchError(this.error));\n  }\n\n  public corporateView(id: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .get(`${this._api_url}corporate/get-corporate/${id}`, requestOptions)\n      .pipe(catchError(this.error));\n  }\n\n  public addCorporate(corporateParams: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .post(\n        `${this._api_url}corporate/add-corporate`,\n        corporateParams,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  public addCorporateUser(corporateParams: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .post(`${this._api_url}user/register`, corporateParams, requestOptions)\n      .pipe(catchError(this.error));\n  }\n\n  public editCorporate(editCorporateParams: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .post(\n        `${this._api_url}corporate/update-corporate`,\n        editCorporateParams,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  public editCorporateUser(editCorporateParams: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .post(\n        `${this._api_url}user/update-profile`,\n        editCorporateParams,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  public deleteCorporate(id: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .delete(`${this._api_url}corporate/delete/${id}`, requestOptions)\n      .pipe(catchError(this.error));\n  }\n\n  public deleteCorporateUser(id: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .delete(`${this._api_url}user/delete/${id}`, requestOptions)\n      .pipe(catchError(this.error));\n  }\n\n  // Handle Errors\n  error(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CorporateService } from 'src/app/_service/corporate.service';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\n@Component({\n  selector: 'app-add-corporate-user',\n  templateUrl: './add-corporate-user.component.html',\n  styleUrls: ['./add-corporate-user.component.css'],\n})\nexport class AddCorporateUserComponent implements OnInit {\n  genderChange: EventEmitter<string> = new EventEmitter<string>();\n\n  onGenderChange(event: any) {\n    const selectedGender: string = event.target.value;\n    this.genderChange.emit(selectedGender);\n  }\n\n  addCorporateForm: any = FormGroup;\n  corporateList: any[] = [];\n  corporateCode: any;\n  corporateDetails: any;\n  submitted = false;\n  count = 5;\n  fieldTextType!: boolean;\n  fieldTextType1!: boolean;\n\n  public corporateId: any;\n  public corporatecorporateCode: any;\n\n  public passwordMatched = false;\n  @ViewChild('confirmPassword', { static: false }) confirmPassword!: ElementRef;\n  selectedLang = localStorage.getItem('selectedLang');\n\n  constructor(\n    private fb: FormBuilder,\n    private corporateService: CorporateService,\n    private _ToastrManager: ToastrManager,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.corporateId = params.get('id');\n    });\n\n    this.route.paramMap.subscribe((params) => {\n      this.corporateCode = params.get('code');\n    });\n  }\n\n  ngOnInit(): void {\n    this.formValidation();\n    this.getCorporateDetails();\n  }\n\n  formValidation() {\n    if (this.corporateId) {\n      this.addCorporateForm = this.fb.group({\n        name: ['', Validators.required],\n        email: [\n          '',\n          [\n            Validators.required,\n            Validators.email,\n            Validators.pattern(\n              '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'\n            ),\n          ],\n        ],\n        phone: [\n          '',\n          [\n            Validators.required,\n            Validators.pattern(/^\\+?\\d+$/),\n            Validators.pattern('[0-9]*'),\n            Validators.minLength(11),\n          ],\n        ],\n        gender: ['', [Validators.required]],\n        corporateCode: [\n          '',\n          Validators.required,\n          Validators.pattern(/^\\d{5}$/),\n          Validators.minLength(5),\n          Validators.maxLength(5),\n        ],\n      });\n    } else {\n      this.addCorporateForm = this.fb.group({\n        name: ['', Validators.required],\n        email: [\n          '',\n          [\n            Validators.required,\n            Validators.email,\n            Validators.pattern(\n              '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'\n            ),\n          ],\n        ],\n        phone: [\n          '',\n          [\n            Validators.required,\n            Validators.pattern(/^\\+?\\d+$/),\n            Validators.pattern('[0-9]*'),\n            Validators.minLength(11),\n          ],\n        ],\n        gender: ['', [Validators.required]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.pattern(\n              '(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,}'\n            ),\n          ],\n        ],\n        confirmPassword: ['', [Validators.required]],\n        corporateCode: [\n          this.corporateCode,\n          [\n            Validators.required,\n            Validators.pattern(/^\\d{5}$/),\n            Validators.minLength(5),\n            Validators.maxLength(5),\n          ],\n        ],\n      });\n    }\n  }\n\n  checkMatch(pwd1: string, pwd2: string) {\n    this.passwordMatched = pwd1 == pwd2 ? true : false;\n  }\n\n  //toggle password\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n  toggleFieldTextType1() {\n    this.fieldTextType1 = !this.fieldTextType1;\n  }\n\n  get f() {\n    return this.addCorporateForm.controls;\n  }\n  onSubmit() {\n    if (this.corporateId) {\n      let data = this.addCorporateForm.value;\n      data.corporateCode = this.addCorporateForm.get('corporateCode').value;\n      data._id = this.corporateId;\n      data.roles = 'SUBADMIN';\n      data.deviceType = 'web';\n      this.corporateService.editCorporateUser(data).subscribe({\n        next: (result) => {\n          if (result.statusCode == 200) {\n            setTimeout(() => {\n              const successMessage =\n                this.selectedLang === 'en'\n                  ? 'Corporate User Updated Successfully'\n                  : '企業ユーザーは正常に更新されました';\n              this._ToastrManager.successToastr(successMessage);\n              this.router.navigate(['/DS/corporate/user']);\n            }, 1000);\n          } else {\n            const errorMessage =\n              this.selectedLang === 'en'\n                ? 'Email is already exist!'\n                : '電子メールはすでに存在します！';\n            this._ToastrManager.errorToastr(errorMessage);\n          }\n        },\n      });\n    } else {\n      let data = this.addCorporateForm.value;\n      data.corporateCode = this.addCorporateForm.get('corporateCode').value;\n      data.roles = 'SUBADMIN';\n      data.deviceType = 'web';\n      this.corporateService.addCorporateUser(data).subscribe({\n        next: (result) => {\n          if (result.statusCode == 200) {\n            setTimeout(() => {\n              const successMessage =\n                this.selectedLang === 'en'\n                  ? 'Corporate User Added Successfully'\n                  : '企業ユーザーが正常に追加されました';\n              this._ToastrManager.successToastr(successMessage);\n              this.router.navigate(['/DS/corporate/user']);\n            }, 1000);\n          } else {\n            const errorMessage =\n              this.selectedLang === 'en'\n                ? 'Email is already exist!'\n                : '電子メールはすでに存在します！';\n            this._ToastrManager.errorToastr(errorMessage);\n          }\n        },\n      });\n    }\n  }\n\n  getCorporateDetails = () => {\n    if (this.corporateId) {\n      this.spinner.show();\n      this.corporateService.corporateUserView(this.corporateId).subscribe({\n        next: (res) => {\n          this.corporateDetails = res.data[0];\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 500);\n          this.setData(this.corporateDetails);\n        },\n        error: (err) => {},\n      });\n    }\n  };\n\n  getAllCorporateDetails = () => {\n    let data = {\n      page: 1,\n      filter: '',\n      count: this.count,\n    };\n    this.spinner.show();\n    this.corporateService.corporateList(data).subscribe({\n      next: (res) => {\n        this.corporateList = res.data.data;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  };\n\n  setData(data: any) {\n    this.addCorporateForm.patchValue({\n      name: data?.name,\n      email: data?.email,\n      phone: data?.phone,\n      gender: data?.gender,\n      password: data?.password,\n      corporateCode: data?.corporateCode,\n    });\n  }\n\n  setcorporateCode(data: any) {\n    this.addCorporateForm.patchValue({});\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  onCancel(): void {\n    this.submitted = false;\n    this.addCorporateForm.reset();\n    this.confirmPassword.nativeElement.value = '';\n  }\n\n  fiveDigitValidator(control: any) {\n    const value = control.value;\n\n    if (!/^\\d{5}$/.test(value)) {\n      return { invalidFiveDigit: true };\n    }\n\n    return null; // Validation passed\n  }\n\n  isSubmitDisabled() {\n    return this.addCorporateForm.pristine || this.addCorporateForm.invalid;\n  }\n}\n","<section class=\"content wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h2>\n        <b *ngIf=\"corporateId\">{{\n          \"corporateUser.EditCorporateUser\" | translate\n        }}</b>\n        <b *ngIf=\"!corporateId\">{{\n          \"corporateUser.AddCorporateUser\" | translate\n        }}</b>\n      </h2>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'corporateUser.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form [formGroup]=\"addCorporateForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"corporateUser.Name\" | translate }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'corporateUser.EnterName' | translate }}\"\n                    maxlength=\"20\"\n                    formControlName=\"name\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.name.errors && (f.name.dirty || f.name.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('name').hasError('maxlength')\"\n                  >\n                    {{\n                      \"corporateUser.Corporateusernamemustbeatmost20characterslong.\"\n                        | translate\n                    }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('name').hasError('required')\"\n                  >\n                    {{\n                      \"corporateUser.Corporateusernameisrequired!\" | translate\n                    }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('name').hasError('pattern')\"\n                  >\n                    {{ \"corporateUser.Enteravalidname!\" | translate }}\n                  </label>\n                </span>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"corporateUser.EmailId\" | translate }}</label>\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'corporateUser.EnterEmail' | translate }}\"\n                    formControlName=\"email\"\n                    pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.email.errors && (f.email.dirty || f.email.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('email').hasError('required')\"\n                  >\n                    {{ \"corporateUser.EmailisRequired!\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('email').hasError('pattern')\"\n                  >\n                    {{ \"corporateUser.Enteravalidemailaddress!\" | translate }}\n                  </label>\n                </span>\n              </div>\n\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"corporateUser.PhoneNumber\" | translate }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{\n                      'corporateUser.EnterPhoneNumber' | translate\n                    }}\"\n                    pattern=\"[0-9]*\"\n                    minlength=\"11\"\n                    maxlength=\"11\"\n                    formControlName=\"phone\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.phone.errors && (f.phone.dirty || f.phone.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('phone').hasError('minlength')\"\n                  >\n                    {{ \"corporateUser.PhoneNumbershouldbe10digit\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('phone').hasError('required')\"\n                  >\n                    {{ \"corporateUser.PhoneNumberisrequired!\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('phone').hasError('pattern')\"\n                  >\n                    {{\n                      \"corporateUser.PhoneNumbershouldbeonlynumbers\" | translate\n                    }}\n                  </label>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"corporateUser.Gender\" | translate }}</label>\n                  <select\n                    name=\"gender\"\n                    class=\"form-control\"\n                    formControlName=\"gender\"\n                    (change)=\"onGenderChange($event)\"\n                  >\n                    <option selected=\"selected\" value=\"\">\n                      {{ \"corporateUser.SelectGender\" | translate }}\n                    </option>\n                    <option value=\"Male\">\n                      {{ \"corporateUser.Male\" | translate }}\n                    </option>\n                    <option value=\"Female\">\n                      {{ \"corporateUser.Female\" | translate }}\n                    </option>\n                    <option value=\"Other\">\n                      {{ \"corporateUser.Other\" | translate }}\n                    </option>\n                  </select>\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.gender.errors && (f.gender.dirty || f.gender.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('gender').hasError('required')\"\n                  >\n                    {{ \"corporateUser.Genderisrequired!\" | translate }}\n                  </label>\n                </span>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-4\" [hidden]=\"corporateId\">\n                <div class=\"form-group mb-3\">\n                  <label>{{\n                    \"corporateUser.CreatePassword\" | translate\n                  }}</label>\n                  <input\n                    [type]=\"fieldTextType ? 'text' : 'password'\"\n                    type=\"password\"\n                    class=\"form-control\"\n                    formControlName=\"password\"\n                    placeholder=\"{{\n                      'corporateUser.EnterPassword' | translate\n                    }}\"\n                    #password\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                    id=\"password\"\n                  />\n                  <i\n                    [ngClass]=\"{\n                      'fa-eye-slash': !fieldTextType,\n                      'fa-eye': fieldTextType\n                    }\"\n                    (click)=\"toggleFieldTextType()\"\n                    class=\"fas fa-eye-slash\"\n                    id=\"eye\"\n                  ></i>\n                </div>\n                <span\n                  *ngIf=\"\n                    !corporateId &&\n                    (submitted ||\n                      (f.password.errors &&\n                        (f.password.dirty || f.password.touched)))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"\n                      addCorporateForm.get('password').hasError('required')\n                    \"\n                  >\n                    {{ \"corporateUser.Passwordisrequired!\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addCorporateForm.get('password').hasError('pattern')\"\n                  >\n                    {{\n                      \"corporateUser.Mustcontainatleastonenumber,oneuppercaseandonelowercaseletter,onespecialcharacter,and atleast8characters.\"\n                        | translate\n                    }}\n                  </label>\n                </span>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-4\" *ngIf=\"!corporateId\">\n                <div class=\"form-group mb-3\">\n                  <label>{{\n                    \"corporateUser.Re-enterPassword\" | translate\n                  }}</label>\n                  <input\n                    [type]=\"fieldTextType1 ? 'text' : 'password'\"\n                    type=\"password\"\n                    class=\"form-control\"\n                    id=\"confirmPassword\"\n                    formControlName=\"confirmPassword\"\n                    placeholder=\"{{\n                      'corporateUser.EnterConfirmPassword' | translate\n                    }}\"\n                    #confirmPassword\n                    (blur)=\"checkMatch(password.value, confirmPassword.value)\"\n                  />\n                  <i\n                    [ngClass]=\"{\n                      'fa-eye-slash': !fieldTextType1,\n                      'fa-eye': fieldTextType1\n                    }\"\n                    (click)=\"toggleFieldTextType1()\"\n                    class=\"fas fa-eye-slash\"\n                    id=\"eye\"\n                  ></i>\n                </div>\n                <div\n                  *ngIf=\"\n                    addCorporateForm\n                      .get('confirmPassword')\n                      .hasError('required') &&\n                    addCorporateForm.get('confirmPassword').touched\n                  \"\n                  class=\"text-danger\"\n                >\n                  {{ \"corporateUser.Confirmpasswordisrequired\" | translate }}\n                </div>\n                <div\n                  *ngIf=\"!this.passwordMatched && confirmPassword.value != ''\"\n                  class=\"text-danger\"\n                >\n                  {{ \"corporateUser.Passwordnotmatched\" | translate }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"corporateUser.CorporateCode\" | translate }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    formControlName=\"corporateCode\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                    placeholder=\"{{\n                      'corporateUser.EnterBusinessCorporateCode' | translate\n                    }}\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.corporateCode.errors &&\n                      (f.corporateCode.dirty || f.corporateCode.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"\n                      addCorporateForm.get('corporateCode').hasError('required')\n                    \"\n                  >\n                    {{ \"corporateUser.corporateCodeisRequired\" | translate }}\n                  </label>\n\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"\n                      addCorporateForm.get('corporateCode').hasError('pattern')\n                    \"\n                  >\n                    {{ \"corporateUser.Businesscodeshouldbe\" | translate }}\n                  </label>\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div\n            class=\"card-footer footer-btn-block border-0 bg-transparent\"\n            style=\"margin-left: -0.5%\"\n          >\n            <button\n              class=\"btn btn-primary graident btn-small custom-button\"\n              [disabled]=\"addCorporateForm.invalid || !passwordMatched\"\n              type=\"submit\"\n              *ngIf=\"!corporateId\"\n            >\n              {{ \"corporateUser.AddCorporateUser\" | translate }}\n            </button>\n            <button\n              class=\"btn btn-primary graident btn-small custom-button\"\n              [disabled]=\"isSubmitDisabled()\"\n              type=\"submit\"\n              *ngIf=\"corporateId\"\n            >\n              {{ \"corporateUser.Update\" | translate }}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary btn-small custom-button mt-2 mt-sm-0 ml-sm-2\"\n              (click)=\"onCancel()\"\n            >\n              {{ \"corporateUser.Cancel\" | translate }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { CorporateService } from 'src/app/_service/corporate.service';\n\n@Component({\n  selector: 'app-add-corporate',\n  templateUrl: './add-corporate.component.html',\n  styleUrls: ['./add-corporate.component.css'],\n})\nexport class AddCorporateComponent implements OnInit {\n  addCorporateForm: any = FormGroup;\n  corporateDetails: any;\n  submitted = false;\n  fieldTextType!: boolean;\n  corporateId: any;\n  selectedLang = localStorage.getItem('selectedLang');\n\n  constructor(\n    private fb: FormBuilder,\n    private _ToastrManager: ToastrManager,\n    private corporateService: CorporateService,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.corporateId = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.formValidation();\n    this.getCorporateDetails();\n  }\n\n  formValidation() {\n    this.addCorporateForm = this.fb.group({\n      name: ['', Validators.required],\n      code: ['', [Validators.required, Validators.pattern(/^\\d{5}$/)]],\n    });\n  }\n\n  get f() {\n    return this.addCorporateForm.controls;\n  }\n\n  onSubmit() {\n    if (this.corporateId) {\n      let data = this.addCorporateForm.value;\n      data._id = this.corporateId;\n      this.corporateService.editCorporate(data).subscribe((result) => {\n        if (result.statusCode == 200) {\n          setTimeout(() => {\n            const successMessage =\n              this.selectedLang === 'en'\n                ? 'Corporate Updated Successfully'\n                : '会社が正常に更新されました';\n            this._ToastrManager.successToastr(successMessage);\n            this.router.navigate(['/DS/corporate']);\n          }, 1000);\n        } else {\n          const errorMessage =\n            this.selectedLang === 'en'\n              ? 'Corporate master Already Exists!'\n              : '法人マスターはすでに存在します!';\n          this._ToastrManager.errorToastr(errorMessage);\n        }\n      });\n    } else {\n      let data = this.addCorporateForm.value;\n      this.corporateService.addCorporate(data).subscribe(\n        (result) => {\n          if (result.statusCode == 200) {\n            setTimeout(() => {\n              const successMessage =\n                this.selectedLang === 'en'\n                  ? 'Corporate Added Successfully'\n                  : '企業が正常に追加されました';\n              this._ToastrManager.successToastr(successMessage);\n              this.router.navigate(['/DS/corporate']);\n            }, 1000);\n          } else {\n            const errorMessage =\n              this.selectedLang === 'en'\n                ? 'Corporate master Already Exists!'\n                : '法人マスターはすでに存在します!';\n            this._ToastrManager.errorToastr(errorMessage);\n          }\n        },\n        (error) => {}\n      );\n    }\n  }\n\n  getCorporateDetails = () => {\n    if (this.corporateId) {\n      this.spinner.show();\n      this.corporateService.corporateView(this.corporateId).subscribe({\n        next: (res) => {\n          this.corporateDetails = res.data[0];\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 500);\n          this.setData(this.corporateDetails);\n        },\n        error: (err) => {},\n      });\n    }\n  };\n\n  setData(data: any) {\n    this.addCorporateForm.patchValue({\n      name: data?.name,\n      code: data?.code,\n    });\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  onCancel(): void {\n    this.submitted = false;\n    this.addCorporateForm.reset();\n  }\n\n  isSubmitDisabled() {\n    return this.addCorporateForm.pristine || this.addCorporateForm.invalid;\n  }\n}\n","<section class=\"content wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h2>\n        <b *ngIf=\"corporateId\">{{\n          \"corporateMaster.EditCorporate\" | translate\n        }}</b>\n        <b *ngIf=\"!corporateId\">{{\n          \"corporateMaster.AddCorporate\" | translate\n        }}</b>\n      </h2>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'corporateMaster.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form [formGroup]=\"addCorporateForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"card-body\">\n            <div class=\"container-fluid\">\n              <div class=\"row\">\n                <div class=\"col-12 col-md-6 col-lg-12\">\n                  <div class=\"form-group mb-3\">\n                    <label class=\"label\">{{\n                      \"corporateMaster.CorporateName\" | translate\n                    }}</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control custom-input\"\n                      placeholder=\"{{\n                        'corporateMaster.EnterCorporateName' | translate\n                      }}\"\n                      maxlength=\"40\"\n                      formControlName=\"name\"\n                      [ngClass]=\"{ 'form-submitted': submitted }\"\n                    />\n                  </div>\n                  <span\n                    *ngIf=\"\n                      submitted ||\n                      (f.name.errors && (f.name.dirty || f.name.touched))\n                    \"\n                  >\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"addCorporateForm.get('name').hasError('maxlength')\"\n                    >\n                      {{\n                        \"corporateMaster.CorporateNamemustbeatmost40characterslong.\"\n                          | translate\n                      }}\n                    </label>\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"addCorporateForm.get('name').hasError('required')\"\n                    >\n                      {{\n                        \"corporateMaster.Corporatenameisrequired!\" | translate\n                      }}\n                    </label>\n                  </span>\n                </div>\n                <div class=\"col-12 col-md-6 col-lg-12\">\n                  <div class=\"form-group mb-3\">\n                    <label class=\"label\">{{\n                      \"corporateMaster.CorporateCode\" | translate\n                    }}</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control custom-input\"\n                      formControlName=\"code\"\n                      [ngClass]=\"{ 'form-submitted': submitted }\"\n                      placeholder=\"{{\n                        'corporateMaster.EnterCorporateCode' | translate\n                      }}\"\n                    />\n                  </div>\n                  <span\n                    *ngIf=\"\n                      submitted ||\n                      (f.code.errors && (f.code.dirty || f.code.touched))\n                    \"\n                  >\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"addCorporateForm.get('code').hasError('required')\"\n                    >\n                      {{\n                        \"corporateMaster.CorporateCodeisrequired!\" | translate\n                      }}\n                    </label>\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"addCorporateForm.get('code').hasError('pattern')\"\n                    >\n                      {{ \"corporateUser.Businesscodeshouldbe\" | translate }}\n                    </label>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div\n            class=\"card-footer footer-btn-block border-0 bg-transparent\"\n            style=\"margin-left: -0.2%\"\n          >\n            <button\n              [disabled]=\"isSubmitDisabled()\"\n              class=\"btn btn-primary graident btn-small custom-button\"\n              type=\"submit\"\n              *ngIf=\"corporateId\"\n            >\n              {{ \"corporateMaster.Update\" | translate }}\n            </button>\n            <button\n              [disabled]=\"isSubmitDisabled()\"\n              class=\"btn btn-primary graident btn-small custom-button\"\n              type=\"submit\"\n              *ngIf=\"!corporateId\"\n            >\n              {{ \"corporateMaster.AddCorporate\" | translate }}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary btn-small custom-button mt-2 mt-sm-0 ml-sm-2\"\n              (click)=\"onCancel()\"\n            >\n              {{ \"corporateMaster.Cancel\" | translate }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\nimport { Subject } from 'rxjs';\nimport { FunctionService } from 'src/app/_service/function.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport { CorporateService } from 'src/app/_service/corporate.service';\nimport { SortDirection } from '@swimlane/ngx-datatable';\nimport { UserAuthService } from 'src/app/_service/user-auth.service';\n\n@Component({\n  selector: 'app-corporate-listing',\n  templateUrl: './corporate-listing.component.html',\n  styleUrls: ['./corporate-listing.component.css'],\n})\nexport class CorporateListingComponent implements OnInit {\n  corporateList: any[] = [];\n  totaldocs: number = 10;\n  page: number = 1;\n  count = 10;\n  data: any;\n  driverCount: any;\n  deleteCorporate: any;\n\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement!: DataTableDirective;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject<any>();\n  public filterTerm!: string;\n\n  // Define a property to hold the current sorting parameters\n  sortColumn: string = '';\n  sortDirection: SortDirection = SortDirection.asc;\n\n  //datatable\n  dropdownList: any = [];\n  selectedItems: any = [];\n  dropdownSettings = {};\n\n  selectedLang = localStorage.getItem('selectedLang');\n\n  constructor(\n    private _FunctionService: FunctionService,\n    private spinner: NgxSpinnerService,\n    private _ToastrManager: ToastrManager,\n    private corporateService: CorporateService,\n    private _userAuthService: UserAuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.dtOptions = {};\n    this.getCorporateList(1);\n\n    this.dropdownList = [\n      {\n        id: 'name',\n        itemName: this.selectedLang == 'en' ? 'Corporate Name' : '会社名',\n      },\n      {\n        id: 'code',\n        itemName: this.selectedLang == 'en' ? 'Corporate Code' : '企業規範',\n      },\n    ];\n    this.selectedItems = this._userAuthService.getSearchList('driver');\n    this.dropdownSettings = {\n      singleSelection: false,\n      text: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      selectAllText: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      unSelectAllText:\n        this.selectedLang == 'en' ? 'UnSelect All' : 'すべて選択を解除',\n      enableSearchFilter: true,\n      classes: 'myclass custom-class multiselect-dropdown-blc',\n    };\n  }\n\n  getCorporateList = (page?: any) => {\n    let data = {\n      page: page ? page : this.page,\n      filter: this.filterTerm ? this.filterTerm : '',\n      count: this.count,\n      scolumns: '',\n    };\n\n    this._userAuthService.getSearchList('driver').forEach((element: any) => {\n      data.scolumns =\n        data.scolumns != '' ? data.scolumns + ',' + element.id : element.id;\n    });\n\n    this.corporateService.corporateList(data).subscribe({\n      next: (res) => {\n        this.corporateList = res.data.data;\n        this.totaldocs = res.data.total;\n        this.page = data.page;\n        setTimeout(() => {}, 500);\n      },\n      error: (err) => {},\n    });\n  };\n\n  pageChange(page: any) {\n    this.getCorporateList(page);\n  }\n\n  corporateDelete(corporateId: any) {\n    const cancelButtonText =\n      this.selectedLang == 'en' ? 'Cancel' : 'キャンセル';\n    const confirmButtonText = this.selectedLang == 'en' ? 'Yes' : 'はい';\n    Swal.fire({\n      title: this.selectedLang == 'en' ? 'Are you sure?' : '本気ですか？',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: confirmButtonText,\n      cancelButtonText: cancelButtonText,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.spinner.show();\n        this.corporateService.deleteCorporate(corporateId).subscribe({\n          next: (res) => {\n            if (res.statusCode === 200) {\n              this.deleteCorporate = res.data;\n              setTimeout(() => {\n                const successMessage =\n                  this.selectedLang === 'en'\n                    ? 'Corporate Master removed Successfully'\n                    : '法人マスターが正常に削除されました';\n                this._ToastrManager.successToastr(successMessage);\n                this.getCorporateList(this.page);\n                this.spinner.hide();\n              }, 500);\n            }\n          },\n          error: (err) => {},\n        });\n      }\n    });\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  sort(column: string) {\n    if (this.sortColumn === column) {\n      this.sortDirection =\n        this.sortDirection === SortDirection.asc\n          ? SortDirection.desc\n          : SortDirection.asc;\n    } else {\n      this.sortDirection = SortDirection.asc;\n      this.sortColumn = column;\n    }\n    this.corporateList.sort((a, b) => {\n      const aValue = a[this.sortColumn];\n      const bValue = b[this.sortColumn];\n      if (aValue < bValue)\n        return this.sortDirection === SortDirection.asc ? -1 : 1;\n      if (aValue > bValue)\n        return this.sortDirection === SortDirection.asc ? 1 : -1;\n      return 0;\n    });\n  }\n\n  onItemSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n  OnItemDeSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onDeSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n\n  isAscending: boolean = false;\n  isAscending1: boolean = false;\n  isAscending2: boolean = false;\n\n  toggleSortDirection() {\n    this.isAscending = !this.isAscending;\n  }\n\n  toggleSortDirection1() {\n    this.isAscending1 = !this.isAscending1;\n  }\n\n  toggleSortDirection2() {\n    this.isAscending2 = !this.isAscending2;\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h3>\n        <b>{{ \"corporateMaster.CorporateMaster\" | translate }}</b>\n      </h3>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'corporateMaster.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"main-sorting-header\">\n        <div class=\"sorting-block\">\n          <div class=\"select-block\">\n            <angular2-multiselect\n              [data]=\"dropdownList\"\n              [(ngModel)]=\"selectedItems\"\n              [settings]=\"dropdownSettings\"\n              (onSelect)=\"onItemSelect($event)\"\n              (onDeSelect)=\"OnItemDeSelect($event)\"\n              (onSelectAll)=\"onSelectAll($event)\"\n              (onDeSelectAll)=\"onDeSelectAll($event)\"\n            ></angular2-multiselect>\n          </div>\n          <div class=\"search-block\">\n            <div class=\"input-group add-on mb-0\">\n              <button class=\"btn btn-default srch-icon\" type=\"submit\">\n                <i class=\"fa-solid fa-magnifying-glass\"></i>\n              </button>\n              <input\n                class=\"form-control\"\n                placeholder=\"{{\n                  'corporateMaster.SearchCorporatebyNameandCorporateCode'\n                    | translate\n                }}\"\n                name=\"srch-term\"\n                id=\"srch-term\"\n                type=\"text\"\n                [(ngModel)]=\"filterTerm\"\n                (keyup)=\"getCorporateList()\"\n                autocomplete=\"off\"\n              />\n              <div class=\"input-group-btn\"></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"sorting-button\">\n          <a\n            [routerLink]=\"['/DS/corporate/corporate-add']\"\n            class=\"btn-login btn btn-primary btn-block btn-pad-top-bot-4\"\n            ><i class=\"fa-solid fa-circle-plus\"></i>\n            {{ \"corporateMaster.AddCorporate\" | translate }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-lg-12\">\n          <div class=\"table-responsive\">\n            <table\n              datatable\n              [dtOptions]=\"dtOptions\"\n              [dtTrigger]=\"dtTrigger\"\n              class=\"table table-bordered table-sm table-striped table-hover dt-responsive nowrap\"\n              style=\"width: 100%\"\n            >\n              <thead>\n                <tr>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection(); sort('name')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"corporateMaster.CorporateName\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection1(); sort('code')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"corporateMaster.CorporateCode\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending1\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending1\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection2(); sort('userCount')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"corporateMaster.No.ofregistereddrivers\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending2\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending2\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th class=\"text-center\">\n                    {{ \"corporateMaster.Action\" | translate }}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  *ngFor=\"\n                    let element of corporateList\n                      | paginate\n                        : {\n                            itemsPerPage: count,\n                            currentPage: page,\n                            id: 'second',\n                            totalItems: totaldocs\n                          }\n                  \"\n                ></tr>\n                <tr *ngFor=\"let element of corporateList | filter : filterTerm\">\n                  <td class=\"text-capitalize\">{{ element.name }}</td>\n                  <td>{{ element.code }}</td>\n                  <td>{{ element.userCount }}</td>\n                  <td class=\"text-center\">\n                    <ul class=\"care-path-right-icon pt-0\">\n                      <li>\n                        <a\n                          [routerLink]=\"[\n                            '/DS/corporate/user/corporate-add',\n                            element.code\n                          ]\"\n                          title=\"Add\"\n                          ><i class=\"fa-solid fa-plus\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a\n                          [routerLink]=\"[\n                            '/DS/corporate/corporate-view',\n                            element._id\n                          ]\"\n                          title=\"View\"\n                          ><i class=\"fa-solid fa-eye\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a\n                          [routerLink]=\"[\n                            '/DS/corporate/corporate-update',\n                            element._id\n                          ]\"\n                          title=\"Edit\"\n                          ><i class=\"fa-solid fa-pencil\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a (click)=\"corporateDelete(element._id)\" title=\"Delete\"\n                          ><i class=\"fa-solid fa-trash-can\"></i\n                        ></a>\n                      </li>\n                    </ul>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <p class=\"text-center\" *ngIf=\"totaldocs == 0\">\n              {{ \"common.NoResultsFound\" | translate }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"totaldocs > 10\">\n        <div class=\"col-sm-6 text-left\">\n          <pagination-controls\n            (pageChange)=\"pageChange($event)\"\n            id=\"second\"\n            previousLabel=\"{{ 'corporateMaster.Previous' | translate }}\"\n            nextLabel=\"{{ 'corporateMaster.Next' | translate }}\"\n          >\n          </pagination-controls>\n        </div>\n        <div class=\"col-sm-6 text-right\" *ngIf=\"totaldocs > 10\">\n          <label for=\"entries\"\n            >{{ \"corporateMaster.NumberofEntries\" | translate }} :&nbsp;</label\n          >\n          <select\n            id=\"entries\"\n            [(ngModel)]=\"count\"\n            (ngModelChange)=\"getCorporateList(1)\"\n          >\n            <option value=\"10\" *ngIf=\"totaldocs >= 10\">10</option>\n            <option value=\"20\" *ngIf=\"totaldocs >= 20\">20</option>\n            <option value=\"30\" *ngIf=\"totaldocs >= 30\">30</option>\n            <option value=\"40\" *ngIf=\"totaldocs >= 40\">40</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CorporateListingComponent } from './corporate-listing/corporate-listing.component';\nimport { AddCorporateComponent } from './add-corporate/add-corporate.component';\nimport { CorporateViewComponent } from './corporate-view/corporate-view.component';\nimport { AddCorporateUserComponent } from './add-corporate-user/add-corporate-user.component';\nimport { CorporateUserListingComponent } from './corporate-user-listing/corporate-user-listing.component';\nimport { CorporateUserViewComponent } from './corporate-user-view/corporate-user-view.component';\n\n\n\nconst routes: Routes = [\n  { path: \"\", component: CorporateListingComponent },\n  { path: 'corporate-listing', component: CorporateListingComponent },\n  { path: 'corporate-add', component: AddCorporateComponent },\n \n  { path: 'corporate-view/:id', component: CorporateViewComponent },\n  { path: 'corporate-update/:id', component: AddCorporateComponent },\n  { path: 'user', component: CorporateUserListingComponent },\n  { path: 'user/corporate-add', component: AddCorporateUserComponent },\n  { path: 'user/corporate-add/:code', component: AddCorporateUserComponent },\n  { path: 'user/corporate-view/:id', component: CorporateUserViewComponent },\n  { path: 'user/corporate-edit/:id', component: AddCorporateUserComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CorporateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddCorporateComponent } from './add-corporate/add-corporate.component';\nimport { CorporateListingComponent } from './corporate-listing/corporate-listing.component';\nimport { CorporateRoutingModule } from './corporate-master-routing.module';\nimport { CorporateViewComponent } from './corporate-view/corporate-view.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AddCorporateUserComponent } from './add-corporate-user/add-corporate-user.component';\nimport { CorporateUserListingComponent } from './corporate-user-listing/corporate-user-listing.component';\nimport { CorporateUserViewComponent } from './corporate-user-view/corporate-user-view.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    AddCorporateComponent,\n    CorporateListingComponent,\n    CorporateViewComponent,\n    AddCorporateUserComponent,\n    CorporateUserListingComponent,\n    CorporateUserViewComponent\n  ],\n  imports: [\n    CommonModule,\n    CorporateRoutingModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule,\n    AngularMultiSelectModule,\n    TranslateModule\n  ]\n})\nexport class CorporateMasterModule { }\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { FunctionService } from '../../_service/function.service';\nimport { CorporateService } from 'src/app/_service/corporate.service';\nimport { Subject } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport Swal from 'sweetalert2';\nimport { DriverService } from 'src/app/_service/driver.service';\nimport { SortDirection } from '@swimlane/ngx-datatable';\nimport { UserAuthService } from 'src/app/_service/user-auth.service';\n\n@Component({\n  selector: 'app-corporate-user-listing',\n  templateUrl: './corporate-user-listing.component.html',\n  styleUrls: ['./corporate-user-listing.component.css'],\n})\nexport class CorporateUserListingComponent implements OnInit {\n  corporateList: any[] = [];\n  corporate_id: any = '';\n  pathwayList: any = [];\n  isChecked = false;\n  deleteCorporate: any;\n  totaldocs: number = 10;\n  page: number = 1;\n  count = 10;\n  corporateUserList: any[] = [];\n\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement!: DataTableDirective;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject<any>();\n  public filterTerm!: string;\n  public filterTerms!: string;\n  sortColumn: string = '';\n  sortDirection: SortDirection = SortDirection.asc;\n\n  dropdownList: any = [];\n  selectedItems: any = [];\n  dropdownSettings = {};\n\n  selectedLang = localStorage.getItem('selectedLang');\n\n  constructor(\n    private _FunctionService: FunctionService,\n    private spinner: NgxSpinnerService,\n    private _ToastrManager: ToastrManager,\n    private corporateService: CorporateService,\n    private route: ActivatedRoute,\n    private driverService: DriverService,\n    private _userAuthService: UserAuthService\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.corporate_id = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.dtOptions = {};\n    this._FunctionService.loadScript('clinic_page.js');\n    this.getCorporateUserList();\n    this.dropdownList = [\n      { id: 'name', itemName: this.selectedLang == 'en' ? 'Name' : '名前' },\n      { id: 'gender', itemName: this.selectedLang == 'en' ? 'Gender' : '性別' },\n      {\n        id: 'email',\n        itemName: this.selectedLang == 'en' ? 'Email' : '電子メール',\n      },\n      { id: 'phone', itemName: this.selectedLang == 'en' ? 'Phone' : '電話' },\n      {\n        id: 'corporateCode',\n        itemName: this.selectedLang == 'en' ? 'Corporate Code' : '企業コード',\n      },\n    ];\n    this.selectedItems = this._userAuthService.getSearchList('corporate');\n    this.dropdownSettings = {\n      singleSelection: false,\n      text: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      selectAllText: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      unSelectAllText:\n        this.selectedLang == 'en' ? 'UnSelect All' : 'すべて選択を解除',\n      enableSearchFilter: true,\n      classes: 'myclass custom-class multiselect-dropdown-blc',\n    };\n  }\n\n  getCorporateUserList(page?: any) {\n    let data = {\n      page: page ? page : this.page,\n      filter: this.filterTerm ? this.filterTerm : '',\n      filters: this.filterTerms ? this.filterTerms : '',\n      count: this.count,\n      roles: 'SUBADMIN',\n      scolumns: '',\n      sortColumn: this.sortColumn,\n      sortDirection: this.sortDirection == 'asc' ? 1 : -1,\n    };\n\n    this._userAuthService.getSearchList('corporate').forEach((element: any) => {\n      data.scolumns =\n        data.scolumns != '' ? data.scolumns + ',' + element.id : element.id;\n    });\n\n    this.driverService.driverList(data).subscribe({\n      next: (res) => {\n        this.spinner.show();\n        this.corporateUserList = res.data.data;\n        this.corporateUserList = res.data.data.map((user: any) => ({\n          ...user,\n          phone: this.formatPhoneNumber(user.phone),\n        }));\n        this.totaldocs = res.data.total;\n        this.page = data.page;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  }\n\n  pageChange(page: any) {\n    this.getCorporateUserList(page);\n  }\n\n  corporateDelete(corporateId: any) {\n    const cancelButtonText =\n      this.selectedLang == 'en' ? 'Cancel' : 'キャンセル';\n    const confirmButtonText = this.selectedLang == 'en' ? 'Yes' : 'はい';\n    Swal.fire({\n      title: this.selectedLang == 'en' ? 'Are you sure?' : '本気ですか？',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: confirmButtonText,\n      cancelButtonText: cancelButtonText,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.spinner.show();\n        this.corporateService.deleteCorporateUser(corporateId).subscribe({\n          next: (res) => {\n            if (res.statusCode === 200) {\n              this.deleteCorporate = res.data;\n              setTimeout(() => {\n                const successMessage =\n                  this.selectedLang === 'en'\n                    ? 'Corporate User removed Successfully'\n                    : '企業ユーザーが正常に削除されました';\n                this._ToastrManager.successToastr(successMessage);\n                this.getCorporateUserList();\n                this.spinner.hide();\n              }, 500);\n            }\n          },\n          error: (err) => {},\n        });\n      }\n    });\n  }\n\n  sort(column: string) {\n    if (this.sortColumn === column) {\n      this.sortDirection =\n        this.sortDirection === SortDirection.asc\n          ? SortDirection.desc\n          : SortDirection.asc;\n    } else {\n      this.sortDirection = SortDirection.asc;\n      this.sortColumn = column;\n    }\n\n    this.getCorporateUserList();\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  onItemSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'corporate',\n      searchColumns: this.selectedItems,\n    });\n  }\n  OnItemDeSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'corporate',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'corporate',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onDeSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'notice',\n      searchColumns: this.selectedItems,\n    });\n  }\n\n  isAscending: boolean = false;\n  isAscending1: boolean = false;\n  isAscending2: boolean = false;\n  isAscending3: boolean = false;\n  isAscending4: boolean = false;\n  isAscending5: boolean = false;\n\n  toggleSortDirection() {\n    this.isAscending = !this.isAscending;\n  }\n\n  toggleSortDirection1() {\n    this.isAscending1 = !this.isAscending1;\n  }\n\n  toggleSortDirection2() {\n    this.isAscending2 = !this.isAscending2;\n  }\n\n  toggleSortDirection3() {\n    this.isAscending3 = !this.isAscending3;\n  }\n\n  toggleSortDirection4() {\n    this.isAscending4 = !this.isAscending4;\n  }\n\n  toggleSortDirection5() {\n    this.isAscending5 = !this.isAscending5;\n  }\n\n  getGender(gender: any) {\n    if (this.selectedLang === 'en') {\n      if (gender == 'Male') return gender;\n\n      if (gender == 'Female') return gender;\n\n      if (gender == 'Other') return gender;\n\n      if (gender == '男性') return 'Male';\n\n      if (gender == '女性') return 'Female';\n\n      if (gender == '他の') return 'Other';\n\n      if (gender == '男') return 'Male';\n    } else {\n      if (gender == 'Male') return '男性';\n\n      if (gender == 'Female') return '女性';\n\n      if (gender == 'Other') return '他の';\n\n      if (gender == '男性') return gender;\n\n      if (gender == '女性') return gender;\n\n      if (gender == '他の') return gender;\n\n      if (gender == '男') return gender;\n    }\n  }\n\n  formatPhoneNumber(phoneNumber: string): string {\n    const formattedPhoneNumber = phoneNumber.replace(\n      /(\\d{3})(\\d{4})(\\d{4})/,\n      '$1-$2-$3'\n    );\n    return formattedPhoneNumber;\n  }\n}\n","<div class=\"content wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h3>\n        <b>{{ \"corporateUser.CorporateUser\" | translate }}</b>\n      </h3>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'corporateUser.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"main-sorting-header\">\n        <div class=\"sorting-block\">\n          <div class=\"select-block\">\n            <angular2-multiselect\n              [data]=\"dropdownList\"\n              [(ngModel)]=\"selectedItems\"\n              [settings]=\"dropdownSettings\"\n              (onSelect)=\"onItemSelect($event)\"\n              (onDeSelect)=\"OnItemDeSelect($event)\"\n              (onSelectAll)=\"onSelectAll($event)\"\n              (onDeSelectAll)=\"onDeSelectAll($event)\"\n            ></angular2-multiselect>\n          </div>\n          <div class=\"search-block\">\n            <div class=\"input-group add-on mb-0\">\n              <button class=\"btn btn-default srch-icon\" type=\"submit\">\n                <i class=\"fa-solid fa-magnifying-glass\"></i>\n              </button>\n              <input\n                class=\"form-control\"\n                placeholder=\"{{\n                  'corporateUser.SearchCorporatebyNameandCorporateCode'\n                    | translate\n                }}\"\n                name=\"srch-term\"\n                id=\"srch-term\"\n                type=\"text\"\n                [(ngModel)]=\"filterTerm\"\n                autocomplete=\"off\"\n                (keyup)=\"getCorporateUserList()\"\n              />\n              <div class=\"input-group-btn\"></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"sorting-button\">\n          <a\n            [routerLink]=\"['/DS/corporate/user/corporate-add']\"\n            class=\"btn-login btn btn-primary btn-block btn-pad-top-bot-4\"\n            ><i class=\"fa-solid fa-circle-plus\"></i>\n            {{ \"corporateUser.AddCorporateUser\" | translate }}</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--Table-->\n\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-lg-12\">\n          <div class=\"table-responsive\">\n            <table\n              datatable\n              [dtOptions]=\"dtOptions\"\n              [dtTrigger]=\"dtTrigger\"\n              class=\"table table-bordered table-sm table-striped table-hover dt-responsive nowrap\"\n              style=\"width: 100%\"\n            >\n              <thead>\n                <tr>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection(); sort('name')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"corporateUser.Name\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection1(); sort('gender')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"corporateUser.Gender\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending1\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending1\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection2(); sort('email')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"corporateUser.EmailId\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending2\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending2\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection3(); sort('phone')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"corporateUser.Phone\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending3\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending3\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection4(); sort('date_registered')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"corporateUser.RegisteredDate\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending4\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending4\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection5(); sort('corporateCode')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"corporateUser.CorporateCode\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending5\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending5\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th class=\"text-center\">\n                    {{ \"corporateUser.Action\" | translate }}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  *ngFor=\"\n                    let element of corporateUserList\n                      | paginate\n                        : {\n                            itemsPerPage: count,\n                            currentPage: page,\n                            id: 'second',\n                            totalItems: totaldocs\n                          }\n                  \"\n                ></tr>\n                <tr\n                  *ngFor=\"\n                    let element of corporateUserList | filter : filterTerm\n                  \"\n                >\n                  <td>{{ element.name }}</td>\n                  <td>{{ getGender(element.gender) }}</td>\n                  <td>{{ element.email }}</td>\n                  <td>{{ element.phone }}</td>\n                  <td>{{ element.date_registered | date : \"yyyy/MM/dd\" }}</td>\n                  <td>{{ element.corporateCode }}</td>\n                  <td class=\"text-center\">\n                    <ul class=\"care-path-right-icon pt-0\">\n                      <li>\n                        <a\n                          [routerLink]=\"[\n                            '/DS/corporate/user/corporate-view',\n                            element._id\n                          ]\"\n                          ><i class=\"fa-solid fa-eye\" title=\"View\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a\n                          [routerLink]=\"[\n                            '/DS/corporate/user/corporate-edit',\n                            element._id\n                          ]\"\n                          title=\"Edit\"\n                          ><i class=\"fa-solid fa-pencil\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a (click)=\"corporateDelete(element._id)\" title=\"Delete\"\n                          ><i class=\"fa-solid fa-trash-can\"></i\n                        ></a>\n                      </li>\n                    </ul>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <p class=\"text-center\" *ngIf=\"totaldocs == 0\">\n              {{ \"common.NoResultsFound\" | translate }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"totaldocs > 10\">\n        <div class=\"col-sm-6 text-left\">\n          <pagination-controls\n            (pageChange)=\"pageChange($event)\"\n            id=\"second\"\n            previousLabel=\"{{ 'corporateUser.Previous' | translate }}\"\n            nextLabel=\"{{ 'corporateUser.Next' | translate }}\"\n          >\n          </pagination-controls>\n        </div>\n        <div class=\"col-sm-6 text-right\" *ngIf=\"totaldocs > 10\">\n          <label for=\"entries\"\n            >{{ \"corporateUser.NumberofEntries\" | translate }} :&nbsp;</label\n          >\n          <select\n            id=\"entries\"\n            [(ngModel)]=\"count\"\n            (ngModelChange)=\"getCorporateUserList(1)\"\n          >\n            <option value=\"10\" *ngIf=\"totaldocs >= 10\">10</option>\n            <option value=\"20\" *ngIf=\"totaldocs >= 20\">20</option>\n            <option value=\"30\" *ngIf=\"totaldocs >= 30\">30</option>\n            <option value=\"40\" *ngIf=\"totaldocs >= 40\">40</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { CorporateService } from 'src/app/_service/corporate.service';\n\n@Component({\n  selector: 'app-corporate-user-view',\n  templateUrl: './corporate-user-view.component.html',\n  styleUrls: ['./corporate-user-view.component.css'],\n})\nexport class CorporateUserViewComponent implements OnInit {\n  corporate_id: any = '';\n  corporateDetails: any;\n\n  constructor(\n    private corporateService: CorporateService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.corporate_id = params.get('id');\n      // Use the ID as needed\n    });\n  }\n\n  ngOnInit(): void {\n    this.getCorporateView();\n  }\n\n  getCorporateView = () => {\n    this.spinner.show();\n    this.corporateService.corporateUserView(this.corporate_id).subscribe({\n      next: (res) => {\n        this.corporateDetails = res.data[0];\n        this.formatPhoneNumber();\n\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  };\n\n  formatPhoneNumber() {\n    if (this.corporateDetails && this.corporateDetails.phone) {\n      this.corporateDetails.phone = this.corporateDetails.phone.replace(\n        /^(\\d{3})(\\d{4})(\\d{4})$/,\n        '$1-$2-$3'\n      );\n    }\n  }\n\n  goBack() {\n    window.history.back();\n  }\n}\n","<section class=\"content wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h2>\n        <b>{{ \"corporateUser.CorporateUserDetails\" | translate }}</b>\n      </h2>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'corporateUser.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form>\n          <div class=\"card-body\">\n            <div class=\"container-fluid\">\n              <div class=\"row mt-4\">\n                <div class=\"col-12 col-md-6 col-lg-6\">\n                  <div class=\"form-group mb-3\">\n                    <label\n                      ><b>{{ \"corporateUser.Name\" | translate }}</b></label\n                    >\n                    <p>{{ corporateDetails?.name }}</p>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6 col-lg-6\">\n                  <div class=\"form-group mb-3\">\n                    <label\n                      ><b>{{ \"corporateUser.EmailId\" | translate }}</b></label\n                    >\n                    <p>{{ corporateDetails?.email }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"container-fluid\">\n              <div class=\"row mt-4\">\n                <div class=\"col-12 col-md-6 col-lg-6\">\n                  <div class=\"form-group mb-3\">\n                    <label\n                      ><b>{{\n                        \"corporateUser.PhoneNumber\" | translate\n                      }}</b></label\n                    >\n                    <p>{{ corporateDetails?.phone }}</p>\n                  </div>\n                </div>\n\n                <div class=\"col-12 col-md-6 col-lg-6\">\n                  <div class=\"form-group mb-3\">\n                    <label\n                      ><b>{{ \"corporateUser.Gender\" | translate }}</b></label\n                    >\n                    <p>{{ corporateDetails?.gender }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"container-fluid\">\n              <div class=\"row mt-4\">\n                <div class=\"col-12 col-md-6 col-lg-6\">\n                  <div class=\"form-group mb-3\">\n                    <label\n                      ><b>{{\n                        \"corporateUser.BusinessCode\" | translate\n                      }}</b></label\n                    >\n                    <p>{{ corporateDetails.corporateCode }}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { CorporateService } from 'src/app/_service/corporate.service';\n\n@Component({\n  selector: 'app-corporate-view',\n  templateUrl: './corporate-view.component.html',\n  styleUrls: ['./corporate-view.component.css'],\n})\nexport class CorporateViewComponent implements OnInit {\n  corporate_id: any = '';\n  corporateDetails: any;\n\n  constructor(\n    private corporateService: CorporateService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.corporate_id = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.getCorporateView();\n  }\n\n  getCorporateView = () => {\n    this.spinner.show();\n    this.corporateService.corporateView(this.corporate_id).subscribe({\n      next: (res) => {\n        this.corporateDetails = res.data[0];\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  };\n\n  goBack() {\n    window.history.back();\n  }\n}\n","<section class=\"content wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h2>\n        <b>{{ \"corporateMaster.Corporatedetail\" | translate }}</b>\n      </h2>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'corporateMaster.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form>\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\"\n                    ><b>{{\n                      \"corporateMaster.CorporateName\" | translate\n                    }}</b></label\n                  >\n                  <p>{{ corporateDetails?.name }}</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\"\n                    ><b>{{\n                      \"corporateMaster.CorporateCode\" | translate\n                    }}</b></label\n                  >\n                  <p>{{ corporateDetails?.code }}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}