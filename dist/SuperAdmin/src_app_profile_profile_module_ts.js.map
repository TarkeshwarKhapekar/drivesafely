{"version":3,"file":"src_app_profile_profile_module_ts.js","mappings":"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","sources":["./src/app/_service/profile.service.ts","./src/app/profile/change-password/change-password.component.ts","./src/app/profile/change-password/change-password.component.html","./src/app/profile/profile-routing.module.ts","./src/app/profile/profile-view/profile-view.component.ts","./src/app/profile/profile-view/profile-view.component.html","./src/app/profile/profile.module.ts","./node_modules/angular-datatables/index.js","./node_modules/angular-datatables/src/angular-datatables.directive.js","./node_modules/angular-datatables/src/angular-datatables.module.js"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { environment } from '../../environments/environment';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  public _api_url = environment.api_url;\n  _drivingSafetyAccessToken: any;\n  _id: any;\n\n  constructor(public _http: HttpClient) {\n    this._drivingSafetyAccessToken = localStorage.getItem(\n      '_drivingSafetyAccessToken'\n    );\n    this._id = localStorage.getItem('_id');\n  }\n\n  public profileView(id: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .get(`${this._api_url}user/get-profile/${id}`, requestOptions)\n      .pipe(catchError(this.error));\n  }\n\n  public editProfile(editProfileParams: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .post(\n        `${this._api_url}user/update-profile`,\n        editProfileParams,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  public changePassword(changePasswordParams: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .post(\n        `${this._api_url}user/change-password`,\n        changePasswordParams,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  // Handle Errors\n  error(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { ProfileService } from 'src/app/_service/profile.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css'],\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePasswordForm: any = FormGroup;\n  submitted = false;\n  fieldTextType!: boolean;\n  fieldTextTypes!: boolean;\n  fieldTextTypess!: boolean;\n  fieldTextTypesss!: boolean;\n\n  userId: any;\n  public passwordMatched = false;\n  public selectedLang: any = 'en';\n  constructor(\n    private fb: FormBuilder,\n    private _ToastrManager: ToastrManager,\n    private profileService: ProfileService,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.userId = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.formValidation();\n    this.selectedLang = localStorage.getItem('selectedLang');\n  }\n\n  formValidation() {\n    this.changePasswordForm = this.fb.group({\n      currentpwd: ['', [Validators.required]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(\n            '(?=\\\\D*\\\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=.*[!@#$%^&*]).{8,}'\n          ),\n        ],\n      ],\n      confirmPassword: [''],\n    });\n  }\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  toggleFieldTextTypes() {\n    this.fieldTextTypes = !this.fieldTextTypes;\n  }\n\n  toggleFieldTextTypess() {\n    this.fieldTextTypess = !this.fieldTextTypess;\n  }\n\n  toggleFieldTextTypesss() {\n    this.fieldTextTypesss = !this.fieldTextTypesss;\n  }\n\n  get f() {\n    return this.changePasswordForm.controls;\n  }\n\n  onSubmit() {\n    let data = this.changePasswordForm.value;\n    this.spinner.show();\n    this.profileService.changePassword(data).subscribe(\n      (result) => {\n        if (result.statusCode === 200) {\n          this._ToastrManager.successToastr(\n            this.selectedLang == 'en' ? result.message.en : result.message.ja\n          );\n\n          setTimeout(() => {\n            this.spinner.hide();\n            this.logOut();\n          }, 1000);\n        } else {\n          this._ToastrManager.errorToastr(\n            this.selectedLang == 'en' ? result.message.en : result.message.ja\n          );\n          this.spinner.hide();\n        }\n      },\n      (error) => {\n        this.spinner.hide();\n        this._ToastrManager.successToastr(error.message.en);\n      }\n    );\n  }\n\n  checkMatch(pwd1: string, pwd2: string) {\n    this.passwordMatched = pwd1 == pwd2 ? true : false;\n  }\n\n  logOut() {\n    this.spinner.show();\n    const selectedLang = localStorage.getItem('selectedLang'); // Get the selectedLang before clearing localStorage\n    localStorage.clear();\n    if (selectedLang) {\n      localStorage.setItem('selectedLang', selectedLang); // Restore the selectedLang after clearing localStorage\n    }\n    setTimeout(() => {\n      this.spinner.hide();\n      this.router.navigate(['login']);\n      location.reload();\n    }, 1000);\n  }\n}\n","<section class=\"content wh700\" style=\"min-height: 550px\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <h2><b>{{'profile.ChangePassword' | translate}}</b>&nbsp;</h2>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card border-0 shadow\">\n          <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"card-body\">\n              <div class=\"container-fluid\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <h4 class=\"fs-20 fw-bold\"></h4>\n                  </div>\n                </div>\n\n                <div class=\"row mt-4\">\n                  <div class=\"col-12 col-md-6 col-lg-12\">\n                    <div class=\"form-group mb-3\">\n                      <label>{{'profile.CurrentPassword' | translate}}</label>\n                      <input\n                        [type]=\"fieldTextType ? 'text' : 'password'\"\n                        type=\"currentpwd\"\n                        placeholder=\"{{'profile.EnterCurrentPassword' | translate}}\"\n                        id=\"currentpwd\"\n                        #currentpwd\n                        class=\"form-control\"\n                        formControlName=\"currentpwd\"\n                        [ngClass]=\"{ 'form-submitted': submitted }\"\n                      />\n                      <i\n                        [ngClass]=\"{\n                          'fa-eye-slash': !fieldTextType,\n                          'fa-eye': fieldTextType\n                        }\"\n                        (click)=\"toggleFieldTextType()\"\n                        class=\"fas fa-eye-slash\"\n                        id=\"eye\"\n                      ></i>\n                    </div>\n                    <span\n                      *ngIf=\"\n                        submitted ||\n                        (f.currentpwd.errors &&\n                          (f.currentpwd.dirty || f.currentpwd.touched))\n                      \"\n                    >\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"\n                          changePasswordForm\n                            .get('currentpwd')\n                            .hasError('required')\n                        \"\n                      >\n                        {{'profile.Passwordisrequired!' | translate}}\n                      </label>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"container-fluid\">\n                <div class=\"row mt-4\">\n                  <div class=\"col-12 col-md-6 col-lg-12\">\n                    <div class=\"form-group mb-3\">\n                      <label>{{'profile.NewPassword' | translate}}</label>\n                      <input\n                        [type]=\"fieldTextTypess ? 'text' : 'password'\"\n                        type=\"password\"\n                        placeholder=\"{{'profile.EnterNewPassword' | translate}}\"\n                        id=\"password\"\n                        #password\n                        pattern=\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\"\n                        class=\"form-control\"\n                        formControlName=\"password\"\n                        [ngClass]=\"{ 'form-submitted': submitted }\"\n                      />\n\n                         <i\n                        [ngClass]=\"{\n                          'fa-eye-slash': !fieldTextTypess,\n                          'fa-eye': fieldTextTypess\n                        }\"\n                        (click)=\"toggleFieldTextTypess()\"\n                        class=\"fas fa-eye-slash\"\n                        id=\"eye\"\n                      ></i>\n                    </div>\n                    <span\n                      *ngIf=\"\n                        submitted ||\n                        (f.password.errors &&\n                          (f.password.dirty || f.password.touched))\n                      \"\n                    >\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"\n                          changePasswordForm\n                            .get('password')\n                            .hasError('required')\n                        \"\n                      >\n                        {{'profile.Passwordisrequired!' | translate}}\n                      </label>\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"\n                          changePasswordForm.get('password').hasError('pattern')\n                        \"\n                      >\n                        {{'profile.Password' | translate}}\n                      </label>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"container-fluid\">\n                <div class=\"row mt-4\">\n                  <div class=\"col-12 col-md-6 col-lg-12\">\n                    <div class=\"form-group mb-3\">\n                      <label>{{'profile.ConfirmPassword' | translate}}</label>\n                      <input\n                      [type]=\"fieldTextTypesss ? 'text' : 'password'\"\n                        class=\"form-control\"\n                        id=\"confirmPassword\"\n                        formControlName=\"confirmPassword\"\n                        placeholder=\"{{'profile.EnterConfirmPassword' | translate}}\"\n                        #confirmPassword\n                        (keyup)=\"\n                          checkMatch(password.value, confirmPassword.value)\n                        \"\n                      />\n                      <i\n                      [ngClass]=\"{\n                        'fa-eye-slash': !fieldTextTypesss,\n                        'fa-eye': fieldTextTypesss\n                      }\"\n                      (click)=\"toggleFieldTextTypesss()\"\n                      class=\"fas fa-eye-slash\"\n                      id=\"eye\"\n                    ></i>\n                    </div>\n                    <div\n                      *ngIf=\"!this.passwordMatched && confirmPassword.value != ''\"\n                      class=\"text-danger\"\n                    >\n                      {{'profile.Passwordnotmatched' | translate}}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"card-footer border-0 bg-transparent\"\n              style=\"margin-left: 1rem\"\n            >\n              <button\n                class=\"btn btn-primary graident btn-small custom-button\"\n                [disabled]=\"changePasswordForm.invalid || !passwordMatched\"\n                type=\"submit\"\n              >\n                {{'profile.ChangePassword' | translate}}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileViewComponent } from './profile-view/profile-view.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\n\n\nconst routes: Routes = [\n  { path: \"\", component: ProfileViewComponent },\n  { path: 'profile-view', component: ProfileViewComponent },\n  { path: 'change-password', component: ChangePasswordComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProfileService } from 'src/app/_service/profile.service';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\n@Component({\n  selector: 'app-profile-view',\n  templateUrl: './profile-view.component.html',\n  styleUrls: ['./profile-view.component.css'],\n})\nexport class ProfileViewComponent implements OnInit {\n  genderChange: EventEmitter<string> = new EventEmitter<string>();\n\n  editProfileForm: any = FormGroup;\n  submitted = false;\n  fieldTextType!: boolean;\n  profileId: any;\n  isUpdate = false;\n  selectedLang = localStorage.getItem('selectedLang');\n\n  constructor(\n    private fb: FormBuilder,\n    private profileService: ProfileService,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private _ToastrManager: ToastrManager\n  ) {\n    this.profileId = localStorage.getItem('_id');\n  }\n\n  ngOnInit(): void {\n    this.formValidation();\n    this.getProfileDetails();\n  }\n\n  changeValue(status: boolean): void {\n    this.isUpdate = status;\n  }\n\n  formValidation() {\n    this.editProfileForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.email,\n          Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n        ],\n      ],\n      phone: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(/^\\+?\\d+$/),\n          Validators.pattern('[0-9]*'),\n          Validators.minLength(11),\n        ],\n      ],\n      gender: ['', [Validators.required]],\n    });\n  }\n\n  get f() {\n    return this.editProfileForm.controls;\n  }\n\n  onSubmit() {\n    if (this.profileId) {\n      let data = this.editProfileForm.value;\n      data._id = this.profileId;\n      this.profileService.editProfile(data).subscribe((result) => {\n        setTimeout(() => {\n          const successMessage =\n            this.selectedLang === 'en'\n              ? 'Admin Profile Updated Successfully'\n              : '管理者プロファイルが正常に更新されました';\n          this._ToastrManager.successToastr(successMessage);\n          this.router.navigate(['/DS']);\n        }, 1000);\n      });\n    }\n  }\n\n  numericOnly(event: any): boolean {\n    let patt = /^([0-9])$/;\n    let result = patt.test(event.key);\n    return result;\n  }\n\n  profileDetails: any;\n  getProfileDetails = () => {\n    if (this.profileId) {\n      this.spinner.show();\n      this.profileService.profileView(this.profileId).subscribe({\n        next: (res) => {\n          this.profileDetails = res.data[0];\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 500);\n          this.setData(this.profileDetails);\n        },\n        error: (err) => {},\n      });\n    }\n  };\n  onGenderChange(event: any) {\n    const selectedGender: string = event.target.value;\n    this.genderChange.emit(selectedGender);\n  }\n  setData(data: any) {\n    this.editProfileForm.patchValue({\n      name: data?.name,\n      email: data?.email,\n      phone: data?.phone,\n      gender: data?.gender,\n    });\n  }\n\n  isSubmitDisabled() {\n    return this.editProfileForm.pristine || this.editProfileForm.invalid;\n  }\n\n  getGender(gender: any) {\n    if (this.selectedLang === 'en') {\n      if (gender == 'Male') return gender;\n\n      if (gender == 'Female') return gender;\n\n      if (gender == 'Other') return gender;\n\n      if (gender == '男性') return 'Male';\n\n      if (gender == '女性') return 'Female';\n\n      if (gender == '他の') return 'Other';\n\n      if (gender == '男') return 'Male';\n    } else {\n      if (gender == 'Male') return '男性';\n\n      if (gender == 'Female') return '女性';\n\n      if (gender == 'Other') return '他の';\n\n      if (gender == '男性') return gender;\n\n      if (gender == '女性') return gender;\n\n      if (gender == '他の') return gender;\n\n      if (gender == '男') return gender;\n    }\n  }\n}\n","<section class=\"content wh700\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <h2>\n          <b>{{ \"profile.Profile\" | translate }}</b\n          >&nbsp;\n        </h2>\n      </div>\n      <div class=\"col-4 text-right\">\n        <button\n          *ngIf=\"!isUpdate\"\n          (click)=\"changeValue(true)\"\n          class=\"btn btn-primary graident btn-xs custom-button custom-button-xs\"\n        >\n          <i\n            class=\"fa fa-pencil fa-sm\"\n            aria-hidden=\"true\"\n            *ngIf=\"!isUpdate\"\n          ></i>\n          {{ \"profile.Update\" | translate }}\n        </button>\n        <button\n          *ngIf=\"isUpdate\"\n          (click)=\"changeValue(false)\"\n          class=\"btn btn-primary graident btn-xs custom-button custom-button-xs\"\n        >\n          <i class=\"fa fa-eye fa-sm\" aria-hidden=\"true\" *ngIf=\"isUpdate\"></i>\n          {{ \"profile.View\" | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"profile wh-700\"\n    name=\"view\"\n    *ngIf=\"!isUpdate\"\n    style=\"min-height: 550px\"\n  >\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"card border-0 shadow\">\n            <form>\n              <div class=\"card-body\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <h4 class=\"fs-20 fw-bold\"></h4>\n                  </div>\n                </div>\n                <div class=\"container-fluid\">\n                  <div class=\"row mt-4\">\n                    <div class=\"col-12 col-md-6 col-lg-12\">\n                      <div class=\"form-group mb-3\">\n                        <label>{{ \"profile.Name\" | translate }}</label>\n                        <p>{{ profileDetails?.name }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container-fluid\">\n                  <div class=\"row mt-4\">\n                    <div class=\"col-12 col-md-6 col-lg-12\">\n                      <div class=\"form-group mb-3\">\n                        <label>{{ \"profile.EmailId\" | translate }}</label>\n                        <p>{{ profileDetails?.email }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container-fluid\">\n                  <div class=\"row mt-4\">\n                    <div class=\"col-12 col-md-6 col-lg-12\">\n                      <div class=\"form-group mb-3\">\n                        <label>{{ \"profile.PhoneNumber\" | translate }}</label>\n                        <p>{{ profileDetails?.phone }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"container-fluid\">\n                  <div class=\"row mt-4\">\n                    <div class=\"col-12 col-md-6 col-lg-12\">\n                      <div class=\"form-group mb-3\">\n                        <label>{{ \"profile.Gender\" | translate }}</label>\n                        <p>{{ getGender(profileDetails?.gender) }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container-fluid\" name=\"update\" *ngIf=\"isUpdate\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card border-0 shadow\">\n          <form [formGroup]=\"editProfileForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"card-body\">\n              <div class=\"container-fluid\">\n                <div class=\"row\">\n                  <div class=\"col-12\">\n                    <h4 class=\"fs-20 fw-bold\"></h4>\n                  </div>\n                </div>\n\n                <div class=\"row mt-4\">\n                  <div class=\"col-12 col-md-6 col-lg-12\">\n                    <div class=\"form-group mb-3\">\n                      <label>{{ \"profile.EmailId\" | translate }}</label>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        placeholder=\"{{ 'profile.EnterEmail' | translate }}\"\n                        pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                        formControlName=\"email\"\n                        [ngClass]=\"{ 'form-submitted': submitted }\"\n                      />\n                    </div>\n                    <span\n                      *ngIf=\"\n                        submitted ||\n                        (f.email.errors && (f.email.dirty || f.email.touched))\n                      \"\n                    >\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"\n                          editProfileForm.get('email').hasError('required')\n                        \"\n                      >\n                        {{ \"profile.EmailisRequired!\" | translate }}\n                      </label>\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"editProfileForm.get('email').hasError('pattern')\"\n                      >\n                        {{ \"profile.Enteravalidemailaddress!\" | translate }}\n                      </label>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"container-fluid\">\n                <div class=\"row mt-4\">\n                  <div class=\"col-12 col-md-6 col-lg-12\">\n                    <div class=\"form-group mb-3\">\n                      <label>{{ \"profile.Name\" | translate }}</label>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        placeholder=\"{{ 'profile.EnterName' | translate }}\"\n                        formControlName=\"name\"\n                        [ngClass]=\"{ 'form-submitted': submitted }\"\n                      />\n                    </div>\n                    <span\n                      *ngIf=\"\n                        submitted ||\n                        (f.name.errors && (f.name.dirty || f.name.touched))\n                      \"\n                    >\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"editProfileForm.get('name').hasError('required')\"\n                      >\n                        {{ \"profile.Drivernameisrequired!\" | translate }}\n                      </label>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"container-fluid\">\n                <div class=\"row mt-4\">\n                  <div class=\"col-12 col-md-6 col-lg-12\">\n                    <div class=\"form-group mb-3\">\n                      <label>{{ \"profile.PhoneNumber\" | translate }}</label>\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        placeholder=\"{{\n                          'profile.EnterPhoneNumber' | translate\n                        }}\"\n                        pattern=\"[0-9]*\"\n                        minlength=\"11\"\n                        maxlength=\"11\"\n                        (keypress)=\"numericOnly($event)\"\n                        formControlName=\"phone\"\n                        [ngClass]=\"{ 'form-submitted': submitted }\"\n                      />\n                    </div>\n                    <span\n                      *ngIf=\"\n                        submitted ||\n                        (f.phone.errors && (f.phone.dirty || f.phone.touched))\n                      \"\n                    >\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"\n                          editProfileForm.get('phone').hasError('required')\n                        \"\n                      >\n                        {{ \"profile.PhoneNumberisrequired!\" | translate }}\n                      </label>\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"\n                          editProfileForm.get('phone').hasError('minlength')\n                        \"\n                      >\n                        {{ \"driver.PhoneNumbershouldbe10digit\" | translate }}\n                      </label>\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"editProfileForm.get('phone').hasError('pattern')\"\n                      >\n                        {{\n                          \"driver.PhoneNumbershouldbeonlynumbers\" | translate\n                        }}\n                      </label>\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div class=\"container-fluid\">\n                <div class=\"row mt-4\">\n                  <div class=\"col-12 col-md-6 col-lg-12\">\n                    <div class=\"form-group mb-3\">\n                      <label>{{ \"driver.Gender\" | translate }}</label>\n                      <select\n                        name=\"gender\"\n                        class=\"form-control\"\n                        formControlName=\"gender\"\n                        (change)=\"onGenderChange($event)\"\n                      >\n                        <option selected=\"selected\" value=\"\">\n                          {{ \"driver.SelectGender\" | translate }}\n                        </option>\n                        <option value=\"Male\">\n                          {{ \"driver.Male\" | translate }}\n                        </option>\n                        <option value=\"Female\">\n                          {{ \"driver.Female\" | translate }}\n                        </option>\n                        <option value=\"Other\">\n                          {{ \"driver.Other\" | translate }}\n                        </option>\n                      </select>\n                    </div>\n                    <span\n                      *ngIf=\"\n                        submitted ||\n                        (f.gender.errors &&\n                          (f.gender.dirty || f.gender.touched))\n                      \"\n                    >\n                      <label\n                        class=\"text-danger\"\n                        *ngIf=\"\n                          editProfileForm.get('gender').hasError('required')\n                        \"\n                      >\n                        {{ \"driver.Genderisrequired!\" | translate }}\n                      </label>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"card-footer border-0 bg-transparent\"\n              style=\"margin-left: 1rem\"\n            >\n              <button\n                class=\"btn btn-primary graident btn-small custom-button\"\n                [disabled]=\"isSubmitDisabled()\"\n                type=\"submit\"\n              >\n                {{ \"profile.Update\" | translate }}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProfileViewComponent } from './profile-view/profile-view.component';\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\n\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n@NgModule({\n  declarations: [\n    ProfileViewComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule\n  ]\n})\nexport class ProfileModule { }\n","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public library APIs.\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input, Renderer2, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el, vcr, renderer) {\n        this.el = el;\n        this.vcr = vcr;\n        this.renderer = renderer;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function (options) {\n                _this.displayTable(options);\n            });\n        }\n        else {\n            this.displayTable(null);\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function (dtOptions) {\n        var _this = this;\n        // assign new options if provided\n        if (dtOptions) {\n            this.dtOptions = dtOptions;\n        }\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (resolvedDTOptions) {\n                // validate object\n                var isTableEmpty = Object.keys(resolvedDTOptions).length === 0 && $('tbody tr', _this.el.nativeElement).length === 0;\n                if (isTableEmpty) {\n                    reject('Both the table and dtOptions cannot be empty');\n                    return;\n                }\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (resolvedDTOptions.columns) {\n                                var columns = resolvedDTOptions.columns;\n                                _this.applyNgPipeTransform(row, columns);\n                                _this.applyNgRefTemplate(row, columns, data);\n                            }\n                            // run user specified row callback if provided.\n                            if (resolvedDTOptions.rowCallback) {\n                                resolvedDTOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, resolvedDTOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.prototype.applyNgPipeTransform = function (row, columns) {\n        // Filter columns with pipe declared\n        var colsWithPipe = columns.filter(function (x) { return x.ngPipeInstance && !x.ngTemplateRef; });\n        colsWithPipe.forEach(function (el) {\n            var pipe = el.ngPipeInstance;\n            var pipeArgs = el.ngPipeArgs || [];\n            // find index of column using `data` attr\n            var i = columns.findIndex(function (e) { return e.data === el.data; });\n            // get <td> element which holds data using index\n            var rowFromCol = row.childNodes.item(i);\n            // Transform data with Pipe and PipeArgs\n            var rowVal = $(rowFromCol).text();\n            var rowValAfter = pipe.transform.apply(pipe, __spreadArray([rowVal], pipeArgs, false));\n            // Apply transformed string to <td>\n            $(rowFromCol).text(rowValAfter);\n        });\n    };\n    DataTableDirective.prototype.applyNgRefTemplate = function (row, columns, data) {\n        var _this = this;\n        // Filter columns using `ngTemplateRef`\n        var colsWithTemplate = columns.filter(function (x) { return x.ngTemplateRef && !x.ngPipeInstance; });\n        colsWithTemplate.forEach(function (el) {\n            var _a = el.ngTemplateRef, ref = _a.ref, context = _a.context;\n            // get <td> element which holds data using index\n            var i = columns.findIndex(function (e) { return e.data === el.data; });\n            var cellFromIndex = row.childNodes.item(i);\n            // reset cell before applying transform\n            $(cellFromIndex).html('');\n            // render onto DOM\n            // finalize context to be sent to user\n            var _context = Object.assign({}, context, context === null || context === void 0 ? void 0 : context.userData, {\n                adtData: data\n            });\n            var instance = _this.vcr.createEmbeddedView(ref, _context);\n            _this.renderer.appendChild(cellFromIndex, instance.rootNodes[0]);\n        });\n    };\n    DataTableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTableDirective, deps: [{ token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\n    DataTableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: DataTableDirective, selector: \"[datatable]\", inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" }, ngImport: i0 });\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[datatable]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { dtOptions: [{\n                type: Input\n            }], dtTrigger: [{\n                type: Input\n            }] } });\n","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as i0 from \"@angular/core\";\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    DataTablesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, declarations: [DataTableDirective], imports: [CommonModule], exports: [DataTableDirective] });\n    DataTablesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, imports: [[CommonModule]] });\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [DataTableDirective],\n                    exports: [DataTableDirective]\n                }]\n        }] });\n"],"names":["DataTableDirective","DataTablesModule","__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","Directive","ElementRef","Input","Renderer2","ViewContainerRef","Subject","i0","el","vcr","renderer","dtOptions","ngOnInit","_this","dtTrigger","subscribe","options","displayTable","ngOnDestroy","unsubscribe","dt","destroy","dtInstance","Promise","resolve","reject","then","resolvedDTOptions","isTableEmpty","Object","keys","$","nativeElement","setTimeout","rowCallback","row","data","index","columns","applyNgPipeTransform","applyNgRefTemplate","assign","DataTable","colsWithPipe","filter","x","ngPipeInstance","ngTemplateRef","forEach","pipe","pipeArgs","ngPipeArgs","findIndex","e","rowFromCol","childNodes","item","rowVal","text","rowValAfter","transform","apply","colsWithTemplate","_a","ref","context","cellFromIndex","html","_context","userData","adtData","instance","createEmbeddedView","appendChild","rootNodes","ɵfac","ɵdir","type","args","selector","NgModule","CommonModule","forRoot","ngModule","ɵmod","ɵinj","imports","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[7,8,9]}