{"version":3,"file":"src_app_driver_driver_module_ts.js","mappings":"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","sources":["./src/app/driver/aptitude-result/aptitude-result.component.ts","./src/app/driver/aptitude-result/aptitude-result.component.html","./src/app/driver/driver-add/driver-add.component.ts","./src/app/driver/driver-add/driver-add.component.html","./src/app/driver/driver-judgement-result/driver-judgement-result.component.ts","./src/app/driver/driver-judgement-result/driver-judgement-result.component.html","./src/app/driver/driver-list/driver-list.component.ts","./src/app/driver/driver-list/driver-list.component.html","./src/app/driver/driver-routing.module.ts","./src/app/driver/driver-view/driver-view.component.ts","./src/app/driver/driver-view/driver-view.component.html","./src/app/driver/driver.module.ts","./src/app/driver/import/import.component.ts","./src/app/driver/import/import.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DriverService } from 'src/app/_service/driver.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-aptitude-result',\n  templateUrl: './aptitude-result.component.html',\n  styleUrls: ['./aptitude-result.component.css'],\n})\nexport class AptitudeResultComponent implements OnInit {\n  declaration_id: any = '';\n  _id: any = '';\n  diagnosticData: any;\n  selectLng: any;\n  selectedLng: any = 'en';\n  selectsLng: any;\n  createdAtValue: any;\n  public selecteddLang: any = 'ja';\n\n  constructor(\n    private driverService: DriverService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.declaration_id = params.get('id');\n    });\n    this.route.queryParams.subscribe((params) => {\n      this.createdAtValue = params['createdAt'];\n      this._id = params['_id'];\n    });\n  }\n  ngOnInit(): void {\n    this.getDiadgnosticData();\n    this.selecteddLang = localStorage.getItem('selectedLang');\n\n    if (this.selecteddLang === 'en') {\n      this.selectLng = 'en';\n      this.selectsLng = 'en';\n    } else {\n      this.selectLng = 'ja';\n      this.selectsLng = 'ja';\n    }\n  }\n\n  getDiadgnosticData = () => {\n    this.spinner.show();\n    const data = {\n      id: this.declaration_id,\n      _id: this._id,\n      type: 'READONLY',\n    };\n    this.driverService.diagnosticList(data).subscribe({\n      next: (res) => {\n        this.diagnosticData = res.data;\n\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  };\n\n  goBack() {\n    window.history.back();\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h2>\n        <b>{{ \"driver.JudgementLog\" | translate }}</b>\n      </h2>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'driver.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form>\n          <h4>\n            <b\n              >{{ \"driver.Dataacquistion\" | translate }} -\n              {{\n                diagnosticData.observation.deviceType === \"RING\"\n                  ? \"Smart Ring\"\n                  : \"Camera\"\n              }}\n            </b>\n          </h4>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"row mt-2\">\n                <div class=\"col-md-6\">\n                  <label class=\"bold-text\"\n                    >{{ \"driver.OverallJudgement\" | translate }} :</label\n                  >\n                  <div class=\"language-toggle\">\n                    <span\n                      (click)=\"selectLng = 'ja'\"\n                      [ngClass]=\"{ active: selectLng === 'ja' }\"\n                      >Jap</span\n                    >\n                    <span\n                      (click)=\"selectLng = 'en'\"\n                      [ngClass]=\"{ active: selectLng === 'en' }\"\n                      >Eng</span\n                    >\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"text-capitalize\"\n                    >{{\n                      selectLng === \"en\"\n                        ? diagnosticData?.finalJudgement[0]?.level?.en\n                        : diagnosticData?.finalJudgement[0]?.level?.ja\n                    }}\n                    -\n                    {{\n                      selectLng === \"en\"\n                        ? diagnosticData?.finalJudgement[0]?.title?.en\n                        : diagnosticData?.finalJudgement[0]?.title?.ja\n                    }}</label\n                  >\n                </div>\n              </div>\n              <div class=\"row mt-2\">\n                <div class=\"col-md-6\">\n                  <label class=\"bold-text\"\n                    >{{ \"driver.Date&Time\" | translate }} :</label\n                  >\n                </div>\n                <div class=\"col-md-6\">\n                  <label>{{\n                    createdAtValue | date : \"yyyy-MM-dd, HH:mm:ss\"\n                  }}</label>\n                </div>\n              </div>\n\n              <div class=\"row mt-2\">\n                <div class=\"col-md-6\">\n                  <label class=\"bold-text\"\n                    >{{ \"driver.Pulse\" | translate }} :</label\n                  >\n                </div>\n                <div class=\"col-md-6\">\n                  <label\n                    >{{\n                      diagnosticData?.observation?.pulse | number : \"1.0-0\"\n                    }}\n                    BPM</label\n                  >\n                </div>\n              </div>\n\n              <div class=\"row mt-2\">\n                <div class=\"col-md-6\">\n                  <label class=\"bold-text\"\n                    >{{ \"driver.No.ofsteps\" | translate }} :</label\n                  >\n                </div>\n                <div class=\"col-md-6\">\n                  <label>{{ diagnosticData?.observation?.steps }}</label>\n                </div>\n              </div>\n\n              <div class=\"row mt-2\">\n                <div class=\"col-md-6\">\n                  <label class=\"bold-text\"\n                    >{{ \"driver.QOLScore\" | translate }} :</label\n                  >\n                </div>\n                <div class=\"col-md-6\">\n                  <label>{{\n                    diagnosticData?.observation?.stressScore | number : \"1.0-0\"\n                  }}</label>\n                </div>\n              </div>\n\n              <div class=\"row mt-2\">\n                <div class=\"col-md-6\">\n                  <label class=\"bold-text\"\n                    >{{ \"driver.Reflextest\" | translate }} :</label\n                  >\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"text\"\n                    >{{ diagnosticData?.reflexaction?.time }} s</label\n                  >\n                </div>\n              </div>\n\n              <div class=\"row mt-2\">\n                <div class=\"col-md-6\">\n                  <label class=\"bold-text\"\n                    >{{ \"driver.Description\" | translate }} :</label\n                  >\n                  <div class=\"language-toggle\">\n                    <span\n                      (click)=\"selectsLng = 'ja'\"\n                      [ngClass]=\"{ active: selectsLng === 'ja' }\"\n                      >Jap</span\n                    >\n                    <span\n                      (click)=\"selectsLng = 'en'\"\n                      [ngClass]=\"{ active: selectsLng === 'en' }\"\n                      >Eng</span\n                    >\n                  </div>\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"text-capitalize\">{{\n                    selectsLng === \"en\"\n                      ? diagnosticData?.finalJudgement[0]?.description?.en\n                      : diagnosticData?.finalJudgement[0]?.description?.ja\n                  }}</label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DriverService } from 'src/app/_service/driver.service';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\n@Component({\n  selector: 'app-driver-add',\n  templateUrl: './driver-add.component.html',\n  styleUrls: ['./driver-add.component.css'],\n})\nexport class DriverAddComponent implements OnInit {\n  genderChange: EventEmitter<string> = new EventEmitter<string>();\n  password: any;\n\n  onGenderChange(event: any) {\n    const selectedGender: string = event.target.value;\n    this.genderChange.emit(selectedGender);\n  }\n\n  addDriverForm: any = FormGroup;\n  driverDetails: any;\n  submitted = false;\n  fieldTextType!: boolean;\n  fieldTextType1!: boolean;\n\n  showRingId: boolean = false;\n  selectedRing: boolean = false;\n  public userId: any;\n  public passwordMatched = false;\n  corporateCode = localStorage.getItem('corporateCode');\n  currentYear: number = new Date().getFullYear();\n\n  @ViewChild('confirmPassword', { static: false }) confirmPassword!: ElementRef;\n\n  selectedLang = localStorage.getItem('selectedLang');\n\n  constructor(\n    private fb: FormBuilder,\n    private driverService: DriverService,\n    private _ToastrManager: ToastrManager,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.userId = params.get('id');\n      // Use the ID as needed\n    });\n  }\n\n  ngOnInit(): void {\n    this.getDriverDetails();\n    this.formValidation();\n    if (localStorage.getItem('roles') === 'SUBADMIN') {\n      this.addDriverForm.controls['corporateCode'].setValue(this.corporateCode);\n    }\n  }\n\n  formValidation() {\n    if (this.userId) {\n      this.addDriverForm = this.fb.group({\n        name: ['', Validators.required],\n        email: [\n          '',\n          [\n            Validators.required,\n            Validators.email,\n            Validators.pattern(\n              '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'\n            ),\n          ],\n        ],\n        phone: [\n          '',\n          [\n            Validators.pattern(/^\\+?\\d+$/),\n            Validators.pattern('[0-9]*'),\n            Validators.minLength(11),\n          ],\n        ],\n        gender: ['', [Validators.required]],\n        corporateCode: ['', [Validators.minLength(5), Validators.maxLength(5)]],\n        yearOfBirth: [\n          null,\n          [\n            Validators.pattern('^[0-9]*$'), // Ensure it's a number\n            this.yearOfBirthValidator.bind(this), // Custom validator\n            Validators.min(1900), // Minimum year allowed (change as needed)\n            Validators.max(this.currentYear), // Maximum year allowed\n          ],\n        ],\n        height: [null],\n        weight: [null],\n        restingHeartRate: [null],\n        ringUse: ['false', [Validators.required]],\n        ringId: [''],\n      });\n    } else {\n      this.addDriverForm = this.fb.group({\n        name: ['', Validators.required],\n        email: [\n          '',\n          [\n            Validators.required,\n            Validators.email,\n            Validators.pattern(\n              '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'\n            ),\n          ],\n        ],\n        phone: [\n          '',\n          [\n            Validators.pattern(/^\\+?\\d+$/),\n            Validators.pattern('[0-9]*'),\n            Validators.minLength(11),\n          ],\n        ],\n        gender: ['', [Validators.required]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.pattern(\n              '(?=\\\\D*\\\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=.*[!@#$%^&*]).{8,}'\n            ),\n          ],\n        ],\n        confirmPassword: ['', [Validators.required]],\n        corporateCode: ['', [Validators.minLength(5), Validators.maxLength(5)]],\n        yearOfBirth: [\n          null,\n          [\n            this.yearOfBirthValidator.bind(this),\n            Validators.min(1900),\n            Validators.max(this.currentYear),\n          ],\n        ],\n        height: [null],\n        weight: [null],\n        restingHeartRate: [null],\n        ringUse: ['false', [Validators.required]],\n        ringId: [''],\n      });\n    }\n  }\n\n  checkMatch(pwd1: string, pwd2: string) {\n    this.passwordMatched = pwd1 == pwd2 ? true : false;\n  }\n\n  //toggle password\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  toggleFieldTextType1() {\n    this.fieldTextType1 = !this.fieldTextType1;\n  }\n\n  get f() {\n    return this.addDriverForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.addDriverForm.invalid) {\n      return;\n    }\n\n    const yearOfBirth = parseInt(this.addDriverForm.controls.yearOfBirth.value);\n    const currentYear = new Date().getFullYear();\n    const age = currentYear - yearOfBirth;\n\n    if (age < 18) {\n      const errorMessage =\n        this.selectedLang === 'en'\n          ? 'You must be at least 18 years old to fill out this form.'\n          : 'このフォームに記入するには少なくとも18歳である必要があります。';\n      this._ToastrManager.errorToastr(errorMessage);\n      return;\n    }\n    if (this.userId) {\n      let data = JSON.parse(JSON.stringify(this.addDriverForm.value));\n      let defFalse = false;\n      if (data.ringUse == 'false') {\n      } else if (data.ringUse == false) {\n      } else {\n        defFalse = true;\n      }\n\n      const postData = {\n        _id: this.userId,\n        name: data.name,\n        email: data.email,\n        phone: data.phone,\n        gender: data.gender,\n        password: data.password,\n        corporateCode: data.corporateCode,\n        yearOfBirth: data.yearOfBirth,\n        height: data.height,\n        weight: data.weight,\n        restingHeartRate: data.restingHeartRate,\n        ringUse: defFalse,\n        ringId: data.ringId,\n        roles: 'DRIVER',\n        deviceType: 'web',\n      };\n\n      this.driverService.editDriver(postData).subscribe({\n        next: (result) => {\n          if (result.statusCode == 200) {\n            setTimeout(() => {\n              const successMessage =\n                this.selectedLang === 'en'\n                  ? 'Driver Updated Successfully'\n                  : 'ドライバーが正常に更新されました';\n              this._ToastrManager.successToastr(successMessage);\n              this.router.navigate(['/DS/driver']);\n            }, 1000);\n          } else {\n            const errorMessage =\n              this.selectedLang === 'en'\n                ? 'Email is already exist!'\n                : '電子メールはすでに存在します！';\n            this._ToastrManager.errorToastr(errorMessage);\n          }\n        },\n      });\n    } else {\n      let data = this.addDriverForm.value;\n      const postData = {\n        name: data.name,\n        email: data.email,\n        phone: data.phone,\n        gender: data.gender,\n        password: data.password,\n        corporateCode: data.corporateCode,\n        yearOfBirth: data.yearOfBirth,\n        height: data.height,\n        weight: data.weight,\n        restingHeartRate: data.restingHeartRate,\n        ringUse: data.ringUse == 'false' ? false : true,\n        ringId: data.ringId,\n        roles: 'DRIVER',\n        deviceType: 'web',\n      };\n      this.driverService.addDriver(postData).subscribe({\n        next: (result) => {\n          if (result.statusCode == 200) {\n            setTimeout(() => {\n              const successMessage =\n                this.selectedLang === 'en'\n                  ? 'Driver Added Successfully'\n                  : 'ドライバーが正常に追加されました';\n              this._ToastrManager.successToastr(successMessage);\n              this.router.navigate(['/DS/driver']);\n            }, 1000);\n          } else {\n            const errorMessage =\n              this.selectedLang === 'en'\n                ? 'Email is already exist!'\n                : '電子メールはすでに存在します！';\n            this._ToastrManager.errorToastr(errorMessage);\n          }\n        },\n      });\n    }\n  }\n\n  yearOfBirthValidator(\n    control: AbstractControl\n  ): { [key: string]: any } | null {\n    const yearOfBirth = control.value;\n    const currentYear = new Date().getFullYear();\n    const age = currentYear - yearOfBirth;\n\n    if (age < 18) {\n      return { underage: true };\n    }\n\n    return null;\n  }\n\n  getDriverDetails = () => {\n    if (this.userId) {\n      this.spinner.show();\n      this.driverService.driverView(this.userId).subscribe({\n        next: (res) => {\n          this.driverDetails = res.data[0];\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 500);\n          this.setData(this.driverDetails);\n        },\n        error: (err) => {},\n      });\n    }\n  };\n  setData(data: any) {\n    this.addDriverForm.patchValue({\n      name: data?.name,\n      email: data?.email,\n      phone: data?.phone,\n      gender: data?.gender,\n      corporateCode: data?.corporateCode,\n      yearOfBirth: data?.yearOfBirth,\n      height: data?.height,\n      weight: data?.weight,\n      restingHeartRate: data?.restingHeartRate,\n      ringUse: data.ringUse,\n      ringId: data?.ringId,\n    });\n  }\n\n  checkRingUsed() {\n    return this.addDriverForm.get('ringUse').value;\n  }\n\n  onRingChange(event: any) {\n    this.selectedRing = event.target.value === 'true';\n    Object.keys(this.addDriverForm.controls).forEach((controlName) => {\n      const control = this.addDriverForm.get(controlName);\n      if (control.invalid) {\n        console.log(`Invalid control: ${controlName}, Value: ${control.value}`);\n      }\n    });\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  onCancel(): void {\n    this.submitted = false;\n    this.addDriverForm.reset();\n    this.confirmPassword.nativeElement.value = '';\n  }\n\n  isSubmitDisabled() {\n    return this.addDriverForm.pristine || this.addDriverForm.invalid;\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h2>\n        <b *ngIf=\"!userId\">\n          {{ \"driver.AddDriver\" | translate }}\n        </b>\n\n        <b *ngIf=\"userId\"> {{ \"driver.EditDriver\" | translate }} </b>\n      </h2>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'driver.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form [formGroup]=\"addDriverForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <h4 class=\"fs-20 fw-bold\"></h4>\n              </div>\n            </div>\n\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.DriverName\" | translate }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'driver.EnterName' | translate }}\"\n                    maxlength=\"20\"\n                    formControlName=\"name\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.name.errors && (f.name.dirty || f.name.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('name').hasError('maxlength')\"\n                  >\n                    {{\n                      \"driver.DriverNamemustbeatmost20characterslong.\"\n                        | translate\n                    }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('name').hasError('required')\"\n                  >\n                    {{ \"driver.Drivernameisrequired!\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('name').hasError('pattern')\"\n                  >\n                    {{ \"driver.Enteravalidname!\" | translate }}\n                  </label>\n                </span>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.EmailId\" | translate }}</label>\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'driver.EnterEmail' | translate }}\"\n                    formControlName=\"email\"\n                    pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.email.errors && (f.email.dirty || f.email.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('email').hasError('required')\"\n                  >\n                    {{ \"driver.EmailisRequired!\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('email').hasError('pattern')\"\n                  >\n                    {{ \"driver.Enteravalidemailaddress!\" | translate }}\n                  </label>\n                </span>\n              </div>\n\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.PhoneNumber\" | translate }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'driver.EnterPhoneNumber' | translate }}\"\n                    pattern=\"[0-9]*\"\n                    minlength=\"11\"\n                    maxlength=\"11\"\n                    formControlName=\"phone\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.phone.errors && (f.phone.dirty || f.phone.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('phone').hasError('minlength')\"\n                  >\n                    {{ \"driver.PhoneNumbershouldbe10digit\" | translate }}\n                  </label>\n                  <!-- <label class=\"text-danger\" *ngIf=\"addDriverForm.get('phone')\">\n                    {{ \"driver.PhoneNumberisrequired!\" | translate }}\n                  </label> -->\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('phone').hasError('pattern')\"\n                  >\n                    {{ \"driver.PhoneNumbershouldbeonlynumbers\" | translate }}\n                  </label>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.Gender\" | translate }}</label>\n                  <select\n                    name=\"gender\"\n                    class=\"form-control\"\n                    formControlName=\"gender\"\n                    (change)=\"onGenderChange($event)\"\n                  >\n                    <option selected=\"selected\" value=\"\">\n                      {{ \"driver.SelectGender\" | translate }}\n                    </option>\n                    <option value=\"Male\">\n                      {{ \"driver.Male\" | translate }}\n                    </option>\n                    <option value=\"Female\">\n                      {{ \"driver.Female\" | translate }}\n                    </option>\n                    <option value=\"Other\">\n                      {{ \"driver.Other\" | translate }}\n                    </option>\n                  </select>\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.gender.errors && (f.gender.dirty || f.gender.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('gender').hasError('required')\"\n                  >\n                    {{ \"driver.Genderisrequired!\" | translate }}\n                  </label>\n                </span>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-4\" [hidden]=\"userId\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.CreatePassword\" | translate }}</label>\n                  <input\n                    [type]=\"fieldTextType ? 'text' : 'password'\"\n                    type=\"password\"\n                    class=\"form-control\"\n                    formControlName=\"password\"\n                    placeholder=\"{{ 'driver.EnterPassword' | translate }}\"\n                    #password\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                    id=\"password\"\n                  />\n                  <i\n                    [ngClass]=\"{\n                      'fa-eye-slash': !fieldTextType,\n                      'fa-eye': fieldTextType\n                    }\"\n                    (click)=\"toggleFieldTextType()\"\n                    class=\"fas fa-eye-slash\"\n                    id=\"eye\"\n                  ></i>\n                </div>\n                <span\n                  *ngIf=\"\n                    !userId &&\n                    (submitted ||\n                      (f.password.errors &&\n                        (f.password.dirty || f.password.touched)))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('password').hasError('required')\"\n                  >\n                    {{ \"driver.Passwordisrequired!\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('password').hasError('pattern')\"\n                  >\n                    {{\n                      \"driver.Mustcontainatleastonenumber,oneuppercaseandonelowercaseletter,onespecialcharacter,and atleast8characters.\"\n                        | translate\n                    }}\n                  </label>\n                </span>\n              </div>\n\n              <div class=\"col-12 col-md-6 col-lg-4\" *ngIf=\"!userId\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.Re-enterPassword\" | translate }}</label>\n                  <input\n                    [type]=\"fieldTextType1 ? 'text' : 'password'\"\n                    type=\"password\"\n                    class=\"form-control\"\n                    id=\"confirmPassword\"\n                    formControlName=\"confirmPassword\"\n                    placeholder=\"{{\n                      'driver.EnterConfirmPassword' | translate\n                    }}\"\n                    #confirmPassword\n                    (blur)=\"checkMatch(password.value, confirmPassword.value)\"\n                  />\n                  <i\n                    [ngClass]=\"{\n                      'fa-eye-slash': !fieldTextType1,\n                      'fa-eye': fieldTextType1\n                    }\"\n                    (click)=\"toggleFieldTextType1()\"\n                    class=\"fas fa-eye-slash\"\n                    id=\"eye\"\n                  ></i>\n                </div>\n                <div\n                  *ngIf=\"\n                    addDriverForm.get('confirmPassword').hasError('required') &&\n                    addDriverForm.get('confirmPassword').touched\n                  \"\n                  class=\"text-danger\"\n                >\n                  {{ \"driver.Confirmpasswordisrequired\" | translate }}\n                </div>\n                <div\n                  *ngIf=\"!this.passwordMatched && confirmPassword.value != ''\"\n                  class=\"text-danger\"\n                >\n                  {{ \"driver.Passwordnotmatched\" | translate }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.CorporateCode\" | translate }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"corporateCode\"\n                    minlength=\"5\"\n                    maxlength=\"5\"\n                    formControlName=\"corporateCode\"\n                    placeholder=\"{{ 'driver.EnterCorporateCode' | translate }}\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.corporateCode.errors &&\n                      (f.corporateCode.dirty || f.corporateCode.touched))\n                  \"\n                >\n                  <!-- <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('corporateCode')\"\n                  >\n                    {{ \"driver.CorporateCodeisrequired!\" | translate }}\n                  </label> -->\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"\n                      addDriverForm.get('corporateCode').hasError('minlength')\n                    \"\n                  >\n                    {{ \"driver.Corporatecodeshouldbe5digits\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('corporateCode').value?.length > 5\"\n                  >\n                    {{\n                      \"driver.Corporatecodeshouldnotexceed5digits\" | translate\n                    }}\n                  </label>\n                </span>\n              </div>\n\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.YearofBirth\" | translate }}</label>\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    id=\"yearOfBirth\"\n                    formControlName=\"yearOfBirth\"\n                    placeholder=\"{{ 'driver.EnterYearofBirth' | translate }}\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                    minlength=\"4\"\n                    maxlength=\"4\"\n                    max=\"{{ currentYear }}\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.yearOfBirth.errors &&\n                      (f.yearOfBirth.dirty || f.yearOfBirth.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"\n                      addDriverForm.get('yearOfBirth').hasError('minlength')\n                    \"\n                  >\n                    {{ \"driver.YearofBirthshouldbe4digits\" | translate }}\n                  </label>\n                  <!-- <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('yearOfBirth')\"\n                  >\n                    {{ \"driver.YearofBirthisrequired!\" | translate }}\n                  </label> -->\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('yearOfBirth').hasError('max')\"\n                  >\n                    {{ \"driver.YearofBirthcannotbeafutureyear\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addDriverForm.get('yearOfBirth').hasError('min')\"\n                  >\n                    {{ \"driver.YearofBirthshouldbeatleast1900\" | translate }}\n                  </label>\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"\n                      addDriverForm.get('yearOfBirth').hasError('underage')\n                    \"\n                  >\n                    {{\n                      \"driver.Youmustbeatleast18yearsoldtofilloutthisform\"\n                        | translate\n                    }}\n                  </label>\n                </span>\n              </div>\n\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.Height(incm)\" | translate }}</label>\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    id=\"height\"\n                    formControlName=\"height\"\n                    placeholder=\"{{ 'driver.EnterYourHeight' | translate }}\"\n                    min=\"54\"\n                    max=\"300\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.height.errors && (f.height.dirty || f.height.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"\n                      addDriverForm.get('height').hasError('min') ||\n                      addDriverForm.get('height').hasError('max')\n                    \"\n                  >\n                    {{ \"driver.height\" | translate }}\n                  </label>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.Weight(inkg)\" | translate }}</label>\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    id=\"weight\"\n                    formControlName=\"weight\"\n                    placeholder=\"{{ 'driver.EnterYourWeight' | translate }}\"\n                    max=\"360\"\n                    min=\"40\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.weight.errors && (f.weight.dirty || f.weight.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"\n                      addDriverForm.get('weight').hasError('min') ||\n                      addDriverForm.get('weight').hasError('max')\n                    \"\n                  >\n                    {{\n                      \"driver.Theweightshouldbeapositivenumberwithamaximumofthreedigits\"\n                        | translate\n                    }}\n                  </label>\n                </span>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.RestingHeartRate\" | translate }}</label>\n                  <input\n                    type=\"number\"\n                    class=\"form-control\"\n                    id=\"restingHeartRate\"\n                    formControlName=\"restingHeartRate\"\n                    placeholder=\"{{ 'driver.EnterHeartRate' | translate }}\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                    max=\"220\"\n                    min=\"40\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.restingHeartRate.errors &&\n                      (f.restingHeartRate.dirty || f.restingHeartRate.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"\n                      addDriverForm.get('restingHeartRate').hasError('min') ||\n                      addDriverForm.get('restingHeartRate').hasError('max')\n                    \"\n                  >\n                    {{\n                      \"driver.TheRestingHeartRateinbpmshouldbeainbpmandpositivenumberwithamaximumofthreedigits\"\n                        | translate\n                    }}\n                  </label>\n                </span>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label style=\"margin-right: 20px\">{{\n                    \"driver.RingUse\" | translate\n                  }}</label>\n                  <select\n                    name=\"ring\"\n                    class=\"form-control\"\n                    #isRing\n                    (change)=\"onRingChange($event)\"\n                    formControlName=\"ringUse\"\n                  >\n                    <option selected=\"selected\" value=\"\">\n                      {{ \"driver.SelectRing\" | translate }}\n                    </option>\n                    <option value=\"true\">{{ \"driver.Yes\" | translate }}</option>\n                    <option value=\"false\">{{ \"driver.No\" | translate }}</option>\n                  </select>\n                  <!-- <div\n                      *ngIf=\"\n                        addDriverForm.get('ringUse') &&\n                        addDriverForm.get('ringUse').touched\n                      \"\n                      class=\"text-danger\"\n                    >\n                      {{ \"driver.ringusedornot\" | translate }}\n                    </div> -->\n                </div>\n              </div>\n\n              <div\n                class=\"col-12 col-md-6 col-lg-4\"\n                *ngIf=\"isRing.value === 'true'\"\n              >\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.RingId\" | translate }}</label>\n                  <input\n                    type=\"string\"\n                    class=\"form-control\"\n                    id=\"ringId\"\n                    formControlName=\"ringId\"\n                    placeholder=\"{{ 'driver.EnterRingId' | translate }}\"\n                  />\n                </div>\n                <div\n                  *ngIf=\"\n                    addDriverForm.get('ringId').hasError('required') &&\n                    addDriverForm.get('ringId').touched\n                  \"\n                  class=\"text-danger\"\n                >\n                  {{ \"driver.RingIdisrequired\" | translate }}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            class=\"card-footer footer-btn-block border-0 bg-transparent\"\n            style=\"margin-left: -0.6%\"\n          >\n            <button\n              class=\"btn btn-primary graident btn-small custom-button\"\n              [disabled]=\"addDriverForm.invalid || !passwordMatched\"\n              type=\"submit\"\n              *ngIf=\"!userId\"\n            >\n              {{ \"driver.AddDriver\" | translate }}\n            </button>\n            <button\n              class=\"btn btn-primary graident btn-small custom-button\"\n              [disabled]=\"isSubmitDisabled()\"\n              type=\"submit\"\n              *ngIf=\"userId\"\n            >\n              {{ \"driver.UpdateDriver\" | translate }}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary btn-small custom-button mt-2 mt-sm-0 ml-sm-2\"\n              (click)=\"onCancel()\"\n            >\n              {{ \"driver.Cancel\" | translate }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { Subject } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { FunctionService } from '../../_service/function.service';\nimport { DriverService } from 'src/app/_service/driver.service';\nimport { JudgementService } from '../../_service/judgement.service';\nimport { SortDirection } from '@swimlane/ngx-datatable';\nimport { UserAuthService } from 'src/app/_service/user-auth.service';\n\n@Component({\n  selector: 'app-driver-judgement-result',\n  templateUrl: './driver-judgement-result.component.html',\n  styleUrls: ['./driver-judgement-result.component.css'],\n})\nexport class DriverJudgementResultComponent implements OnInit {\n  totaldocs: number = 10;\n  page: number = 1;\n  count = 10;\n  driver_id: any = '';\n  judgementData: any;\n  judgementLevel: any;\n\n  name: any = '';\n  selectedDate: Date | undefined;\n  isCalendarOpen = false;\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement!: DataTableDirective;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject<any>();\n  public filterTerm!: string;\n  createdAt: any;\n  selectedLevel = '';\n  public selectedLang: any = 'en';\n  sortColumn: string = '';\n  sortDirection: SortDirection = SortDirection.asc;\n  selectedItems: any = [];\n\n  constructor(\n    private _FunctionService: FunctionService,\n    private spinner: NgxSpinnerService,\n    private _ToastrManager: ToastrManager,\n    private route: ActivatedRoute,\n    private driverService: DriverService,\n    private JudgementService: JudgementService,\n    private _userAuthService: UserAuthService,\n    private router: Router\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.driver_id = params.get('id');\n      this.name = params.get('name');\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedLang = localStorage.getItem('selectedLang');\n    const selectedLang = this.selectedLang;\n    this.selectedItems = this._userAuthService.getSearchList('driver');\n\n    this.dtOptions = {\n      pageLength: 10,\n      lengthMenu: [10, 25, 50, 100],\n      processing: true,\n      ordering: false,\n      searching: false,\n    };\n    this._FunctionService.loadScript('clinic_page.js');\n    this.getAllDiagnosticByUser(1);\n\n    this.getAllJudgementLevel(1);\n  }\n\n  getAllDiagnosticByUser(page?: any) {\n    this.spinner.show();\n    let data = {\n      page: page ? page : this.page,\n      filter: this.selectedLevel ? this.selectedLevel : '',\n      count: this.count,\n      driver_id: this.driver_id,\n      createdAt: this.createdAt ? this.createdAt : '',\n      language: this.selectedLang,\n      sortColumn: this.sortColumn,\n      sortDirection: this.sortDirection == 'asc' ? 1 : -1,\n      scolumns: '',\n    };\n    this.driverService.allDiagnosticList(data).subscribe({\n      next: (res) => {\n        this.judgementData = [];\n        this.judgementData = res.data.data;\n        this.page = data.page;\n        this.totaldocs = res.data.total;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  }\n\n  pageChange(page: any) {\n    this.getAllDiagnosticByUser(page);\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  goBack1() {\n    this.router.navigate(['/DS/driver']);\n  }\n  // this.router.navigate(['/DS/corporate/user']);\n  clearDate() {\n    // this.spinner.show();\n\n    this.createdAt = ' ';\n    this.selectedLevel = '';\n    window.location.reload();\n\n    // this.spinner.hide();\n  }\n  data: any;\n  getAllJudgementLevel(page?: any) {\n    let data = {\n      page: page ? page : this.page,\n      filter: this.filterTerm ? this.filterTerm : '',\n      count: this.count,\n      driver_id: this.driver_id,\n      createdAt: this.createdAt ? this.createdAt : '',\n      language: this.selectedLang,\n    };\n    this.JudgementService.finalJudgementList(data).subscribe({\n      next: (res) => {\n        this.judgementLevel = [];\n        this.judgementLevel = res.data.data;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  }\n\n  onSelectLevel(level: string) {\n    this.selectedLevel = level;\n  }\n\n  sort(column: string) {\n    if (this.sortColumn === column) {\n      this.sortDirection =\n        this.sortDirection === SortDirection.asc\n          ? SortDirection.desc\n          : SortDirection.asc;\n    } else {\n      this.sortDirection = SortDirection.asc;\n      this.sortColumn = column;\n    }\n\n    this.getAllDiagnosticByUser();\n  }\n\n  getPropertyByPath(obj: any, path: string): any {\n    const properties = path.split('.');\n    let value = obj;\n\n    for (const prop of properties) {\n      value = value[prop];\n      if (value === undefined) {\n        break;\n      }\n    }\n\n    return value;\n  }\n  onItemSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n  OnItemDeSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onDeSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n\n  isAscending: boolean = false;\n  isAscending1: boolean = false;\n  isAscending2: boolean = false;\n  isAscending3: boolean = false;\n\n  toggleSortDirection() {\n    this.isAscending = !this.isAscending;\n  }\n\n  toggleSortDirection1() {\n    this.isAscending1 = !this.isAscending1;\n  }\n\n  toggleSortDirection2() {\n    this.isAscending2 = !this.isAscending2;\n  }\n\n  toggleSortDirection3() {\n    this.isAscending3 = !this.isAscending3;\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h3 *ngIf=\"selectedLang == 'en'\">\n        Judgement Result History for\n        {{ name }}\n      </h3>\n      <h3 *ngIf=\"selectedLang == 'ja'\">{{ name }} の最終判定結果履歴</h3>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'driver.Back' | translate }}\"\n        (click)=\"goBack1()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"row align-items-center\">\n        <div class=\"col-12 col-lg-3 mb-2 mb-lg-0\">\n          <select\n            class=\"form-control\"\n            id=\"levelDropdown\"\n            [(ngModel)]=\"selectedLevel\"\n            (change)=\"onSelectLevel(selectedLevel); getAllDiagnosticByUser()\"\n          >\n            <option value=\"\">{{ \"driver.SelectLevel\" | translate }}</option>\n            <option\n              *ngFor=\"let level of judgementLevel\"\n              [value]=\"level.level[selectedLang]\"\n            >\n              {{ level.level[selectedLang] }}\n            </option>\n          </select>\n        </div>\n        <div class=\"col-12 col-lg-3 mb-2 mb-lg-0\">\n          <div class=\"input-group add-on mb-0\">\n            <input\n              class=\"form-control\"\n              placeholder=\"Select Date\"\n              name=\"date-filter\"\n              id=\"date-filter\"\n              type=\"date\"\n              [(ngModel)]=\"createdAt\"\n              (ngModelChange)=\"getAllDiagnosticByUser()\"\n            />\n          </div>\n        </div>\n        <div class=\"col-12 col-lg-1\">\n          <input\n            class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n            type=\"button\"\n            value=\"Clear\"\n            (click)=\"clearDate()\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--Table-->\n\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-lg-12\">\n          <div class=\"table-responsive\">\n            <table\n              datatable\n              class=\"table table-bordered dt-responsive\"\n              style=\"width: 100%\"\n            >\n              <thead>\n                <tr>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection(); sort('level.en')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.JudgementResult\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection1(); sort('description.en')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.Description\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending1\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending1\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection2(); sort('createdAt')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.Date&Time\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending2\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending2\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th class=\"text-center sortable\">\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.ViewDetails\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                      </span>\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody\n                *ngFor=\"\n                  let element of judgementData\n                    | paginate\n                      : {\n                          itemsPerPage: count,\n                          currentPage: page,\n                          id: 'second',\n                          totalItems: totaldocs\n                        }\n                \"\n              >\n                <tr>\n                  <td class=\"text-capitalize\">\n                    {{ element.level[selectedLang] }}<br />\n                    {{ element.title[selectedLang] }}\n                  </td>\n                  <td>{{ element.description[selectedLang] }}</td>\n                  <td>\n                    {{ element.createdAt | date : \"yyyy-MM-dd, HH:mm:ss\" }}\n                  </td>\n                  <td>\n                    <a\n                      [routerLink]=\"[\n                        '/DS/driver/aptitude-result',\n                        element.declarationId\n                      ]\"\n                      [queryParams]=\"{\n                        _id: element._id,\n                        createdAt: element.createdAt\n                      }\"\n                      >{{ \"driver.View\" | translate }}</a\n                    >\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <p class=\"text-center\" *ngIf=\"totaldocs == 0\">\n              {{ \"common.NoResultsFound\" | translate }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"totaldocs > 10\">\n        <div class=\"col-sm-6 text-left\">\n          <pagination-controls\n            (pageChange)=\"pageChange($event)\"\n            id=\"second\"\n            previousLabel=\"{{ 'driver.Previous' | translate }}\"\n            nextLabel=\"{{ 'driver.Next' | translate }}\"\n          >\n          </pagination-controls>\n        </div>\n        <div class=\"col-sm-6 text-right\" *ngIf=\"totaldocs > 10\">\n          <label for=\"entries\"\n            >{{ \"driver.NumberofEntries\" | translate }} :&nbsp;\n          </label>\n          <select\n            id=\"entries\"\n            [(ngModel)]=\"count\"\n            (ngModelChange)=\"getAllDiagnosticByUser(1)\"\n          >\n            <option value=\"10\" *ngIf=\"totaldocs >= 10\">10</option>\n            <option value=\"20\" *ngIf=\"totaldocs >= 20\">20</option>\n            <option value=\"30\" *ngIf=\"totaldocs >= 30\">30</option>\n            <option value=\"40\" *ngIf=\"totaldocs >= 40\">40</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { FunctionService } from '../../_service/function.service';\nimport { DriverService } from 'src/app/_service/driver.service';\nimport { Subject } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport Swal from 'sweetalert2';\nimport { SortDirection } from '@swimlane/ngx-datatable';\nimport { UserAuthService } from 'src/app/_service/user-auth.service';\n\n@Component({\n  selector: 'app-driver-list',\n  templateUrl: './driver-list.component.html',\n  styleUrls: ['./driver-list.component.css'],\n})\nexport class DriverListComponent implements OnInit {\n  goBack() {\n    this.router.navigate(['/DS']);\n  }\n\n  goBack1() {\n    window.history.back();\n  }\n  _clinicList: any = [];\n  driver_id: any = '';\n  totaldocs: number = 10;\n  page: number = 1;\n  count = 10;\n  data: any;\n  pathwayList: any = [];\n  isChecked = false;\n  isback = false;\n\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement!: DataTableDirective;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject<any>();\n  public filterTerm!: string;\n\n  // Define a property to hold the current sorting parameters\n  sortColumn: string = '';\n  sortDirection: SortDirection = SortDirection.asc;\n\n  //datatable\n  dropdownList: any = [];\n  selectedItems: any = [];\n  dropdownSettings = {};\n\n  // formatPhoneNumber(phoneNumber: string): string {\n  //   const formattedPhoneNumber = phoneNumber.replace(\n  //     /(\\d{3})(\\d{4})(\\d{4})/,\n  //     '$1-$2-$3'\n  //   );\n  //   return formattedPhoneNumber;\n  // }\n\n  selectedLang = localStorage.getItem('selectedLang');\n\n  public role = localStorage.getItem('role');\n\n  constructor(\n    private _FunctionService: FunctionService,\n    private spinner: NgxSpinnerService,\n    private _ToastrManager: ToastrManager,\n    private driverService: DriverService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private _userAuthService: UserAuthService\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.driver_id = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.dtOptions = {\n      pageLength: 10,\n      lengthMenu: [10, 25, 50, 100],\n      processing: true,\n      ordering: false,\n      searching: false,\n    };\n    this._FunctionService.loadScript('clinic_page.js');\n    this.getDriverList(1);\n\n    this.dropdownList = [\n      { id: 'name', itemName: this.selectedLang == 'en' ? 'Name' : '名前' },\n      { id: 'gender', itemName: this.selectedLang == 'en' ? 'Gender' : '性別' },\n      {\n        id: 'email',\n        itemName: this.selectedLang == 'en' ? 'Email' : '電子メール',\n      },\n      {\n        id: 'phone',\n        itemName: this.selectedLang == 'en' ? 'Phone' : '電話番号',\n      },\n      {\n        id: 'corporateCode',\n        itemName: this.selectedLang == 'en' ? 'Corporate Code' : '企業コード',\n      },\n    ];\n    this.selectedItems = this._userAuthService.getSearchList('driver');\n    this.dropdownSettings = {\n      singleSelection: false,\n      text: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      selectAllText: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      unSelectAllText:\n        this.selectedLang == 'en' ? 'UnSelect All' : 'すべて選択を解除',\n      enableSearchFilter: true,\n      classes: 'myclass custom-class multiselect-dropdown-blc',\n    };\n\n    if (this.role !== 'ADMIN') {\n      // Disable the browser's back button\n      window.history.pushState(null, window.location.href);\n      window.onpopstate = function (event) {\n        window.history.pushState(null, window.location.href);\n      };\n    }\n  }\n\n  driverList: any[] = [];\n\n  getDriverList(page?: any) {\n    let data = {\n      page: page ? page : this.page,\n      filter: this.filterTerm ? this.filterTerm : '',\n      count: this.count,\n      roles: 'DRIVER',\n      scolumns: '',\n      sortColumn: this.sortColumn,\n      sortDirection: this.sortDirection == 'asc' ? 1 : -1,\n    };\n\n    this._userAuthService.getSearchList('driver').forEach((element: any) => {\n      data.scolumns =\n        data.scolumns != '' ? data.scolumns + ',' + element.id : element.id;\n    });\n\n    this.driverService.driverList(data).subscribe({\n      next: (res) => {\n        this.spinner.show();\n        this.driverList = res.data.data;\n        this.driverList = res.data.data.map((user: any) => ({\n          ...user,\n          phone: this.formatPhoneNumber(user.phone),\n        }));\n        this.totaldocs = res.data.total;\n        this.page = data.page;\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  }\n\n  pageChange(page: any) {\n    this.getDriverList(page);\n  }\n\n  deleteDriver: any;\n  driverDelete(driverId: any) {\n    const cancelButtonText =\n      this.selectedLang == 'en' ? 'Cancel' : 'キャンセル';\n    const confirmButtonText = this.selectedLang == 'en' ? 'Yes' : 'はい';\n    Swal.fire({\n      title: this.selectedLang == 'en' ? 'Are you sure?' : '本気ですか？',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: confirmButtonText,\n      cancelButtonText: cancelButtonText,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.spinner.show();\n        this.driverService.deleteDriver(driverId).subscribe({\n          next: (res) => {\n            if (res.statusCode === 200) {\n              this.deleteDriver = res.data;\n              setTimeout(() => {\n                const successMessage =\n                  this.selectedLang === 'en'\n                    ? 'User removed successfully!'\n                    : 'ユーザーは正常に削除されました。';\n                this._ToastrManager.successToastr(successMessage);\n                this.getDriverList(this.page);\n                this.spinner.hide();\n              }, 500);\n            }\n          },\n          error: (err) => {},\n        });\n      }\n    });\n  }\n\n  ngAfterViewInit(): void {}\n\n  ngOnDestroy(): void {}\n\n  // Function to handle sorting\n  sort(column: string) {\n    if (this.sortColumn === column) {\n      this.sortDirection =\n        this.sortDirection === SortDirection.asc\n          ? SortDirection.desc\n          : SortDirection.asc;\n    } else {\n      this.sortDirection = SortDirection.asc;\n      this.sortColumn = column;\n    }\n\n    this.getDriverList();\n  }\n\n  onItemSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n  OnItemDeSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onDeSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'driver',\n      searchColumns: this.selectedItems,\n    });\n  }\n\n  import() {\n    this.router.navigate(['/DS/driver/driver-import']);\n  }\n\n  isAscending: boolean = false;\n  isAscending1: boolean = false;\n  isAscending2: boolean = false;\n  isAscending3: boolean = false;\n  isAscending4: boolean = false;\n  isAscending5: boolean = false;\n\n  toggleSortDirection() {\n    this.isAscending = !this.isAscending;\n  }\n\n  toggleSortDirection1() {\n    this.isAscending1 = !this.isAscending1;\n  }\n\n  toggleSortDirection2() {\n    this.isAscending2 = !this.isAscending2;\n  }\n\n  toggleSortDirection3() {\n    this.isAscending3 = !this.isAscending3;\n  }\n\n  toggleSortDirection4() {\n    this.isAscending4 = !this.isAscending4;\n  }\n\n  toggleSortDirection5() {\n    this.isAscending5 = !this.isAscending5;\n  }\n\n  getGender(gender: any) {\n    if (this.selectedLang === 'en') {\n      if (gender == 'Male') return gender;\n\n      if (gender == 'Female') return gender;\n\n      if (gender == 'Other') return gender;\n\n      if (gender == '男性') return 'Male';\n\n      if (gender == '女性') return 'Female';\n\n      if (gender == '他の') return 'Other';\n\n      if (gender == '男') return 'Male';\n    } else {\n      if (gender == 'Male') return '男性';\n\n      if (gender == 'Female') return '女性';\n\n      if (gender == 'Other') return '他の';\n\n      if (gender == '男性') return gender;\n\n      if (gender == '女性') return gender;\n\n      if (gender == '他の') return gender;\n\n      if (gender == '男') return gender;\n    }\n  }\n\n  formatPhoneNumber(phoneNumber: string): string {\n    const formattedPhoneNumber = phoneNumber.replace(\n      /(\\d{3})(\\d{4})(\\d{4})/,\n      '$1-$2-$3'\n    );\n    return formattedPhoneNumber;\n  }\n}\n","<div class=\"wh700\">\n  <!-- <div class=\"clearfix\"></div> -->\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h3>\n        <b>{{ \"driver.DriverManagement\" | translate }}</b>\n      </h3>\n      <!-- </div> -->\n    </div>\n    <div class=\"title_right\" *ngIf=\"role === 'ADMIN'\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'driver.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n\n      <button\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        (click)=\"import()\"\n        style=\"float: right; margin-right: 10px\"\n      >\n        <i class=\"fa fa-cloud-upload\"></i> &nbsp;\n        {{ \"driver.ImportButton\" | translate }}\n      </button>\n    </div>\n  </div>\n\n  <div class=\"clearfix\"></div>\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"main-sorting-header\">\n        <div class=\"sorting-block\">\n          <div class=\"select-block\">\n            <angular2-multiselect\n              [data]=\"dropdownList\"\n              [(ngModel)]=\"selectedItems\"\n              [settings]=\"dropdownSettings\"\n              (onSelect)=\"onItemSelect($event)\"\n              (onDeSelect)=\"OnItemDeSelect($event)\"\n              (onSelectAll)=\"onSelectAll($event)\"\n              (onDeSelectAll)=\"onDeSelectAll($event)\"\n            ></angular2-multiselect>\n          </div>\n          <div class=\"search-block\">\n            <div class=\"input-group add-on mb-0\">\n              <button class=\"btn btn-default srch-icon\" type=\"submit\">\n                <i class=\"fa-solid fa-magnifying-glass\"></i>\n              </button>\n              <input\n                class=\"form-control\"\n                placeholder=\"{{ 'driver.Searchdriver' | translate }}\"\n                name=\"srch-term\"\n                id=\"srch-term\"\n                type=\"text\"\n                [(ngModel)]=\"filterTerm\"\n                (keyup)=\"getDriverList()\"\n                autocomplete=\"off\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"sorting-button\">\n          <a\n            [routerLink]=\"['/DS/driver/driver-add']\"\n            class=\"btn-login btn btn-primary btn-block btn-pad-top-bot-4\"\n            ><i class=\"fa-solid fa-circle-plus\"></i>\n            {{ \"driver.AddDriver\" | translate }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-lg-12\">\n          <div class=\"table-responsive\">\n            <table\n              datatable\n              class=\"table table-bordered dt-responsive\"\n              style=\"width: 100%\"\n            >\n              <thead>\n                <tr>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection(); sort('name')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.Name\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection1(); sort('gender')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.Gender\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending1\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending1\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection2(); sort('email')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.EmailId\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending2\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending2\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection3(); sort('phone')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.PhoneNumber\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending3\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending3\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection4(); sort('date_registered')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.RegisteredDate\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending4\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending4\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection5(); sort('corporateCode')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"driver.CorporateCode\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending5\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending5\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th class=\"text-center\">{{ \"driver.Action\" | translate }}</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  *ngFor=\"\n                    let element of driverList\n                      | paginate\n                        : {\n                            itemsPerPage: count,\n                            currentPage: page,\n                            id: 'second',\n                            totalItems: totaldocs\n                          }\n                  \"\n                ></tr>\n                <tr *ngFor=\"let element of driverList | filter : filterTerm\">\n                  <td>\n                    <a [routerLink]=\"['/DS/driver/driver-view', element._id]\">{{\n                      element?.name\n                    }}</a>\n                  </td>\n                  <td>{{ getGender(element.gender) }}</td>\n                  <td>{{ element?.email }}</td>\n                  <td>{{ element?.phone }}</td>\n                  <!-- <td>{{ element?.date_registered | date : \"yyyy/MM/dd\" }}</td> -->\n                  <td>{{ element?.createdAt | date : \"yyyy/MM/dd\" }}</td>                  \n                  <td>{{ element?.corporateCode }}</td>\n                  <td class=\"text-center\">\n                    <ul class=\"care-path-right-icon pt-0\">\n                      <li>\n                        <a\n                          [routerLink]=\"['/DS/driver/driver-view', element._id]\"\n                          ><i class=\"fa-solid fa-eye\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a\n                          [routerLink]=\"[\n                            '/DS/driver/driver-judgement-result',\n                            element._id,\n                            element.name\n                          ]\"\n                          ><i class=\"fa-solid fa-align-left\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a\n                          [routerLink]=\"['/DS/driver/driver-edit', element._id]\"\n                          ><i class=\"fa-solid fa-pencil\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a (click)=\"driverDelete(element._id)\"\n                          ><i class=\"fa-solid fa-trash-can\"></i\n                        ></a>\n                      </li>\n                    </ul>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <p class=\"text-center\" *ngIf=\"totaldocs == 0\">\n              {{ \"common.NoResultsFound\" | translate }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"totaldocs > 10\">\n        <div class=\"col-sm-6 text-left\">\n          <pagination-controls\n            (pageChange)=\"pageChange($event)\"\n            id=\"second\"\n            previousLabel=\"{{ 'driver.Previous' | translate }}\"\n            nextLabel=\"{{ 'driver.Next' | translate }}\"\n          >\n          </pagination-controls>\n        </div>\n        <div class=\"col-sm-6 text-right\">\n          <label for=\"entries\"\n            >{{ \"driver.NumberofEntries\" | translate }} :&nbsp;\n          </label>\n          <select\n            id=\"entries\"\n            [(ngModel)]=\"count\"\n            (ngModelChange)=\"getDriverList(1)\"\n          >\n            <option value=\"10\" *ngIf=\"totaldocs >= 10\">10</option>\n            <option value=\"20\" *ngIf=\"totaldocs >= 20\">20</option>\n            <option value=\"30\" *ngIf=\"totaldocs >= 30\">30</option>\n            <option value=\"40\" *ngIf=\"totaldocs >= 40\">40</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DriverListComponent } from './driver-list/driver-list.component';\nimport { DriverAddComponent } from './driver-add/driver-add.component';\nimport { DriverViewComponent } from './driver-view/driver-view.component';\nimport { DriverJudgementResultComponent } from './driver-judgement-result/driver-judgement-result.component';\nimport { AptitudeResultComponent } from './aptitude-result/aptitude-result.component';\nimport { ImportComponent } from './import/import.component';\n\n\nconst routes: Routes = [\n  { path: \"\", component: DriverListComponent },\n  { path: 'driver-listing', component: DriverListComponent },\n  { path: 'driver-add', component: DriverAddComponent },\n  { path: 'driver-edit/:id', component: DriverAddComponent },\n  { path: 'driver-view/:id', component: DriverViewComponent },\n  { path: 'driver-judgement-result/:id/:name', component: DriverJudgementResultComponent },\n  { path: 'aptitude-result/:id', component: AptitudeResultComponent },\n  { path: 'driver-import', component: ImportComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DriverRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { DriverService } from 'src/app/_service/driver.service';\n\n@Component({\n  selector: 'app-driver-view',\n  templateUrl: './driver-view.component.html',\n  styleUrls: ['./driver-view.component.css'],\n})\nexport class DriverViewComponent implements OnInit {\n  driver_id: any = '';\n  driverDetails: any;\n  selectedLang = localStorage.getItem('selectedLang');\n  constructor(\n    private driverService: DriverService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.driver_id = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.getDriverView();\n  }\n\n  getDriverView = () => {\n    this.spinner.show();\n    this.driverService.driverView(this.driver_id).subscribe({\n      next: (res) => {\n        this.driverDetails = res.data[0];\n        this.formatPhoneNumber();\n\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  };\n\n  formatPhoneNumber() {\n    if (this.driverDetails && this.driverDetails.phone) {\n      this.driverDetails.phone = this.driverDetails.phone.replace(\n        /^(\\d{3})(\\d{4})(\\d{4})$/,\n        '$1-$2-$3'\n      );\n    }\n  }\n  goBack() {\n    window.history.back();\n  }\n\n  getGender(gender: any) {\n    if (this.selectedLang === 'en') {\n      if (gender == 'Male') return gender;\n\n      if (gender == 'Female') return gender;\n\n      if (gender == 'Other') return gender;\n\n      if (gender == '男性') return 'Male';\n\n      if (gender == '女性') return 'Female';\n\n      if (gender == '他の') return 'Other';\n\n      if (gender == '男') return 'Male';\n    } else {\n      if (gender == 'Male') return '男性';\n\n      if (gender == 'Female') return '女性';\n\n      if (gender == 'Other') return '他の';\n\n      if (gender == '男性') return gender;\n\n      if (gender == '女性') return gender;\n\n      if (gender == '他の') return gender;\n\n      if (gender == '男') return gender;\n    }\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h3>\n        <b>{{ \"driver.DriverDetails\" | translate }}</b>\n      </h3>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'driver.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form>\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <h4 class=\"fs-20 fw-bold\"></h4>\n              </div>\n            </div>\n\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-4 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label\n                    ><b>{{ \"driver.DriverName\" | translate }}</b></label\n                  >\n                  <p>{{ driverDetails?.name }}</p>\n                </div>\n              </div>\n\n              <div class=\"col-12 col-md-4 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label\n                    ><b>{{ \"driver.EmailId\" | translate }}</b></label\n                  >\n                  <p>{{ driverDetails?.email }}</p>\n                </div>\n              </div>\n              <div class=\"col-12 col-md-4 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label\n                    ><b>{{ \"driver.PhoneNumber\" | translate }}</b></label\n                  >\n                  <p>{{ driverDetails?.phone }}</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-4 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label\n                    ><b>{{ \"driver.Gender\" | translate }}</b></label\n                  >\n                  <p>\n                    {{ getGender(driverDetails.gender) }}\n                  </p>\n                </div>\n              </div>\n              <div class=\"col-12 col-md-4 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label\n                    ><b>{{ \"driver.CorporateCode\" | translate }}</b></label\n                  >\n                  <p>{{ driverDetails?.corporateCode }}</p>\n                </div>\n              </div>\n              <div class=\"col-12 col-md-4 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label\n                    ><b>{{ \"driver.YearofBirth\" | translate }}</b></label\n                  >\n                  <p>{{ driverDetails?.yearOfBirth }}</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-4 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label\n                    ><b>{{ \"driver.RestingHeartRate\" | translate }}</b></label\n                  >\n                  <p>{{ driverDetails?.restingHeartRate }}</p>\n                </div>\n              </div>\n              <div class=\"col-12 col-md-4 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label\n                    ><b>{{ \"driver.RingUse\" | translate }}</b></label\n                  >\n                  <p>{{ driverDetails?.ringUse ? \"Yes\" : \"No\" }}</p>\n                </div>\n              </div>\n              <div class=\"col-12 col-md-4 col-lg-4\">\n                <div class=\"form-group mb-3\" *ngIf=\"driverDetails.ringUse\">\n                  <label\n                    ><b>{{ \"driver.RingId\" | translate }}</b></label\n                  >\n                  <p>{{ driverDetails?.ringId }}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DriverRoutingModule } from './driver-routing.module';\nimport { DriverListComponent } from './driver-list/driver-list.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DriverAddComponent } from './driver-add/driver-add.component';\nimport { DriverViewComponent } from './driver-view/driver-view.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { DriverJudgementResultComponent } from './driver-judgement-result/driver-judgement-result.component';\nimport { AptitudeResultComponent } from './aptitude-result/aptitude-result.component';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ImportComponent } from './import/import.component';\n\n@NgModule({\n  declarations: [\n    DriverListComponent,\n    DriverAddComponent,\n    DriverViewComponent,\n    DriverJudgementResultComponent,\n    AptitudeResultComponent,\n    ImportComponent,\n  ],\n  imports: [\n    CommonModule,\n    DriverRoutingModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule,\n    AngularMultiSelectModule,\n    TranslateModule,\n  ],\n})\nexport class DriverModule {}\n","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DriverService } from 'src/app/_service/driver.service';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\n@Component({\n  selector: 'app-import',\n  templateUrl: './import.component.html',\n  styleUrls: ['./import.component.css'],\n})\nexport class ImportComponent implements OnInit {\n  public selectedLang: any = 'en';\n\n  formData = {\n    name: '',\n    file: null,\n  };\n\n  invalidUsers: any[] = [];\n  validUsers: any[] = [];\n\n  addDriverForm: any = FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    private driverService: DriverService,\n    private _ToastrManager: ToastrManager,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.selectedLang = localStorage.getItem('selectedLang');\n  }\n\n  ngOnInit(): void {\n    this.formValidation();\n  }\n  formValidation() {\n    this.addDriverForm = this.fb.group({\n      csvFile: ['', Validators.required],\n    });\n  }\n  goBack() {\n    window.history.back();\n  }\n\n  onSubmit() {\n    let data = this.addDriverForm.value;\n\n    const formData = new FormData();\n\n    if (this.formData.file) {\n      formData.append('csvFile', this.formData.file, this.formData.name);\n    }\n    this.driverService.importDriver(formData).subscribe(\n      (result) => {\n        this.spinner.show();\n\n        setTimeout(() => {\n          const successMessage =\n            this.selectedLang === 'en'\n              ? 'Driver Added Successfully'\n              : 'ドライバーが正常に追加されました';\n          this.invalidUsers = result.data.invalidUsers;\n          this.validUsers = result.data.validUsers;\n          this.spinner.hide();\n        }, 1000);\n      },\n      (error) => {\n        let errorMessage = '';\n        this.selectedLang === 'en'\n          ? (errorMessage = 'Invalid CSV')\n          : (errorMessage = '無効なCSV');\n        this._ToastrManager.errorToastr(errorMessage);\n      }\n    );\n  }\n\n  onFileSelected(event: any) {\n    const file = event.target.files[0];\n    this.formData.file = file;\n    this.formData.name = 'csvFile';\n  }\n\n  onCancel(): void {\n    this.addDriverForm.reset();\n    this.validUsers = [];\n    this.invalidUsers = [];\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h2>\n        <b>\n          {{ \"driver.ImportDrivers\" | translate }}\n        </b>\n      </h2>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'driver.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form [formGroup]=\"addDriverForm\">\n          <!-- <div class=\"card-body\"> -->\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <h4 class=\"fs-20 fw-bold\"></h4>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"driver.selectCSV\" | translate }} </label>\n                  <!-- <label>{{ \"driver.DriverName\" | translate }}</label> -->\n                  <!-- <p translate='driver.DriverName'></p> -->\n                  <!-- \"{{ 'driver.EnterName' | translate }}\" -->\n                  <input\n                    type=\"file\"\n                    class=\"form-control\"\n                    placeholder=\"ChooseFile\"\n                    (change)=\"onFileSelected($event)\"\n                    formControlName=\"csvFile\"\n                    style=\"width: 500px; padding-bottom: 33px\"\n                    accept=\".csv\"\n                  />\n                  <!-- <input \n                    type=\"file\"\n                    class=\"form-control\"\n                    placeholder=\"ファイルを選ぶ\"\n                    (change)=\"onFileSelected($event)\"\n                    formControlName=\"csvFile\"  *ngIf=\"selectedLang == 'ja'\"\n                  /> -->\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12 info\" *ngIf=\"selectedLang == 'en'\">\n                Ensure the CSV data is correctly formatted and includes all\n                required fields.\n              </div>\n              <div class=\"col-12 info\" *ngIf=\"selectedLang == 'ja'\">\n                CSV\n                データが正しくフォーマットされており、必須フィールドがすべて含まれていることを確認してください。\n              </div>\n            </div>\n            <div class=\"row\">\n              <div\n                class=\"card-footer border-0 bg-transparent\"\n                style=\"margin-left: -0.6%\"\n              >\n                <button\n                  class=\"btn btn-primary graident btn-small custom-button\"\n                  [disabled]=\"addDriverForm.invalid\"\n                  (click)=\"onSubmit()\"\n                >\n                  {{ \"driver.Import\" | translate }}\n                </button>\n\n                <button\n                  type=\"button\"\n                  class=\"btn btn-secondary btn-small custom-button ml-2\"\n                  (click)=\"onCancel()\"\n                >\n                  {{ \"driver.Cancel\" | translate }}\n                </button>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div\n                  style=\"height: 300px; width: 600px; overflow-y: auto\"\n                  *ngIf=\"validUsers.length > 0\"\n                >\n                  <label *ngIf=\"validUsers.length > 0\" class=\"text-info\">\n                    {{ \"driver.importedSucess\" | translate }}\n                  </label>\n                  <table\n                    class=\"table table-bordered dt-responsive\"\n                    style=\"width: 100%\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>{{ \"driver.No\" | translate }}</th>\n                        <th>{{ \"driver.Name\" | translate }}</th>\n                        <th>{{ \"driver.EmailId\" | translate }}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <!-- You can add rows and data here -->\n                      <tr *ngFor=\"let element of validUsers; let i = index\">\n                        <td>{{ i + 1 }}</td>\n                        <td>{{ element?.name }}</td>\n                        <td>{{ element?.email }}</td>\n                      </tr>\n                      <!-- Add more rows as needed -->\n                    </tbody>\n                  </table>\n                </div>\n                <div *ngIf=\"invalidUsers.length > 0\" class=\"mb-3\">\n                  <label class=\"text-danger\">\n                    {{ \"driver.importedFailed\" | translate }}\n                  </label>\n                </div>\n                <div\n                  style=\"height: 300px; width: 600px; overflow-y: auto\"\n                  *ngIf=\"invalidUsers.length > 0\"\n                >\n                  <table\n                    class=\"table table-bordered dt-responsive\"\n                    style=\"width: 100%\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>{{ \"driver.No\" | translate }}</th>\n                        <th>{{ \"driver.Name\" | translate }}</th>\n                        <th>{{ \"driver.EmailId\" | translate }}</th>\n                        <th>{{ \"driver.Comment\" | translate }}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <!-- You can add rows and data here -->\n                      <tr *ngFor=\"let element of invalidUsers; let i = index\">\n                        <td>{{ i + 1 }}</td>\n                        <td>{{ element?.name }}</td>\n                        <td>{{ element?.email }}</td>\n                        <td *ngIf=\"this.selectedLang == 'en'\">\n                          {{ element?.error }}\n                        </td>\n                        <td *ngIf=\"this.selectedLang == 'ja'\">\n                          {{ element?.errorJa }}\n                        </td>\n                      </tr>\n\n                      <!-- Add more rows as needed -->\n                    </tbody>\n                  </table>\n                </div>\n                <!-- <div>Note: Please check CSV field's for Invalid users</div> -->\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}