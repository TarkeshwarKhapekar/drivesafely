{"version":3,"file":"src_app_notice_notice_module_ts.js","mappings":"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","sources":["./src/app/_service/notice.service.ts","./src/app/notice/notice-add/notice-add.component.ts","./src/app/notice/notice-add/notice-add.component.html","./src/app/notice/notice-listing/notice-listing.component.ts","./src/app/notice/notice-listing/notice-listing.component.html","./src/app/notice/notice-routing.module.ts","./src/app/notice/notice-view/notice-view.component.ts","./src/app/notice/notice-view/notice-view.component.html","./src/app/notice/notice.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { environment } from '../../environments/environment';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoticeService {\n  allowedImageTypes = ['image/jpeg', 'image/png', 'image/jpg'];\n\n  public _api_url = environment.api_url;\n  _drivingSafetyAccessToken: any;\n\n  constructor(public _http: HttpClient) {\n    this._drivingSafetyAccessToken = localStorage.getItem(\n      '_drivingSafetyAccessToken'\n    );\n  }\n\n  public noticeList(data: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .get(\n        `${this._api_url}notification/get-all-notification?page=${data.page}&count=${data.count}&search=${data.filter}&scolumns=${data.scolumns}&sortBy=${data.sortColumn}&sortDirection=${data.sortDirection}`,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  public noticeView(id: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .get(\n        `${this._api_url}notification/get-notification/${id}`,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  public addNotice(noticeParams: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .post(\n        `${this._api_url}notification/add-notification`,\n        noticeParams,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  public editNotice(editNoticeParams: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .post(\n        `${this._api_url}notification/update-notification`,\n        editNoticeParams,\n        requestOptions\n      )\n      .pipe(catchError(this.error));\n  }\n\n  public deleteNotice(id: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers };\n    return this._http\n      .delete(`${this._api_url}notification/delete/${id}`, requestOptions)\n      .pipe(catchError(this.error));\n  }\n\n  public deleteImage(id: any, image: any): Observable<any> {\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${this._drivingSafetyAccessToken}`,\n    });\n    const requestOptions = { headers: headers, body: { id: id, image: image } };\n    return this._http\n      .delete(`${this._api_url}image/delete`, requestOptions)\n      .pipe(catchError(this.error));\n  }\n  // Handle Errors\n  error(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NoticeService } from 'src/app/_service/notice.service';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-notice-add',\n  templateUrl: './notice-add.component.html',\n  styleUrls: ['./notice-add.component.css'],\n})\nexport class NoticeAddComponent implements OnInit {\n  typeChange: EventEmitter<string> = new EventEmitter<string>();\n\n  onTypeChange(event: any) {\n    const selectedType: string = event.target.value;\n    this.typeChange.emit(selectedType);\n  }\n  originalFormValue: any;\n  addNoticeForm: any = FormGroup;\n  submitted = false;\n  fieldTextType!: boolean;\n  noticeId: any;\n  noticeDetails: any;\n  imgsrc: any;\n  imagefiles: any;\n  filesview: any;\n  allowedImageTypes: any = [];\n  noticeImages: any = [];\n  noticePreviewImages: any = [];\n  selectedLng: any;\n  selectLng: any;\n  image: any;\n  url: string = environment.image_url;\n  imageurl: undefined;\n  public selectedLang: any = 'ja';\n\n  constructor(\n    private fb: FormBuilder,\n    private noticeService: NoticeService,\n    private _ToastrManager: ToastrManager,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.noticeId = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedLang = localStorage.getItem('selectedLang');\n    if (this.selectedLang === 'en') {\n      this.selectedLng = 'en';\n      this.selectLng = 'en';\n    } else {\n      this.selectedLng = 'ja';\n      this.selectLng = 'ja';\n    }\n\n    this.allowedImageTypes = this.noticeService.allowedImageTypes;\n    this.formValidation();\n    this.getNoticeDetails();\n  }\n\n  formValidation() {\n    this.addNoticeForm = this.fb.group({\n      type: ['', [Validators.required]],\n      title: ['', [Validators.required]],\n      titleJa: ['', [Validators.required]],\n      message: ['', [Validators.required]],\n      messageJa: ['', [Validators.required]],\n      image: [''],\n    });\n\n    this.originalFormValue = this.addNoticeForm.value;\n\n    this.addNoticeForm.valueChanges.subscribe(() => {\n      this.submitted = false;\n    });\n  }\n\n  openImageSelector() {\n    let element: HTMLElement = document.getElementsByClassName(\n      'file-upload'\n    )[0] as HTMLElement;\n    if (element) {\n      element.click();\n    } else {\n      const errorMessage =\n        this.selectedLang == 'en'\n          ? 'Something went wrong!'\n          : '何か問題が発生しました!';\n      this._ToastrManager.errorToastr(errorMessage);\n    }\n  }\n\n  onFileChanged(event: any) {\n    if (event.target.value.length === 0) {\n      return;\n    }\n\n    const file = event.target.files[0];\n    const maxSizeInBytes = 10485760; // 10KB\n\n    if (this.allowedImageTypes.indexOf(file.type) !== -1) {\n      if (file.size <= maxSizeInBytes) {\n        this.noticeImages.push(file);\n\n        if (event.target.files && file) {\n          var reader = new FileReader();\n          reader.onload = (event: any) => {\n            this.noticePreviewImages.push(event.target.result);\n          };\n          reader.readAsDataURL(file);\n        } else {\n          const errorMessage =\n            this.selectedLang == 'en'\n              ? 'Selected image is not allowed.'\n              : '選択した画像は許可されていません。!';\n          this._ToastrManager.errorToastr(errorMessage);\n        }\n      } else {\n        const errorMessage =\n          this.selectedLang == 'en'\n            ? 'Image size should be less than 10MB.'\n            : '画像サイズは10MB未満である必要があります。';\n        this._ToastrManager.errorToastr(errorMessage);\n      }\n    } else {\n      const errorMessage =\n        this.selectedLang == 'en'\n          ? 'Selected image is not allowed.'\n          : '選択した画像は許可されていません。!';\n      this._ToastrManager.errorToastr(errorMessage);\n    }\n  }\n\n  id: any;\n\n  removeImages(index: string) {\n    this.spinner.show();\n    const filename = index.substring(index.lastIndexOf('/') + 1);\n    this.id = this.noticeId;\n    this.noticeService.deleteImage(this.id, filename).subscribe({\n      next: (res: any) => {\n        if (res.statusCode == 200) {\n          setTimeout(() => {\n            const successMessage =\n              this.selectedLang == 'en'\n                ? 'Image deleted Successfully'\n                : '画像は正常に削除されました';\n            this._ToastrManager.successToastr(successMessage);\n            this.spinner.hide();\n          }, 1000);\n        }\n      },\n      error: (e) => {},\n    });\n    this.noticePreviewImages.splice(index, 1);\n    this.noticeImages.splice(index, 1);\n  }\n\n  get f() {\n    return this.addNoticeForm.controls;\n  }\n\n  onSubmit() {\n    const formValues: any = this.addNoticeForm.value;\n    const formData = new FormData();\n    formData.append('type', formValues.type);\n    formData.append('title', formValues.title);\n    formData.append('titleJa', formValues.titleJa);\n    formData.append('message', formValues.message);\n    formData.append('messageJa', formValues.messageJa);\n    for (var i = 0; i < this.noticeImages.length; i++) {\n      formData.append('image', this.noticeImages[i]);\n    }\n\n    if (!this.noticeId) {\n      this.noticeService.addNotice(formData).subscribe({\n        next: (res: any) => {\n          if (res.statusCode == 200) {\n            setTimeout(() => {\n              const successMessage =\n                this.selectedLang == 'en'\n                  ? 'Notification Added Successfully'\n                  : '通知が正常に追加されました';\n              this._ToastrManager.successToastr(successMessage);\n              this.router.navigate(['/DS/notice']);\n            }, 1000);\n          }\n        },\n        error: (e) => {},\n      });\n    } else {\n      formValues.id = this.noticeId;\n      formData.append('id', formValues.id);\n\n      this.noticeService.editNotice(formData).subscribe({\n        next: (res: any) => {\n          if (res.statusCode == 200) {\n            setTimeout(() => {\n              const successMessage =\n                this.selectedLang == 'en'\n                  ? 'Notification Updated Successfully'\n                  : '通知が正常に更新されました';\n              this._ToastrManager.successToastr(successMessage);\n              this.router.navigate(['/DS/notice']);\n            }, 1000);\n          }\n        },\n        error: (e) => {},\n      });\n    }\n  }\n\n  getNoticeDetails = () => {\n    if (this.noticeId) {\n      this.spinner.show();\n      this.noticeService.noticeView(this.noticeId).subscribe({\n        next: (res) => {\n          this.noticeDetails = res.data[0];\n\n          this.noticeDetails.image.forEach((element: any) => {\n            const path = `${this.url}/${this.noticeDetails?.type}/${element}`;\n            this.noticePreviewImages.push(path);\n          });\n\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 500);\n          this.setData(this.noticeDetails);\n        },\n        error: (err) => {},\n      });\n    }\n  };\n\n  setData(data: any) {\n    this.addNoticeForm.patchValue({\n      type: data?.type,\n      title: data?.title.en,\n      titleJa: data?.title.ja,\n      message: data?.message.en,\n      messageJa: data?.message.ja,\n      image: data?.image,\n    });\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  onCancel(): void {\n    this.submitted = false;\n    this.addNoticeForm.reset();\n  }\n\n  isSubmitDisabled() {\n    return this.addNoticeForm.pristine || this.addNoticeForm.invalid;\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h2>\n        <b *ngIf=\"noticeId\">{{ \"notice.EditNotification\" | translate }}</b>\n        <b *ngIf=\"!noticeId\">{{ \"notice.AddNotification\" | translate }}</b>\n      </h2>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'notice.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form [formGroup]=\"addNoticeForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <h4 class=\"fs-20 fw-bold\"></h4>\n              </div>\n            </div>\n\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\">{{ \"notice.Type\" | translate }}</label>\n                  <select\n                    name=\"type\"\n                    class=\"form-control\"\n                    formControlName=\"type\"\n                    (change)=\"onTypeChange($event)\"\n                  >\n                    <option selected=\"selected\" value=\"\">\n                      {{ \"notice.SelectType\" | translate }}\n                    </option>\n                    <option value=\"Notice from SDNC\">\n                      {{ \"notice.NoticefromSDNC\" | translate }}\n                    </option>\n                    <option value=\"Transportation related information\">\n                      {{\n                        \"notice.transportationRelatedInformation\" | translate\n                      }}\n                    </option>\n                    <option value=\"Notice regarding the application\">\n                      {{\n                        \"notice.noticeRegardingTheSDNCApplication\" | translate\n                      }}\n                    </option>\n                  </select>\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.type.errors && (f.type.dirty || f.type.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addNoticeForm.get('type').hasError('required')\"\n                  >\n                    {{ \"notice.Typeisrequired!\" | translate }}\n                  </label>\n                </span>\n              </div>\n            </div>\n\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"notice.Title\" | translate }}</label>\n                  <div class=\"language-toggle\">\n                    <span\n                      (click)=\"selectedLng = 'ja'\"\n                      [ngClass]=\"{ active: selectedLng === 'ja' }\"\n                      >Jap</span\n                    >\n                    <span\n                      (click)=\"selectedLng = 'en'\"\n                      [ngClass]=\"{ active: selectedLng === 'en' }\"\n                      >Eng</span\n                    >\n                  </div>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'notice.EnterTitle' | translate }}\"\n                    formControlName=\"title\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                    [hidden]=\"selectedLng !== 'en'\"\n                  />\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'notice.EnterTitle' | translate }}\"\n                    formControlName=\"titleJa\"\n                    [hidden]=\"selectedLng !== 'ja'\"\n                  />\n\n                  <span\n                    *ngIf=\"\n                      submitted ||\n                      (f.title.errors && (f.title.dirty || f.title.touched)) ||\n                      (f.titleJa.errors &&\n                        (f.titleJa.dirty || f.titleJa.touched))\n                    \"\n                  >\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectedLng === 'en' &&\n                        addNoticeForm.get('title').hasError('required')\n                      \"\n                    >\n                      {{ \"notice.Titleisrequired!\" | translate }}\n                    </label>\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectedLng === 'ja' &&\n                        addNoticeForm.get('titleJa').hasError('required')\n                      \"\n                    >\n                      {{ \"notice.Titleisrequired!\" | translate }}\n                    </label>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"notice.Description\" | translate }}</label>\n                  <div class=\"language-toggle\">\n                    <span\n                      (click)=\"selectLng = 'ja'\"\n                      [ngClass]=\"{ active: selectLng === 'ja' }\"\n                      >Jap</span\n                    >\n                    <span\n                      (click)=\"selectLng = 'en'\"\n                      [ngClass]=\"{ active: selectLng === 'en' }\"\n                      >Eng</span\n                    >\n                  </div>\n                  <textarea\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'notice.EnterDescription' | translate }}\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                    formControlName=\"message\"\n                    [hidden]=\"selectLng !== 'en'\"\n                  ></textarea>\n                  <textarea\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'notice.EnterDescription' | translate }}\"\n                    formControlName=\"messageJa\"\n                    [hidden]=\"selectLng !== 'ja'\"\n                  ></textarea>\n\n                  <span\n                    *ngIf=\"\n                      submitted ||\n                      (f.message.errors &&\n                        (f.message.dirty || f.message.touched)) ||\n                      (f.messageJa.errors &&\n                        (f.messageJa.dirty || f.messageJa.touched))\n                    \"\n                  >\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectLng === 'en' &&\n                        addNoticeForm.get('message').hasError('required')\n                      \"\n                    >\n                      {{ \"notice.Descriptionisrequired!\" | translate }}\n                    </label>\n\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectLng === 'ja' &&\n                        addNoticeForm.get('messageJa').hasError('required')\n                      \"\n                    >\n                      {{ \"notice.Descriptionisrequired!\" | translate }}\n                    </label>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label for=\"\">{{ \"notice.Image\" | translate }}</label>\n                  <div class=\"upload-img\" (click)=\"openImageSelector()\">\n                    <i class=\"fa fa-camera action_btn\" aria-hidden=\"true\"></i>\n                    <span class=\"action_btn\" style=\"cursor: pointer\">\n                      {{ \"notice.UploadImages\" | translate }}</span\n                    >\n                    <input\n                      type=\"file\"\n                      style=\"display: none\"\n                      class=\"btn chngPic file-upload\"\n                      accept=\"image/*\"\n                      name=\"file\"\n                      id=\"file\"\n                      (change)=\"onFileChanged($event)\"\n                      formControlName=\"image\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div\n                    class=\"col-md-6 image_area\"\n                    *ngFor=\"\n                      let previewImage of noticePreviewImages;\n                      let i = index\n                    \"\n                  >\n                    <img\n                      class=\"preview-img\"\n                      [src]=\"previewImage\"\n                      alt=\"\"\n                      height=\"60px\"\n                      width=\"80px\"\n                    />\n                    <em\n                      class=\"fa fa-times-circle remove_icon\"\n                      style=\"\n                        font-size: 15px;\n                        color: rgb(255, 17, 0);\n                        margin-top: 0px;\n                        position: absolute;\n                        margin-left: -15px;\n                        font-weight: bold;\n                      \"\n                      (click)=\"removeImages(previewImage)\"\n                      height=\"10px\"\n                    ></em>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <!-- </div> -->\n\n          <div class=\"pl-3 mt-3\">\n            <p style=\"color: black\">\n              <b>{{ selectedLang === \"en\" ? \"Note:\" : \"注記:\" }}</b>\n              {{ \"note.note\" | translate }}\n            </p>\n          </div>\n\n          <div\n            class=\"card-footer footer-btn-block border-0 bg-transparent\"\n            style=\"margin-left: -0.5%\"\n          >\n            <button\n              class=\"btn btn-primary graident btn-small custom-button\"\n              [disabled]=\"isSubmitDisabled()\"\n              type=\"submit\"\n              *ngIf=\"noticeId\"\n            >\n              {{ \"notice.Update\" | translate }}\n            </button>\n            <button\n              class=\"btn btn-primary graident btn-small custom-button\"\n              [disabled]=\"isSubmitDisabled()\"\n              type=\"submit\"\n              *ngIf=\"!noticeId\"\n            >\n              {{ \"notice.AddNotification\" | translate }}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary btn-small custom-button mt-2 mt-sm-0 ml-sm-2\"\n              (click)=\"onCancel()\"\n            >\n              {{ \"notice.Cancel\" | translate }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NoticeService } from 'src/app/_service/notice.service';\nimport Swal from 'sweetalert2';\nimport { Subject } from 'rxjs';\nimport { FunctionService } from 'src/app/_service/function.service';\nimport { DataTableDirective } from 'angular-datatables';\nimport { SortDirection } from '@swimlane/ngx-datatable';\nimport { UserAuthService } from 'src/app/_service/user-auth.service';\n\n@Component({\n  selector: 'app-notice-listing',\n  templateUrl: './notice-listing.component.html',\n  styleUrls: ['./notice-listing.component.css'],\n})\nexport class NoticeListingComponent implements OnInit {\n  noticeList: any[] = [];\n  notice_id: any = '';\n  totaldocs: number = 10;\n  page: number = 1;\n  count = 10;\n  data: any;\n  deleteNotice: any;\n\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement!: DataTableDirective;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject<any>();\n  public filterTerm!: string;\n\n  // Define a property to hold the current sorting parameters\n  sortColumn: string = '';\n  sortDirection: SortDirection = SortDirection.asc;\n\n  //datatable\n  dropdownList: any = [];\n  selectedItems: any = [];\n  dropdownSettings = {};\n  public selectedLang: any = 'en';\n\n  constructor(\n    private _FunctionService: FunctionService,\n    private spinner: NgxSpinnerService,\n    private _ToastrManager: ToastrManager,\n    private route: ActivatedRoute,\n    private noticeService: NoticeService,\n    private _userAuthService: UserAuthService\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.notice_id = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.selectedLang = localStorage.getItem('selectedLang');\n    this.dtOptions = {};\n    this._FunctionService.loadScript('clinic_page.js');\n    this.getNoticeList(1);\n    this.dropdownList = [\n      { id: 'type', itemName: this.selectedLang == 'en' ? 'Type' : 'タイプ' },\n      {\n        id: this.selectedLang == 'en' ? 'title.en' : 'title.ja',\n        itemName: this.selectedLang == 'en' ? 'Title' : 'タイトル',\n      },\n      {\n        id: this.selectedLang == 'en' ? 'message.en' : 'message.ja',\n        itemName: this.selectedLang == 'en' ? 'Description' : '説明',\n      },\n    ];\n    this.selectedItems = this._userAuthService.getSearchList('notice');\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      text: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      selectAllText: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      unSelectAllText:\n        this.selectedLang == 'en' ? 'UnSelect All' : 'すべて選択を解除',\n      enableSearchFilter: true,\n      classes: 'myclass custom-class multiselect-dropdown-blc',\n    };\n  }\n\n  getNoticeList = (page?: any) => {\n    let data = {\n      page: page ? page : this.page,\n      filter: this.filterTerm ? this.filterTerm : '',\n      count: this.count,\n      scolumns: '',\n      sortColumn: this.sortColumn,\n      sortDirection: this.sortDirection == 'asc' ? 1 : -1,\n    };\n\n    this._userAuthService.getSearchList('notice').forEach((element: any) => {\n      data.scolumns =\n        data.scolumns != '' ? data.scolumns + ',' + element.id : element.id;\n    });\n\n    this.noticeService.noticeList(data).subscribe({\n      next: (res) => {\n        this.noticeList = res.data.notifications;\n        this.totaldocs = res.data.total;\n        this.page = data.page;\n        this.totaldocs = res.data.total;\n        setTimeout(() => {}, 500);\n      },\n      error: (err) => {},\n    });\n  };\n\n  pageChange(page: any) {\n    this.getNoticeList(page);\n  }\n\n  noticeDelete(noticeId: any) {\n    const cancelButtonText =\n      this.selectedLang == 'en' ? 'Cancel' : 'キャンセル';\n    const confirmButtonText = this.selectedLang == 'en' ? 'Yes' : 'はい';\n    Swal.fire({\n      title: this.selectedLang == 'en' ? 'Are you sure?' : '本気ですか？',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: confirmButtonText,\n      cancelButtonText: cancelButtonText,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.spinner.show();\n        this.noticeService.deleteNotice(noticeId).subscribe({\n          next: (res) => {\n            if (res.statusCode === 200) {\n              this.deleteNotice = res.data;\n              setTimeout(() => {\n                const successMessage =\n                  this.selectedLang === 'en'\n                    ? 'Notification Removed Successfully.'\n                    : '通知が正常に削除されました。';\n                this._ToastrManager.successToastr(successMessage);\n                this.getNoticeList(this.page);\n                this.spinner.hide();\n              }, 500);\n            }\n          },\n          error: (err) => {},\n        });\n      }\n    });\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  sort(column: string) {\n    if (this.sortColumn === column) {\n      this.sortDirection =\n        this.sortDirection === SortDirection.asc\n          ? SortDirection.desc\n          : SortDirection.asc;\n    } else {\n      this.sortDirection = SortDirection.asc;\n      this.sortColumn = column;\n    }\n    this.getNoticeList();\n  }\n\n  getPropertyByPath(obj: any, path: string): any {\n    const properties = path.split('.');\n    let value = obj;\n\n    for (const prop of properties) {\n      value = value[prop];\n      if (value === undefined) {\n        break;\n      }\n    }\n\n    return value;\n  }\n\n  onItemSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'notice',\n      searchColumns: this.selectedItems,\n    });\n  }\n  OnItemDeSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'notice',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'notice',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onDeSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'notice',\n      searchColumns: this.selectedItems,\n    });\n  }\n\n  isAscending: boolean = false;\n  isAscending1: boolean = false;\n  isAscending2: boolean = false;\n  isAscending3: boolean = false;\n\n  toggleSortDirection() {\n    this.isAscending = !this.isAscending;\n  }\n\n  toggleSortDirection1() {\n    this.isAscending1 = !this.isAscending1;\n  }\n\n  toggleSortDirection2() {\n    this.isAscending2 = !this.isAscending2;\n  }\n\n  toggleSortDirection3() {\n    this.isAscending3 = !this.isAscending3;\n  }\n  getType(type: any) {\n    if (this.selectedLang === 'en') {\n      if (type == 'Notice from SDNC') return type;\n\n      if (type == 'Transportation related information') return type;\n\n      if (type == 'Notice regarding the application') return type;\n\n      if (type == 'SDNCからのお知らせ') return 'Notice from SDNC';\n\n      if (type == '交通関連情報') return 'Transportation related information';\n\n      if (type == '応募に関するお知らせ')\n        return 'Notice regarding the application';\n    } else {\n      if (type == 'Notice from SDNC') return 'SDNCからのお知らせ';\n\n      if (type == 'Transportation related information') return '交通関連情報';\n\n      if (type == 'Notice regarding the application')\n        return '応募に関するお知らせ';\n\n      if (type == 'SDNCからのお知らせ') return type;\n\n      if (type == '交通関連情報') return type;\n\n      if (type == '応募に関するお知らせ') return type;\n    }\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h3>\n        <b>{{ \"notice.NotificationManagement\" | translate }}</b>\n      </h3>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'notice.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"main-sorting-header\">\n        <div class=\"sorting-block\">\n          <div class=\"select-block\">\n            <angular2-multiselect\n              [data]=\"dropdownList\"\n              [(ngModel)]=\"selectedItems\"\n              [settings]=\"dropdownSettings\"\n              (onSelect)=\"onItemSelect($event)\"\n              (onDeSelect)=\"OnItemDeSelect($event)\"\n              (onSelectAll)=\"onSelectAll($event)\"\n              (onDeSelectAll)=\"onDeSelectAll($event)\"\n            ></angular2-multiselect>\n          </div>\n          <div class=\"search-block\">\n            <div class=\"input-group add-on mb-0\">\n              <button class=\"btn btn-default srch-icon\" type=\"submit\">\n                <i class=\"fa-solid fa-magnifying-glass\"></i>\n              </button>\n              <input\n                class=\"form-control\"\n                placeholder=\"{{ 'notice.Searchnotification' | translate }}\"\n                name=\"srch-term\"\n                id=\"srch-term\"\n                type=\"text\"\n                [(ngModel)]=\"filterTerm\"\n                (keyup)=\"getNoticeList()\"\n                autocomplete=\"off\"\n              />\n              <div class=\"input-group-btn\"></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"sorting-button\">\n          <a\n            [routerLink]=\"['/DS/notice/notice-add']\"\n            class=\"btn-login btn btn-primary btn-block btn-pad-top-bot-4\"\n            ><i class=\"fa-solid fa-circle-plus\"></i>\n            {{ \"notice.AddNotification\" | translate }}</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-lg-12\">\n          <div class=\"table-responsive\">\n            <table\n              datatable\n              [dtOptions]=\"dtOptions\"\n              [dtTrigger]=\"dtTrigger\"\n              class=\"table table-bordered table-sm table-striped table-hover dt-responsive nowrap\"\n              style=\"width: 100%\"\n            >\n              <thead>\n                <tr>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection(); sort('type')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"notice.Type\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection1(); sort('title.en')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"notice.Title\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending1\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending1\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection2(); sort('message.en')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"notice.Description\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending2\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending2\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center sortable\"\n                    (click)=\"toggleSortDirection3(); sort('createdAt')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"notice.Date\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending3\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending3\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th class=\"text-center\" style=\"width: 160px\">\n                    {{ \"notice.Action\" | translate }}\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  *ngFor=\"\n                    let element of noticeList\n                      | paginate\n                        : {\n                            itemsPerPage: count,\n                            currentPage: page,\n                            id: 'second',\n                            totalItems: totaldocs\n                          }\n                  \"\n                ></tr>\n                <tr *ngFor=\"let element of noticeList | filter : filterTerm\">\n                  <td>{{ getType(element.type) }}</td>\n                  <td>{{ element.title[selectedLang] }}</td>\n                  <td style=\"width: 400px\">\n                    {{ element.message[selectedLang] }}\n                  </td>\n                  <!-- <td>{{ element.createdAt | date : \"dd/MM/yyyy\" }}</td> -->\n                  <td>{{ element.createdAt | date : \"yyyy/MM/dd\" }}</td>\n                  <td class=\"text-center\" style=\"width: 150px\">\n                    <ul class=\"care-path-right-icon pt-0\">\n                      <li>\n                        <a\n                          [routerLink]=\"['/DS/notice/notice-view', element._id]\"\n                          title=\"View\"\n                          ><i class=\"fa-solid fa-eye\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a\n                          [routerLink]=\"['/DS/notice/notice-edit', element._id]\"\n                          title=\"Edit\"\n                          ><i class=\"fa-solid fa-pencil\"></i\n                        ></a>\n                      </li>\n                      <li>\n                        <a (click)=\"noticeDelete(element._id)\" title=\"Delete\"\n                          ><i class=\"fa-solid fa-trash-can\"></i\n                        ></a>\n                      </li>\n                    </ul>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <p class=\"text-center\" *ngIf=\"totaldocs == 0\">\n              {{ \"common.NoResultsFound\" | translate }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"totaldocs > 10\">\n        <div class=\"col-sm-6 text-left\">\n          <pagination-controls\n            (pageChange)=\"pageChange($event)\"\n            id=\"second\"\n            previousLabel=\"{{ 'notice.Previous' | translate }}\"\n            nextLabel=\"{{ 'notice.Next' | translate }}\"\n          >\n          </pagination-controls>\n        </div>\n        <div class=\"col-sm-6 text-right\" *ngIf=\"totaldocs > 10\">\n          <label for=\"entries\"\n            >{{ \"notice.NumberofEntries\" | translate }} :&nbsp;</label\n          >\n          <select\n            id=\"entries\"\n            [(ngModel)]=\"count\"\n            (ngModelChange)=\"getNoticeList(1)\"\n          >\n            <option value=\"10\" *ngIf=\"totaldocs >= 10\">10</option>\n            <option value=\"20\" *ngIf=\"totaldocs >= 20\">20</option>\n            <option value=\"30\" *ngIf=\"totaldocs >= 30\">30</option>\n            <option value=\"40\" *ngIf=\"totaldocs >= 40\">40</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NoticeListingComponent } from './notice-listing/notice-listing.component';\nimport { NoticeAddComponent } from './notice-add/notice-add.component';\nimport { NoticeViewComponent } from './notice-view/notice-view.component';\n\nconst routes: Routes = [\n  {path: \"\",component: NoticeListingComponent },\n  {path: 'notice-listing',component: NoticeListingComponent },\n  {path: 'notice-add',component: NoticeAddComponent },\n  {path: 'notice-view/:id',component: NoticeViewComponent },\n  {path: 'notice-edit/:id',component: NoticeAddComponent }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NoticeRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { NoticeService } from 'src/app/_service/notice.service';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-notice-view',\n  templateUrl: './notice-view.component.html',\n  styleUrls: ['./notice-view.component.css'],\n})\nexport class NoticeViewComponent implements OnInit {\n  notice_id: any = '';\n  image: any;\n  url: string = environment.image_url;\n  noticePreviewImages: any = [];\n  selectLng: any;\n  selectedLng: any;\n  selectedLang: any = 'ja';\n  sliderData: any = [];\n\n  constructor(\n    private noticeService: NoticeService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.notice_id = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.getNoticeView();\n    this.selectedLang = localStorage.getItem('selectedLang');\n    if (this.selectedLang === 'en') {\n      this.selectedLng = 'en';\n      this.selectLng = 'en';\n    } else {\n      this.selectedLng = 'ja';\n      this.selectLng = 'ja';\n    }\n  }\n\n  noticeDetails: any;\n  getNoticeView = () => {\n    this.spinner.show();\n    this.noticeService.noticeView(this.notice_id).subscribe({\n      next: (res) => {\n        this.noticeDetails = res.data[0];\n        this.image = res.data[0].image;\n        let index = 0;\n        this.image.forEach((element: any) => {\n          const path = `${this.url}/${this.noticeDetails?.type}/${element}`;\n          this.noticePreviewImages.push(path);\n          this.sliderData.push({ index: index, src: path });\n          index = index + 1;\n        });\n        setTimeout(() => {\n          this.spinner.hide();\n        }, 500);\n      },\n      error: (err) => {},\n    });\n  };\n\n  goBack() {\n    window.history.back();\n  }\n\n  getType(str: any): string {\n    let translatedString = str;\n    if (this.selectedLang == 'ja') {\n      if (str === 'Notice from SDNC') return 'SDNCからのお知らせ';\n\n      if (str === 'Transportation related information') return '交通関連情報';\n\n      if (str === 'Notice regarding the application')\n        return 'アプリケーションに関するお知らせ';\n\n      if (str === 'Weather') return '天気';\n\n      if (str === 'Road Construction') return '道路工事';\n\n      if (str === 'Other') return '他の';\n    } else {\n    }\n    return translatedString;\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h2>\n        <b>{{ \"notice.Notificationdetail\" | translate }}</b>\n      </h2>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'notice.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form>\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\"\n                    ><b>{{ \"notice.Type\" | translate }}</b></label\n                  >\n                  <p>{{ getType(noticeDetails?.type) }}</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\"\n                    ><b>{{ \"notice.Title\" | translate }}</b></label\n                  >\n                  <div class=\"language-toggle\">\n                    <span\n                      (click)=\"selectLng = 'ja'\"\n                      [ngClass]=\"{ active: selectLng === 'ja' }\"\n                      >Jap</span\n                    >\n                    <span\n                      (click)=\"selectLng = 'en'\"\n                      [ngClass]=\"{ active: selectLng === 'en' }\"\n                      >Eng</span\n                    >\n                  </div>\n                  <p>\n                    {{\n                      selectLng === \"en\"\n                        ? noticeDetails?.title.en\n                        : noticeDetails?.title.ja\n                    }}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\"\n                    ><b>{{ \"notice.Description\" | translate }}</b></label\n                  >\n                  <div class=\"language-toggle\">\n                    <span\n                      (click)=\"selectedLng = 'ja'\"\n                      [ngClass]=\"{ active: selectedLng === 'ja' }\"\n                      >Jap</span\n                    >\n                    <span\n                      (click)=\"selectedLng = 'en'\"\n                      [ngClass]=\"{ active: selectedLng === 'en' }\"\n                      >Eng</span\n                    >\n                  </div>\n                  <p>\n                    {{\n                      selectedLng === \"en\"\n                        ? noticeDetails?.message.en\n                        : noticeDetails?.message.ja\n                    }}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\"\n                    ><b>{{ \"notice.UploadedImages\" | translate }}</b></label\n                  >\n                  <div class=\"row\">\n                    <div\n                      class=\"col-md-6 image_area\"\n                      *ngFor=\"\n                        let previewImage of noticePreviewImages;\n                        let i = index\n                      \"\n                    >\n                      <a href=\"{{ previewImage }}\" target=\"_blank\">\n                        <img\n                          class=\"preview-img\"\n                          [src]=\"previewImage\"\n                          alt=\"\"\n                          height=\"60px\"\n                          width=\"80px\"\n                        />\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NoticeRoutingModule } from './notice-routing.module';\nimport { NoticeListingComponent } from './notice-listing/notice-listing.component';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NoticeAddComponent } from './notice-add/notice-add.component';\nimport { NoticeViewComponent } from './notice-view/notice-view.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    NoticeListingComponent,\n    NoticeAddComponent,\n    NoticeViewComponent,\n  ],\n  imports: [\n    CommonModule,\n    NoticeRoutingModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule,\n    AngularMultiSelectModule,\n    TranslateModule,\n  ],\n})\nexport class NoticeModule {}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}