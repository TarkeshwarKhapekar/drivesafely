{"version":3,"file":"src_app_finaljudgement_finaljudgement_module_ts.js","mappings":"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","sources":["./src/app/finaljudgement/finaljudgement-add/finaljudgement-add.component.ts","./src/app/finaljudgement/finaljudgement-add/finaljudgement-add.component.html","./src/app/finaljudgement/finaljudgement-list/finaljudgement-list.component.ts","./src/app/finaljudgement/finaljudgement-list/finaljudgement-list.component.html","./src/app/finaljudgement/finaljudgement-routing.module.ts","./src/app/finaljudgement/finaljudgement.module.ts"],"sourcesContent":["import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { JudgementService } from 'src/app/_service/judgement.service';\n\n@Component({\n  selector: 'app-finaljudgement-add',\n  templateUrl: './finaljudgement-add.component.html',\n  styleUrls: ['./finaljudgement-add.component.css'],\n})\nexport class FinaljudgementAddComponent implements OnInit {\n  public typeChange: EventEmitter<string> = new EventEmitter<string>();\n  public selectedType: any;\n\n  addConfigForm: any = FormGroup;\n  configId: any;\n  configDetails: any;\n  submitted = false;\n  selectedLng: any;\n  selectLng: any;\n  selectsLng: any;\n  isChecked: boolean = false;\n  isCheckedd: boolean = false;\n  selectedLang = localStorage.getItem('selectedLang');\n\n  constructor(\n    private fb: FormBuilder,\n    private _ToastrManager: ToastrManager,\n    private judgementService: JudgementService,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.route.paramMap.subscribe((params) => {\n      this.configId = params.get('id');\n    });\n  }\n\n  ngOnInit(): void {\n    this.getQolDetails();\n    this.formValidation();\n    this.selectedLang = localStorage.getItem('selectedLang');\n    if (this.selectedLang === 'en') {\n      this.selectedLng = 'en';\n      this.selectLng = 'en';\n      this.selectsLng = 'en';\n    } else {\n      this.selectedLng = 'ja';\n      this.selectLng = 'ja';\n      this.selectsLng = 'ja';\n    }\n  }\n\n  formValidation() {\n    this.addConfigForm = this.fb.group({\n      min_value: ['', [Validators.required]],\n      max_value: ['', [Validators.required]],\n      level: ['', [Validators.required]],\n      levelJa: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      descriptionJa: ['', [Validators.required]],\n      title: ['', [Validators.required]],\n      titleJa: ['', [Validators.required]],\n      colorCode: [''],\n      caseSleepinessJa: [''],\n      caseSleepiness: [''],\n      caseExerciseJa: [''],\n      caseExercise: [''],\n      caseStressJa: [''],\n      caseStress: [''],\n      caseReflexJa: [''],\n      caseReflex: [''],\n    });\n  }\n\n  get f() {\n    return this.addConfigForm.controls;\n  }\n\n  onSubmit() {\n    let data = this.addConfigForm.value;\n    if (!this.configId) {\n      this.judgementService.addConfig(data).subscribe({\n        next: (res: any) => {\n          if (res.statusCode == 200) {\n            setTimeout(() => {\n              const successMessage =\n                this.selectedLang === 'en'\n                  ? 'Config Added Successfully'\n                  : '構成が正常に追加されました';\n              this._ToastrManager.successToastr(successMessage);\n              this.router.navigate(['/DS/finaljudgement']);\n            }, 1000);\n          } else {\n            const errorMessage =\n              this.selectedLang === 'en'\n                ? 'Duplicate Data Detected'\n                : '重複データが検出されました';\n            this._ToastrManager.errorToastr(errorMessage);\n          }\n        },\n        error: (error) => {},\n      });\n    } else {\n      let data = this.addConfigForm.value;\n      data._id = this.configId;\n      this.judgementService.updateConfig(data).subscribe({\n        next: (res: any) => {\n          if (res.statusCode == 200) {\n            setTimeout(() => {\n              const successMessage =\n                this.selectedLang === 'en'\n                  ? 'Config Updated Successfully'\n                  : '構成が正常に更新されました';\n              this._ToastrManager.successToastr(successMessage);\n              this.router.navigate(['/DS/finaljudgement']);\n            }, 1000);\n          }\n        },\n        error: (e) => {},\n      });\n    }\n  }\n\n  getQolDetails = () => {\n    if (this.configId) {\n      this.spinner.show();\n      this.judgementService.getconfigDetails(this.configId).subscribe({\n        next: (res) => {\n          this.configDetails = res.data[0];\n          setTimeout(() => {\n            this.spinner.hide();\n          }, 500);\n\n          this.setData(this.configDetails);\n        },\n        error: (err) => {},\n      });\n    }\n  };\n\n  setData(data: any) {\n    this.addConfigForm.patchValue({\n      min_value: data?.min_value,\n      max_value: data?.max_value,\n      level: data?.level.en,\n      levelJa: data?.level.ja,\n      description: data?.description.en,\n      descriptionJa: data?.description.ja,\n      title: data?.title.en,\n      titleJa: data?.title.ja,\n      colorCode: data?.colorCode,\n\n      caseSleepinessJa: data?.comments?.sleepiness?.ja,\n      caseSleepiness: data?.comments?.sleepiness?.en,\n      caseExerciseJa: data?.comments?.exercise?.ja,\n      caseExercise: data?.comments?.exercise?.en,\n      caseStressJa: data?.comments?.stress?.ja,\n      caseStress: data?.comments?.stress?.en,\n      caseReflexJa: data?.comments?.reflex?.ja,\n      caseReflex: data?.comments?.reflex?.en,\n    });\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  onCancel(): void {\n    this.submitted = false;\n    this.addConfigForm.reset();\n  }\n\n  isSubmitDisabled() {\n    return this.addConfigForm.pristine || this.addConfigForm.invalid;\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h3>\n        <b *ngIf=\"configId\">{{ \"config.EditConfig\" | translate }}</b>\n        <b *ngIf=\"!configId\">{{ \"config.AddConfig\" | translate }}</b>\n      </h3>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'config.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n\n  <div class=\"pathway-template\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form [formGroup]=\"addConfigForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\">{{\n                    \"config.MinimumValue\" | translate\n                  }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'config.EnterMinimumValue' | translate }}\"\n                    maxlength=\"10\"\n                    formControlName=\"min_value\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.min_value.errors &&\n                      (f.min_value.dirty || f.min_value.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addConfigForm.get('min_value').hasError('required')\"\n                  >\n                    {{ \"config.Min.valueisrequired!\" | translate }}\n                  </label>\n                </span>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\">{{\n                    \"config.MaximumValue\" | translate\n                  }}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'config.EnterMaximumValue' | translate }}\"\n                    formControlName=\"max_value\"\n                  />\n                </div>\n                <span\n                  *ngIf=\"\n                    submitted ||\n                    (f.max_value.errors &&\n                      (f.max_value.dirty || f.max_value.touched))\n                  \"\n                >\n                  <label\n                    class=\"text-danger\"\n                    *ngIf=\"addConfigForm.get('max_value').hasError('required')\"\n                  >\n                    {{ \"config.Max.valueisrequired!\" | translate }}\n                  </label>\n                </span>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-4\">\n                <div class=\"form-group mb-3\">\n                  <label class=\"label\">{{\n                    \"config.ColorCode\" | translate\n                  }}</label>\n                  <input\n                    type=\"color\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'config.EnterColorCode' | translate }}\"\n                    formControlName=\"colorCode\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-6\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"config.Level\" | translate }}</label>\n                  <div class=\"language-toggle\">\n                    <span\n                      (click)=\"selectedLng = 'ja'\"\n                      [ngClass]=\"{ active: selectedLng === 'ja' }\"\n                      >Jap</span\n                    >\n                    <span\n                      (click)=\"selectedLng = 'en'\"\n                      [ngClass]=\"{ active: selectedLng === 'en' }\"\n                      >Eng</span\n                    >\n                  </div>\n                  <input\n                    type=\"text\"\n                    class=\"form-control mt-2\"\n                    placeholder=\"{{ 'config.EnterLevel' | translate }}\"\n                    formControlName=\"level\"\n                    [hidden]=\"selectedLng !== 'en'\"\n                    *ngIf=\"!this.configId\"\n                  />\n                  <input\n                    type=\"text\"\n                    class=\"form-control mt-2\"\n                    placeholder=\"{{ 'config.EnterLevel' | translate }}\"\n                    formControlName=\"level\"\n                    [hidden]=\"selectedLng !== 'en'\"\n                    readonly\n                    *ngIf=\"this.configId\"\n                  />\n\n                  <input\n                    type=\"text\"\n                    class=\"form-control mt-2\"\n                    placeholder=\"質問を入力してください\"\n                    formControlName=\"levelJa\"\n                    [hidden]=\"selectedLng !== 'ja'\"\n                    *ngIf=\"!this.configId\"\n                  />\n\n                  <input\n                    type=\"text\"\n                    class=\"form-control mt-2\"\n                    placeholder=\"質問を入力してください\"\n                    formControlName=\"levelJa\"\n                    [hidden]=\"selectedLng !== 'ja'\"\n                    readonly\n                    *ngIf=\"this.configId\"\n                  />\n\n                  <span\n                    *ngIf=\"\n                      submitted ||\n                      (f.level.errors && (f.level.dirty || f.level.touched)) ||\n                      (f.levelJa.errors &&\n                        (f.levelJa.dirty || f.levelJa.touched))\n                    \"\n                  >\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectedLng == 'en' &&\n                        addConfigForm.get('level').hasError('required')\n                      \"\n                    >\n                      {{ \"config.Levelisrequired!\" | translate }}\n                    </label>\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectedLng == 'ja' &&\n                        addConfigForm.get('levelJa').hasError('required')\n                      \"\n                    >\n                      {{ \"config.Levelisrequired!\" | translate }}\n                    </label>\n                  </span>\n                </div>\n              </div>\n              <div class=\"col-12 col-md-6 col-lg-6\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"config.Title\" | translate }}</label>\n                  <div class=\"language-toggle\">\n                    <span\n                      (click)=\"selectsLng = 'ja'\"\n                      [ngClass]=\"{ active: selectsLng === 'ja' }\"\n                      >Jap</span\n                    >\n                    <span\n                      (click)=\"selectsLng = 'en'\"\n                      [ngClass]=\"{ active: selectsLng === 'en' }\"\n                      >Eng</span\n                    >\n                  </div>\n                  <input\n                    type=\"text\"\n                    class=\"form-control mt-2\"\n                    placeholder=\"{{ 'config.EnterTitle' | translate }}\"\n                    formControlName=\"title\"\n                    [hidden]=\"selectsLng !== 'en'\"\n                  />\n\n                  <input\n                    type=\"text\"\n                    class=\"form-control mt-2\"\n                    placeholder=\"質問を入力してください\"\n                    formControlName=\"titleJa\"\n                    [hidden]=\"selectsLng !== 'ja'\"\n                  />\n\n                  <span\n                    *ngIf=\"\n                      submitted ||\n                      (f.title.errors && (f.title.dirty || f.title.touched)) ||\n                      (f.titleJa.errors &&\n                        (f.titleJa.dirty || f.titleJa.touched))\n                    \"\n                  >\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectsLng == 'en' &&\n                        addConfigForm.get('title').hasError('required')\n                      \"\n                    >\n                      {{ \"config.Titleisrequired!\" | translate }}\n                    </label>\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectsLng == 'ja' &&\n                        addConfigForm.get('titleJa').hasError('required')\n                      \"\n                    >\n                      {{ \"config.Titleisrequired!\" | translate }}\n                    </label>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"container-fluid\">\n            <div class=\"row mt-4\">\n              <div class=\"col-12 col-md-6 col-lg-12\">\n                <div class=\"form-group mb-3\">\n                  <label>{{ \"config.Description\" | translate }}</label>\n                  <div class=\"language-toggle\">\n                    <span\n                      (click)=\"selectLng = 'ja'\"\n                      [ngClass]=\"{ active: selectLng === 'ja' }\"\n                      >Jap</span\n                    >\n                    <span\n                      (click)=\"selectLng = 'en'\"\n                      [ngClass]=\"{ active: selectLng === 'en' }\"\n                      >Eng</span\n                    >\n                  </div>\n                  <textarea\n                    rows=\"2\"\n                    type=\"text\"\n                    class=\"form-control mt-2\"\n                    placeholder=\"{{ 'config.EnterDescription' | translate }}\"\n                    [ngClass]=\"{ 'form-submitted': submitted }\"\n                    formControlName=\"description\"\n                    [hidden]=\"selectLng !== 'en'\"\n                  ></textarea>\n\n                  <span\n                    *ngIf=\"\n                      submitted ||\n                      (f.description.errors &&\n                        (f.description.dirty || f.description.touched)) ||\n                      (f.descriptionJa.errors &&\n                        (f.descriptionJa.dirty || f.descriptionJa.touched))\n                    \"\n                  >\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectLng == 'en' &&\n                        addConfigForm.get('description').hasError('required')\n                      \"\n                    >\n                      {{ \"config.Descriptionisrequired!\" | translate }}\n                    </label>\n                    <label\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        selectLng == 'ja' &&\n                        addConfigForm.get('descriptionJa').hasError('required')\n                      \"\n                    >\n                      {{ \"config.Descriptionisrequired!\" | translate }}\n                    </label>\n                  </span>\n                  <textarea\n                    type=\"text\"\n                    rows=\"2\"\n                    class=\"form-control mt-2\"\n                    placeholder=\"質問を入力してください\"\n                    formControlName=\"descriptionJa\"\n                    [hidden]=\"selectLng !== 'ja'\"\n                  >\n                  </textarea>\n\n                  <span\n                    *ngIf=\"\n                      addConfigForm.get('level').value == 'Level 1' ||\n                      addConfigForm.get('level').value == 'Level 2' ||\n                      addConfigForm.get('level').value == 'Level 3'\n                    \"\n                  >\n                    <label style=\"margin-top: 10px\">{{\n                      \"config.commentSleepiness\" | translate\n                    }}</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control mt-2\"\n                      placeholder=\"眠気のコメントを入力します。\"\n                      formControlName=\"caseSleepinessJa\"\n                      [hidden]=\"selectLng !== 'ja'\"\n                    />\n                    <input\n                      type=\"text\"\n                      class=\"form-control mt-2\"\n                      placeholder=\"Enter a comment for sleepiness\"\n                      formControlName=\"caseSleepiness\"\n                      [hidden]=\"selectLng !== 'en'\"\n                    />\n                    <label style=\"margin-top: 10px\">{{\n                      \"config.commentExercise\" | translate\n                    }}</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control mt-2\"\n                      placeholder=\"演習のコメントを入力してください\"\n                      formControlName=\"caseExerciseJa\"\n                      [hidden]=\"selectLng !== 'ja'\"\n                    />\n                    <input\n                      type=\"text\"\n                      class=\"form-control mt-2\"\n                      placeholder=\"Enter a comment for exercise\"\n                      formControlName=\"caseExercise\"\n                      [hidden]=\"selectLng !== 'en'\"\n                    />\n\n                    <label style=\"margin-top: 10px\">{{\n                      \"config.commentStress\" | translate\n                    }}</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control mt-2\"\n                      placeholder=\"ストレスに関するコメントを入力してください\"\n                      formControlName=\"caseStressJa\"\n                      [hidden]=\"selectLng !== 'ja'\"\n                    />\n                    <input\n                      type=\"text\"\n                      class=\"form-control mt-2\"\n                      placeholder=\"Enter a comment for stress\"\n                      formControlName=\"caseStress\"\n                      [hidden]=\"selectLng !== 'en'\"\n                    />\n                    <label style=\"margin-top: 10px\">{{\n                      \"config.commentReflex\" | translate\n                    }}</label>\n                    <input\n                      type=\"text\"\n                      class=\"form-control mt-2\"\n                      placeholder=\"Reflex のコメントを入力してください\"\n                      formControlName=\"caseReflexJa\"\n                      [hidden]=\"selectLng !== 'ja'\"\n                    />\n                    <input\n                      type=\"text\"\n                      class=\"form-control mt-2\"\n                      placeholder=\"Enter a comment for Reflex\"\n                      formControlName=\"caseReflex\"\n                      [hidden]=\"selectLng !== 'en'\"\n                    />\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"pl-3 mt-3\">\n            <p style=\"color: black\">\n              <b>{{ selectedLang === \"en\" ? \"Note:\" : \"注記:\" }}</b>\n              {{ \"note.note\" | translate }}\n            </p>\n          </div>\n\n          <div\n            class=\"card-footer footer-btn-block border-0 bg-transparent\"\n            style=\"margin-left: -0.5%\"\n          >\n            <button\n              class=\"btn btn-primary graident btn-small custom-button\"\n              [disabled]=\"isSubmitDisabled()\"\n              type=\"submit\"\n              *ngIf=\"configId\"\n            >\n              {{ \"config.Update\" | translate }}\n            </button>\n            <button\n              class=\"btn btn-primary graident btn-small custom-button\"\n              [disabled]=\"isSubmitDisabled()\"\n              type=\"submit\"\n              *ngIf=\"!configId\"\n            >\n              {{ \"config.AddConfig\" | translate }}\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary btn-small custom-button mt-2 mt-sm-0 ml-sm-2\"\n              (click)=\"onCancel()\"\n            >\n              {{ \"config.Cancel\" | translate }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\nimport { JudgementService } from 'src/app/_service/judgement.service';\nimport { SortDirection } from '@swimlane/ngx-datatable';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserAuthService } from 'src/app/_service/user-auth.service';\n\n@Component({\n  selector: 'app-finaljudgement-list',\n  templateUrl: './finaljudgement-list.component.html',\n  styleUrls: ['./finaljudgement-list.component.css'],\n})\nexport class FinaljudgementListComponent implements OnInit {\n  finalJudgementList: any[] = [];\n  totaldocs: number = 10;\n  page: number = 1;\n  count = 5;\n  data: any;\n  deleteQol: any;\n\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement!: DataTableDirective;\n\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject<any>();\n  public filterTerm!: string;\n  sortColumn: string = '';\n  sortDirection: SortDirection = SortDirection.asc;\n  dropdownList: any = [];\n  selectedItems: any = [];\n  dropdownSettings = {};\n  public selectedLang: any = 'en';\n\n  public translatedPlaceholder: any;\n  constructor(\n    private judgementService: JudgementService,\n    private translateService: TranslateService,\n    private _userAuthService: UserAuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.selectedLang = localStorage.getItem('selectedLang');\n\n    this.translatedPlaceholder = this.translateService.instant('config.Search');\n    this.dtOptions = {};\n    this.getFinalJudgementList();\n    this.dropdownList = [\n      {\n        id: this.selectedLang == 'en' ? 'level.en' : 'level.ja',\n        itemName: this.selectedLang == 'en' ? 'Level' : 'レベル',\n      },\n      {\n        id: this.selectedLang == 'en' ? 'title.en' : 'title.ja',\n        itemName: this.selectedLang == 'en' ? 'Title' : 'タイトル',\n      },\n      {\n        id: this.selectedLang == 'en' ? 'description.en' : 'description.ja',\n        itemName: this.selectedLang == 'en' ? 'Description' : '説明',\n      },\n      {\n        id: 'min_value',\n        itemName: this.selectedLang == 'en' ? 'Min. Value' : '分。価値',\n      },\n      {\n        id: 'max_value',\n        itemName: this.selectedLang == 'en' ? 'Max. Value' : '最大。価値',\n      },\n    ];\n    this.selectedItems = this._userAuthService.getSearchList('judgements');\n    this.dropdownSettings = {\n      singleSelection: false,\n      text: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      selectAllText: this.selectedLang == 'en' ? 'Select All' : 'すべて選択',\n      unSelectAllText:\n        this.selectedLang == 'en' ? 'UnSelect All' : 'すべて選択を解除',\n      enableSearchFilter: true,\n      classes: 'myclass custom-class multiselect-dropdown-blc',\n    };\n  }\n\n  getFinalJudgementList = (page?: any) => {\n    let data = {\n      page: page ? page : this.page,\n      filter: this.filterTerm ? this.filterTerm : '',\n      count: this.count,\n      language: this.selectedLang,\n      scolumns: '',\n      sortColumn: this.sortColumn,\n      sortDirection: this.sortDirection == 'asc' ? 1 : -1,\n    };\n\n    this._userAuthService\n      .getSearchList('judgements')\n      .forEach((element: any) => {\n        data.scolumns =\n          data.scolumns != '' ? data.scolumns + ',' + element.id : element.id;\n      });\n\n    this.judgementService.finalJudgementList(data).subscribe({\n      next: (res) => {\n        this.finalJudgementList = res.data.data;\n        this.totaldocs = res.data.total;\n        this.page = data.page;\n        setTimeout(() => {}, 500);\n      },\n      error: (err) => {},\n    });\n  };\n\n  sort(column: string) {\n    if (this.sortColumn === column) {\n      this.sortDirection =\n        this.sortDirection === SortDirection.asc\n          ? SortDirection.desc\n          : SortDirection.asc;\n    } else {\n      this.sortDirection = SortDirection.asc;\n      this.sortColumn = column;\n    }\n\n    this.finalJudgementList.sort((a, b) => {\n      const aValue = this.getPropertyByPath(a, this.sortColumn);\n      const bValue = this.getPropertyByPath(b, this.sortColumn);\n      if (aValue < bValue)\n        return this.sortDirection === SortDirection.asc ? -1 : 1;\n      if (aValue > bValue)\n        return this.sortDirection === SortDirection.asc ? 1 : -1;\n      return 0;\n    });\n  }\n\n  getPropertyByPath(obj: any, path: string): any {\n    const properties = path.split('.');\n    let value = obj;\n\n    for (const prop of properties) {\n      value = value[prop];\n      if (value === undefined) {\n        break;\n      }\n    }\n\n    return value;\n  }\n\n  pageChange(page: any) {\n    this.getFinalJudgementList(page);\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n  onItemSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'judgements',\n      searchColumns: this.selectedItems,\n    });\n  }\n  OnItemDeSelect(item: any) {\n    this._userAuthService.setSearchList({\n      module: 'judgements',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'judgements',\n      searchColumns: this.selectedItems,\n    });\n  }\n  onDeSelectAll(items: any) {\n    this._userAuthService.setSearchList({\n      module: 'judgements',\n      searchColumns: this.selectedItems,\n    });\n  }\n\n  isAscending: boolean = false;\n  isAscending1: boolean = false;\n  isAscending2: boolean = false;\n  isAscending3: boolean = false;\n  isAscending4: boolean = false;\n\n  toggleSortDirection() {\n    this.isAscending = !this.isAscending;\n  }\n\n  toggleSortDirection1() {\n    this.isAscending1 = !this.isAscending1;\n  }\n\n  toggleSortDirection2() {\n    this.isAscending2 = !this.isAscending2;\n  }\n\n  toggleSortDirection3() {\n    this.isAscending3 = !this.isAscending3;\n  }\n\n  toggleSortDirection4() {\n    this.isAscending4 = !this.isAscending4;\n  }\n}\n","<div class=\"wh700\">\n  <div class=\"page-title\">\n    <div class=\"title_left\">\n      <h3>\n        <b>{{ \"config.FinalJudgementThreshold\" | translate }}</b>\n      </h3>\n    </div>\n    <div class=\"title_right\">\n      <input\n        class=\"btn btn-primary graident btn-small btn-pad-top-bot-4\"\n        type=\"button\"\n        value=\"{{ 'driver.Back' | translate }}\"\n        (click)=\"goBack()\"\n        style=\"float: right\"\n      />\n    </div>\n  </div>\n  <div class=\"clearfix\"></div>\n  <div class=\"pathway-template\" *ngIf=\"false\">\n    <div class=\"container\">\n      <div class=\"main-sorting-header\">\n        <div class=\"sorting-block\">\n          <div class=\"select-block\">\n            <angular2-multiselect\n              [data]=\"dropdownList\"\n              [(ngModel)]=\"selectedItems\"\n              [settings]=\"dropdownSettings\"\n              (onSelect)=\"onItemSelect($event)\"\n              (onDeSelect)=\"OnItemDeSelect($event)\"\n              (onSelectAll)=\"onSelectAll($event)\"\n              (onDeSelectAll)=\"onDeSelectAll($event)\"\n            ></angular2-multiselect>\n          </div>\n          <div class=\"search-block\">\n            <div class=\"input-group add-on mb-0\">\n              <button class=\"btn btn-default srch-icon\" type=\"submit\">\n                <i class=\"fa-solid fa-magnifying-glass\"></i>\n              </button>\n              <input\n                class=\"form-control\"\n                [placeholder]=\"translatedPlaceholder\"\n                name=\"srch-term\"\n                id=\"srch-term\"\n                type=\"text\"\n                [(ngModel)]=\"filterTerm\"\n                (keyup)=\"getFinalJudgementList()\"\n                autocomplete=\"off\"\n              />\n              <div class=\"input-group-btn\"></div>\n            </div>\n          </div>\n        </div>\n        <div class=\"sorting-button\" *ngIf=\"false\">\n          <button\n            [routerLink]=\"['/DS/finaljudgement/judgement-add']\"\n            [disabled]=\"finalJudgementList.length === 5\"\n            class=\"btn-login btn btn-primary btn-block btn-pad-top-bot-4\"\n          >\n            <i class=\"fa-solid fa-circle-plus\"></i>\n            {{ \"config.AddConfig\" | translate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"pathway-template\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-lg-12\">\n          <div class=\"table-responsive\">\n            <table\n              datatable\n              class=\"table table-bordered table-sm table-striped table-hover dt-responsive nowrap\"\n              style=\"width: 100%\"\n            >\n              <thead>\n                <tr>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection(); sort('level.en')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"config.Level\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection1(); sort('title.en')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"config.Title\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending1\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending1\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection2(); sort('description.en')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"config.Description\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending2\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending2\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection3(); sort('min_value')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"config.MinValue\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending3\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending3\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th\n                    class=\"text-center\"\n                    (click)=\"toggleSortDirection4(); sort('max_value')\"\n                  >\n                    <div class=\"sort-cell-wrapper d-flex\">\n                      {{ \"config.MaxValue\" | translate }}\n                      <span\n                        class=\"sort-cell d-inline-flex flex-column justify-content-center\"\n                      >\n                        <span *ngIf=\"!isAscending4\" class=\"up\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_up.svg\"\n                            alt=\"arrow-up\"\n                          />\n                        </span>\n                        <span *ngIf=\"isAscending4\" class=\"down\">\n                          <img\n                            class=\"img-fluid\"\n                            src=\"../../../assets/img/arrow_drop_down.svg\"\n                            alt=\"arrow-down\"\n                          />\n                        </span>\n                      </span>\n                    </div>\n                  </th>\n                  <th class=\"text-center\">{{ \"config.Action\" | translate }}</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr\n                  *ngFor=\"\n                    let element of finalJudgementList\n                      | paginate\n                        : {\n                            itemsPerPage: count,\n                            currentPage: page,\n                            id: 'second',\n                            totalItems: totaldocs\n                          }\n                  \"\n                ></tr>\n                <tr\n                  *ngFor=\"\n                    let element of finalJudgementList | filter : filterTerm\n                  \"\n                >\n                  <td style=\"width: 100px\">\n                    {{ element.level[selectedLang] }}\n                  </td>\n                  <td style=\"width: 200px\">\n                    {{ element.title[selectedLang] }}\n                  </td>\n                  <td class=\"text-capitalize\">\n                    {{ element.description[selectedLang] }}\n                  </td>\n                  <td style=\"width: 120px\">{{ element.min_value }}</td>\n                  <td style=\"width: 120px\">{{ element.max_value }}</td>\n                  <td class=\"text-center\">\n                    <ul class=\"care-path-right-icon pt-0\">\n                      <li>\n                        <a\n                          [routerLink]=\"[\n                            '/DS/finaljudgement/judgement-update',\n                            element._id\n                          ]\"\n                          title=\"Edit\"\n                          ><i class=\"fa-solid fa-pencil\"></i\n                        ></a>\n                      </li>\n                    </ul>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <p class=\"text-center\" *ngIf=\"totaldocs == 0\">\n              {{ \"common.NoResultsFound\" | translate }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FinaljudgementListComponent } from './finaljudgement-list/finaljudgement-list.component';\nimport { FinaljudgementAddComponent } from './finaljudgement-add/finaljudgement-add.component';\n\nconst routes: Routes = [\n  {path: \"\", component: FinaljudgementListComponent },\n  {path: 'finaljudgement', component: FinaljudgementListComponent },\n  {path: 'judgement-add', component: FinaljudgementAddComponent },\n  { path: 'judgement-update/:id', component: FinaljudgementAddComponent },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FinaljudgementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FinaljudgementRoutingModule } from './finaljudgement-routing.module';\nimport { FinaljudgementListComponent } from './finaljudgement-list/finaljudgement-list.component';\nimport { FinaljudgementAddComponent } from './finaljudgement-add/finaljudgement-add.component';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { DataTablesModule } from 'angular-datatables';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    FinaljudgementListComponent,\n    FinaljudgementAddComponent,\n  ],\n  imports: [\n    CommonModule,\n    FinaljudgementRoutingModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    Ng2SearchPipeModule,\n    AngularMultiSelectModule,\n    TranslateModule \n  ]\n})\nexport class FinaljudgementModule { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}