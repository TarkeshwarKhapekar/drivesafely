{"version":3,"file":"default-node_modules_angular-datatables_index_js-node_modules_ngx-pagination_fesm2020_ngx-pag-4de769.js","mappings":"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,CAACnI,KAAN,CAAYuJ,KAAZ,CAAkB,CAACC,OAAD,EAAUjH,KAAV,KAAoBiH,OAAO,KAAKpB,UAAU,CAACI,KAAK,GAAGjG,KAAT,CAA5D,CAAP;EACH;;AAvGc;;AAyGnB0F,YAAY,CAACpD,IAAb;EAAA,iBAAyGoD,YAAzG,EAA+FxH,+DAA/F,CAAuIyF,iBAAvI;AAAA;;AACA+B,YAAY,CAACwB,KAAb,kBAD+FhJ,0DAC/F;EAAA;EAAA,MAAuGwH,YAAvG;EAAA;AAAA;;AACA;EAAA,mDAF+FxH,+DAE/F,CAA2FwH,YAA3F,EAAqH,CAAC;IAC1GlD,IAAI,EAAEa,+CADoG;IAE1GZ,IAAI,EAAE,CAAC;MACC0E,IAAI,EAAE,UADP;MAECC,IAAI,EAAE;IAFP,CAAD;EAFoG,CAAD,CAArH,EAM4B,YAAY;IAAE,OAAO,CAAC;MAAE5E,IAAI,EAAEmB;IAAR,CAAD,CAAP;EAAuC,CANjF;AAAA;AAQA;AACA;AACA;AACA;;;AACA,MAAM0D,gBAAgB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnDA;AAoDA,MAAMC,cAAc,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlEA;AAoEA;AAC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","sources":["./node_modules/angular-datatables/index.js","./node_modules/angular-datatables/src/angular-datatables.directive.js","./node_modules/angular-datatables/src/angular-datatables.module.js","./node_modules/ngx-pagination/fesm2020/ngx-pagination.mjs"],"sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public library APIs.\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input, Renderer2, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el, vcr, renderer) {\n        this.el = el;\n        this.vcr = vcr;\n        this.renderer = renderer;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function (options) {\n                _this.displayTable(options);\n            });\n        }\n        else {\n            this.displayTable(null);\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function (dtOptions) {\n        var _this = this;\n        // assign new options if provided\n        if (dtOptions) {\n            this.dtOptions = dtOptions;\n        }\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (resolvedDTOptions) {\n                // validate object\n                var isTableEmpty = Object.keys(resolvedDTOptions).length === 0 && $('tbody tr', _this.el.nativeElement).length === 0;\n                if (isTableEmpty) {\n                    reject('Both the table and dtOptions cannot be empty');\n                    return;\n                }\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (resolvedDTOptions.columns) {\n                                var columns = resolvedDTOptions.columns;\n                                _this.applyNgPipeTransform(row, columns);\n                                _this.applyNgRefTemplate(row, columns, data);\n                            }\n                            // run user specified row callback if provided.\n                            if (resolvedDTOptions.rowCallback) {\n                                resolvedDTOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, resolvedDTOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.prototype.applyNgPipeTransform = function (row, columns) {\n        // Filter columns with pipe declared\n        var colsWithPipe = columns.filter(function (x) { return x.ngPipeInstance && !x.ngTemplateRef; });\n        colsWithPipe.forEach(function (el) {\n            var pipe = el.ngPipeInstance;\n            var pipeArgs = el.ngPipeArgs || [];\n            // find index of column using `data` attr\n            var i = columns.findIndex(function (e) { return e.data === el.data; });\n            // get <td> element which holds data using index\n            var rowFromCol = row.childNodes.item(i);\n            // Transform data with Pipe and PipeArgs\n            var rowVal = $(rowFromCol).text();\n            var rowValAfter = pipe.transform.apply(pipe, __spreadArray([rowVal], pipeArgs, false));\n            // Apply transformed string to <td>\n            $(rowFromCol).text(rowValAfter);\n        });\n    };\n    DataTableDirective.prototype.applyNgRefTemplate = function (row, columns, data) {\n        var _this = this;\n        // Filter columns using `ngTemplateRef`\n        var colsWithTemplate = columns.filter(function (x) { return x.ngTemplateRef && !x.ngPipeInstance; });\n        colsWithTemplate.forEach(function (el) {\n            var _a = el.ngTemplateRef, ref = _a.ref, context = _a.context;\n            // get <td> element which holds data using index\n            var i = columns.findIndex(function (e) { return e.data === el.data; });\n            var cellFromIndex = row.childNodes.item(i);\n            // reset cell before applying transform\n            $(cellFromIndex).html('');\n            // render onto DOM\n            // finalize context to be sent to user\n            var _context = Object.assign({}, context, context === null || context === void 0 ? void 0 : context.userData, {\n                adtData: data\n            });\n            var instance = _this.vcr.createEmbeddedView(ref, _context);\n            _this.renderer.appendChild(cellFromIndex, instance.rootNodes[0]);\n        });\n    };\n    DataTableDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTableDirective, deps: [{ token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\n    DataTableDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: DataTableDirective, selector: \"[datatable]\", inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" }, ngImport: i0 });\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTableDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[datatable]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { dtOptions: [{\n                type: Input\n            }], dtTrigger: [{\n                type: Input\n            }] } });\n","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as i0 from \"@angular/core\";\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\n    DataTablesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    DataTablesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, declarations: [DataTableDirective], imports: [CommonModule], exports: [DataTableDirective] });\n    DataTablesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, imports: [[CommonModule]] });\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DataTablesModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [DataTableDirective],\n                    exports: [DataTableDirective]\n                }]\n        }] });\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Pipe, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass PaginationService {\r\n    constructor() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    defaultId() { return this.DEFAULT_ID; }\r\n    /**\r\n     * Register a PaginationInstance with this service. Returns a\r\n     * boolean value signifying whether the instance is new or\r\n     * updated (true = new or updated, false = unchanged).\r\n     */\r\n    register(instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            return true;\r\n        }\r\n        else {\r\n            return this.updateInstance(instance);\r\n        }\r\n    }\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    updateInstance(instance) {\r\n        let changed = false;\r\n        for (let prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    }\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    getCurrentPage(id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n        return 1;\r\n    }\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    setCurrentPage(id, page) {\r\n        if (this.instances[id]) {\r\n            let instance = this.instances[id];\r\n            let maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    setTotalItems(id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    }\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    setItemsPerPage(id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    getInstance(id = this.DEFAULT_ID) {\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    }\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    clone(obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n}\n\nconst LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nclass PaginatePipe {\r\n    constructor(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    transform(collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            let _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        let serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        let instance = this.createInstance(collection, args);\r\n        let id = instance.id;\r\n        let start, end;\r\n        let perPage = instance.itemsPerPage;\r\n        let emitChange = this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            let isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                let slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        else {\r\n            if (emitChange) {\r\n                this.service.change.emit(id);\r\n            }\r\n            // save the state for server-side collection to avoid null\r\n            // flash as new data loads.\r\n            this.saveState(id, collection, collection, start, end);\r\n            return collection;\r\n        }\r\n    }\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    createInstance(collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    }\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    checkConfig(config) {\r\n        const required = ['itemsPerPage', 'currentPage'];\r\n        const missing = required.filter(prop => !(prop in config));\r\n        if (0 < missing.length) {\r\n            throw new Error(`PaginatePipe: Argument is missing the following required properties: ${missing.join(', ')}`);\r\n        }\r\n    }\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    saveState(id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection,\r\n            size: collection.length,\r\n            slice,\r\n            start,\r\n            end\r\n        };\r\n    }\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    stateIsIdentical(id, collection, start, end) {\r\n        let state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        let isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every((element, index) => element === collection[start + index]);\r\n    }\r\n}\r\nPaginatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginatePipe, deps: [{ token: PaginationService }], target: i0.ɵɵFactoryTarget.Pipe });\r\nPaginatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginatePipe, name: \"paginate\", pure: false });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginatePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'paginate',\r\n                    pure: false\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: PaginationService }]; } });\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nconst DEFAULT_TEMPLATE = `\r\n    <pagination-template  #p=\"paginationApi\"\r\n                         [id]=\"id\"\r\n                         [maxSize]=\"maxSize\"\r\n                         (pageChange)=\"pageChange.emit($event)\"\r\n                         (pageBoundsCorrection)=\"pageBoundsCorrection.emit($event)\">\r\n    <nav role=\"navigation\" [attr.aria-label]=\"screenReaderPaginationLabel\">\r\n    <ul class=\"ngx-pagination\" \r\n        [class.responsive]=\"responsive\"\r\n        *ngIf=\"!(autoHide && p.pages.length <= 1)\">\r\n\r\n        <li class=\"pagination-previous\" [class.disabled]=\"p.isFirstPage()\" *ngIf=\"directionLinks\"> \r\n            <a tabindex=\"0\" *ngIf=\"1 < p.getCurrent()\" (keyup.enter)=\"p.previous()\" (click)=\"p.previous()\">\r\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </a>\r\n            <span *ngIf=\"p.isFirstPage()\" aria-disabled=\"true\">\r\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </span>\r\n        </li> \r\n\r\n        <li class=\"small-screen\">\r\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\r\n        </li>\r\n\r\n        <li [class.current]=\"p.getCurrent() === page.value\" \r\n            [class.ellipsis]=\"page.label === '...'\"\r\n            *ngFor=\"let page of p.pages; trackBy: trackByIndex\">\r\n            <a tabindex=\"0\" (keyup.enter)=\"p.setCurrent(page.value)\" (click)=\"p.setCurrent(page.value)\" *ngIf=\"p.getCurrent() !== page.value\">\r\n                <span class=\"show-for-sr\">{{ screenReaderPageLabel }} </span>\r\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\r\n            </a>\r\n            <ng-container *ngIf=\"p.getCurrent() === page.value\">\r\n              <span aria-live=\"polite\">\r\n                <span class=\"show-for-sr\">{{ screenReaderCurrentLabel }} </span>\r\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \r\n              </span>\r\n            </ng-container>\r\n        </li>\r\n\r\n        <li class=\"pagination-next\" [class.disabled]=\"p.isLastPage()\" *ngIf=\"directionLinks\">\r\n            <a tabindex=\"0\" *ngIf=\"!p.isLastPage()\" (keyup.enter)=\"p.next()\" (click)=\"p.next()\">\r\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </a>\r\n            <span *ngIf=\"p.isLastPage()\" aria-disabled=\"true\">\r\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\r\n            </span>\r\n        </li>\r\n\r\n    </ul>\r\n    </nav>\r\n    </pagination-template>\r\n    `;\r\nconst DEFAULT_STYLES = `\r\n.ngx-pagination {\r\n  margin-left: 0;\r\n  margin-bottom: 1rem; }\r\n  .ngx-pagination::before, .ngx-pagination::after {\r\n    content: ' ';\r\n    display: table; }\r\n  .ngx-pagination::after {\r\n    clear: both; }\r\n  .ngx-pagination li {\r\n    -moz-user-select: none;\r\n    -webkit-user-select: none;\r\n    -ms-user-select: none;\r\n    margin-right: 0.0625rem;\r\n    border-radius: 0; }\r\n  .ngx-pagination li {\r\n    display: inline-block; }\r\n  .ngx-pagination a,\r\n  .ngx-pagination button {\r\n    color: #0a0a0a; \r\n    display: block;\r\n    padding: 0.1875rem 0.625rem;\r\n    border-radius: 0; }\r\n    .ngx-pagination a:hover,\r\n    .ngx-pagination button:hover {\r\n      background: #e6e6e6; }\r\n  .ngx-pagination .current {\r\n    padding: 0.1875rem 0.625rem;\r\n    background: #2199e8;\r\n    color: #fefefe;\r\n    cursor: default; }\r\n  .ngx-pagination .disabled {\r\n    padding: 0.1875rem 0.625rem;\r\n    color: #cacaca;\r\n    cursor: default; } \r\n    .ngx-pagination .disabled:hover {\r\n      background: transparent; }\r\n  .ngx-pagination a, .ngx-pagination button {\r\n    cursor: pointer; }\r\n\r\n.ngx-pagination .pagination-previous a::before,\r\n.ngx-pagination .pagination-previous.disabled::before { \r\n  content: '«';\r\n  display: inline-block;\r\n  margin-right: 0.5rem; }\r\n\r\n.ngx-pagination .pagination-next a::after,\r\n.ngx-pagination .pagination-next.disabled::after {\r\n  content: '»';\r\n  display: inline-block;\r\n  margin-left: 0.5rem; }\r\n\r\n.ngx-pagination .show-for-sr {\r\n  position: absolute !important;\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0); }\r\n.ngx-pagination .small-screen {\r\n  display: none; }\r\n@media screen and (max-width: 601px) {\r\n  .ngx-pagination.responsive .small-screen {\r\n    display: inline-block; } \r\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\r\n    display: none; }\r\n}\r\n  `;\n\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nclass PaginationControlsDirective {\r\n    constructor(service, changeDetectorRef) {\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(id => {\r\n            if (this.id === id) {\r\n                this.updatePageLinks();\r\n                this.changeDetectorRef.markForCheck();\r\n                this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    }\r\n    ngOnChanges(changes) {\r\n        this.updatePageLinks();\r\n    }\r\n    ngOnDestroy() {\r\n        this.changeSub.unsubscribe();\r\n    }\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    previous() {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    }\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    next() {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    }\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    isFirstPage() {\r\n        return this.getCurrent() === 1;\r\n    }\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    isLastPage() {\r\n        return this.getLastPage() === this.getCurrent();\r\n    }\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    setCurrent(page) {\r\n        this.pageChange.emit(page);\r\n    }\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    getCurrent() {\r\n        return this.service.getCurrentPage(this.id);\r\n    }\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    getLastPage() {\r\n        let inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    }\r\n    getTotalItems() {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    }\r\n    checkValidId() {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(`PaginationControlsDirective: the specified id \"${this.id}\" does not match any registered PaginationInstance`);\r\n        }\r\n    }\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    updatePageLinks() {\r\n        let inst = this.service.getInstance(this.id);\r\n        const correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(() => {\r\n                this.pageBoundsCorrection.emit(correctedCurrentPage);\r\n                this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    }\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    outOfBoundCorrection(instance) {\r\n        const totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    }\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    createPageArray(currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        let pages = [];\r\n        // Return 1 as default page number\r\n        // Make sense to show 1 instead of empty when there are no items\r\n        const totalPages = Math.max(Math.ceil(totalItems / itemsPerPage), 1);\r\n        const halfWay = Math.ceil(paginationRange / 2);\r\n        const isStart = currentPage <= halfWay;\r\n        const isEnd = totalPages - halfWay < currentPage;\r\n        const isMiddle = !isStart && !isEnd;\r\n        let ellipsesNeeded = paginationRange < totalPages;\r\n        let i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            let label;\r\n            let pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            let openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            let closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    }\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    calculatePageNumber(i, currentPage, paginationRange, totalPages) {\r\n        let halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    }\r\n}\r\nPaginationControlsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsDirective, deps: [{ token: PaginationService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nPaginationControlsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.9\", type: PaginationControlsDirective, selector: \"pagination-template,[pagination-template]\", inputs: { id: \"id\", maxSize: \"maxSize\" }, outputs: { pageChange: \"pageChange\", pageBoundsCorrection: \"pageBoundsCorrection\" }, exportAs: [\"paginationApi\"], usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'pagination-template,[pagination-template]',\r\n                    exportAs: 'paginationApi'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: PaginationService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { id: [{\r\n                type: Input\r\n            }], maxSize: [{\r\n                type: Input\r\n            }], pageChange: [{\r\n                type: Output\r\n            }], pageBoundsCorrection: [{\r\n                type: Output\r\n            }] } });\n\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nclass PaginationControlsComponent {\r\n    constructor() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = `You're on page`;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    get directionLinks() {\r\n        return this._directionLinks;\r\n    }\r\n    set directionLinks(value) {\r\n        this._directionLinks = coerceToBoolean(value);\r\n    }\r\n    get autoHide() {\r\n        return this._autoHide;\r\n    }\r\n    set autoHide(value) {\r\n        this._autoHide = coerceToBoolean(value);\r\n    }\r\n    get responsive() {\r\n        return this._responsive;\r\n    }\r\n    set responsive(value) {\r\n        this._responsive = coerceToBoolean(value);\r\n    }\r\n    trackByIndex(index) {\r\n        return index;\r\n    }\r\n}\r\nPaginationControlsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nPaginationControlsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.9\", type: PaginationControlsComponent, selector: \"pagination-controls\", inputs: { id: \"id\", maxSize: \"maxSize\", directionLinks: \"directionLinks\", autoHide: \"autoHide\", responsive: \"responsive\", previousLabel: \"previousLabel\", nextLabel: \"nextLabel\", screenReaderPaginationLabel: \"screenReaderPaginationLabel\", screenReaderPageLabel: \"screenReaderPageLabel\", screenReaderCurrentLabel: \"screenReaderCurrentLabel\" }, outputs: { pageChange: \"pageChange\", pageBoundsCorrection: \"pageBoundsCorrection\" }, ngImport: i0, template: \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\"\\n                         (pageBoundsCorrection)=\\\"pageBoundsCorrection.emit($event)\\\">\\n    <nav role=\\\"navigation\\\" [attr.aria-label]=\\\"screenReaderPaginationLabel\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\" aria-disabled=\\\"true\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages; trackBy: trackByIndex\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n              <span aria-live=\\\"polite\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n              </span>\\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\" aria-disabled=\\\"true\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </nav>\\n    </pagination-template>\\n    \", isInline: true, styles: [\".ngx-pagination{margin-left:0;margin-bottom:1rem}.ngx-pagination:before,.ngx-pagination:after{content:\\\" \\\";display:table}.ngx-pagination:after{clear:both}.ngx-pagination li{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;margin-right:.0625rem;border-radius:0}.ngx-pagination li{display:inline-block}.ngx-pagination a,.ngx-pagination button{color:#0a0a0a;display:block;padding:.1875rem .625rem;border-radius:0}.ngx-pagination a:hover,.ngx-pagination button:hover{background:#e6e6e6}.ngx-pagination .current{padding:.1875rem .625rem;background:#2199e8;color:#fefefe;cursor:default}.ngx-pagination .disabled{padding:.1875rem .625rem;color:#cacaca;cursor:default}.ngx-pagination .disabled:hover{background:transparent}.ngx-pagination a,.ngx-pagination button{cursor:pointer}.ngx-pagination .pagination-previous a:before,.ngx-pagination .pagination-previous.disabled:before{content:\\\"\\\\ab\\\";display:inline-block;margin-right:.5rem}.ngx-pagination .pagination-next a:after,.ngx-pagination .pagination-next.disabled:after{content:\\\"\\\\bb\\\";display:inline-block;margin-left:.5rem}.ngx-pagination .show-for-sr{position:absolute!important;width:1px;height:1px;overflow:hidden;clip:rect(0,0,0,0)}.ngx-pagination .small-screen{display:none}@media screen and (max-width: 601px){.ngx-pagination.responsive .small-screen{display:inline-block}.ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next){display:none}}\\n\"], directives: [{ type: PaginationControlsDirective, selector: \"pagination-template,[pagination-template]\", inputs: [\"id\", \"maxSize\"], outputs: [\"pageChange\", \"pageBoundsCorrection\"], exportAs: [\"paginationApi\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], pipes: { \"number\": i2.DecimalPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: PaginationControlsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'pagination-controls',\r\n                    template: DEFAULT_TEMPLATE,\r\n                    styles: [DEFAULT_STYLES],\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    encapsulation: ViewEncapsulation.None\r\n                }]\r\n        }], propDecorators: { id: [{\r\n                type: Input\r\n            }], maxSize: [{\r\n                type: Input\r\n            }], directionLinks: [{\r\n                type: Input\r\n            }], autoHide: [{\r\n                type: Input\r\n            }], responsive: [{\r\n                type: Input\r\n            }], previousLabel: [{\r\n                type: Input\r\n            }], nextLabel: [{\r\n                type: Input\r\n            }], screenReaderPaginationLabel: [{\r\n                type: Input\r\n            }], screenReaderPageLabel: [{\r\n                type: Input\r\n            }], screenReaderCurrentLabel: [{\r\n                type: Input\r\n            }], pageChange: [{\r\n                type: Output\r\n            }], pageBoundsCorrection: [{\r\n                type: Output\r\n            }] } });\n\nclass NgxPaginationModule {\r\n}\r\nNgxPaginationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgxPaginationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, declarations: [PaginatePipe,\r\n        PaginationControlsComponent,\r\n        PaginationControlsDirective], imports: [CommonModule], exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective] });\r\nNgxPaginationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, providers: [PaginationService], imports: [[CommonModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.9\", ngImport: i0, type: NgxPaginationModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [\r\n                        PaginatePipe,\r\n                        PaginationControlsComponent,\r\n                        PaginationControlsDirective\r\n                    ],\r\n                    providers: [PaginationService],\r\n                    exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-pagination\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxPaginationModule, PaginatePipe, PaginationControlsComponent, PaginationControlsDirective, PaginationService };\n"],"names":["DataTableDirective","DataTablesModule","__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","Directive","ElementRef","Input","Renderer2","ViewContainerRef","Subject","i0","el","vcr","renderer","dtOptions","ngOnInit","_this","dtTrigger","subscribe","options","displayTable","ngOnDestroy","unsubscribe","dt","destroy","dtInstance","Promise","resolve","reject","then","resolvedDTOptions","isTableEmpty","Object","keys","$","nativeElement","setTimeout","rowCallback","row","data","index","columns","applyNgPipeTransform","applyNgRefTemplate","assign","DataTable","colsWithPipe","filter","x","ngPipeInstance","ngTemplateRef","forEach","pipe","pipeArgs","ngPipeArgs","findIndex","e","rowFromCol","childNodes","item","rowVal","text","rowValAfter","transform","apply","colsWithTemplate","_a","ref","context","cellFromIndex","html","_context","userData","adtData","instance","createEmbeddedView","appendChild","rootNodes","ɵfac","ɵdir","type","args","selector","NgModule","CommonModule","forRoot","ngModule","ɵmod","ɵinj","imports","declarations","exports","EventEmitter","Pipe","Output","Component","ChangeDetectionStrategy","ViewEncapsulation","i2","PaginationService","constructor","change","instances","DEFAULT_ID","defaultId","register","id","updateInstance","changed","prop","getCurrentPage","currentPage","setCurrentPage","page","maxPage","Math","ceil","totalItems","itemsPerPage","emit","setTotalItems","setItemsPerPage","getInstance","clone","obj","target","hasOwnProperty","LARGE_NUMBER","Number","MAX_SAFE_INTEGER","PaginatePipe","service","state","collection","_id","serverSideMode","createInstance","start","end","perPage","emitChange","isIdentical","stateIsIdentical","saveState","config","checkConfig","required","missing","Error","join","size","isMetaDataIdentical","every","element","ɵpipe","name","pure","DEFAULT_TEMPLATE","DEFAULT_STYLES","PaginationControlsDirective","changeDetectorRef","maxSize","pageChange","pageBoundsCorrection","pages","changeSub","updatePageLinks","markForCheck","detectChanges","undefined","ngOnChanges","changes","previous","checkValidId","setCurrent","getCurrent","next","isFirstPage","isLastPage","getLastPage","inst","getTotalItems","console","warn","correctedCurrentPage","outOfBoundCorrection","createPageArray","totalPages","paginationRange","max","halfWay","isStart","isEnd","isMiddle","ellipsesNeeded","label","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded","push","value","ChangeDetectorRef","exportAs","coerceToBoolean","input","PaginationControlsComponent","previousLabel","nextLabel","screenReaderPaginationLabel","screenReaderPageLabel","screenReaderCurrentLabel","_directionLinks","_autoHide","_responsive","directionLinks","autoHide","responsive","trackByIndex","ɵcmp","NgIf","NgForOf","DecimalPipe","template","styles","changeDetection","OnPush","encapsulation","None","NgxPaginationModule","providers"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}